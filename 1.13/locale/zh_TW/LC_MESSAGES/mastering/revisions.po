# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../mastering/revisions.rst:2
msgid "Package Revisions"
msgstr ""

#: ../../../mastering/revisions.rst:6
msgid ""
"This is an **experimental** feature subject to breaking changes in future "
"releases."
msgstr ""

#: ../../../mastering/revisions.rst:9
msgid ""
"The goal of the `revisions feature` is to achieve package immutability, so "
"nothing in a server is ever overwritten."
msgstr ""

#: ../../../mastering/revisions.rst:13
msgid ""
"This is the first piece to achieve reproducibility: Recreate the exact "
"dependency graph by using some mechanism like a ``graph lock`` file. For "
"example, if we store a ``graph lock`` file for the different releases of our "
"project, we can install the same dependencies just by using the graph lock."
msgstr ""

#: ../../../mastering/revisions.rst:17
msgid ""
"**IMPORTANT:** The reproducibility is in the Conan roadmap and currently "
"under development."
msgstr ""

#: ../../../mastering/revisions.rst:21
msgid "How it works"
msgstr ""

#: ../../../mastering/revisions.rst:23
msgid "**In the client**"
msgstr ""

#: ../../../mastering/revisions.rst:25
msgid ""
"When a **recipe** is exported, Conan calculates a unique ID (revision). For "
"every change, a new recipe revision (RREV) will be calculated:"
msgstr ""

#: ../../../mastering/revisions.rst:28
msgid ""
"If Conan detects some control version system (Git or SVN) in the conanfile "
"directory, the commit hash will be used as the RREV."
msgstr ""

#: ../../../mastering/revisions.rst:29
msgid ""
"Otherwise, the checksum hash of the recipe manifest will be used as the RREV."
msgstr ""

#: ../../../mastering/revisions.rst:33
msgid ""
"In future versions Conan will let the user choose to use the \"recipe "
"manifest\" instead of the scm. For example, when you use a mono-repo with N "
"recipes, it is more convenient to calculate each recipe revision based on "
"its contents and not in the common github repository commit hash. (https://"
"github.com/conan-io/conan/issues/4413)"
msgstr ""

#: ../../../mastering/revisions.rst:39
msgid ""
"When a **package** is created (by running :ref:`conan create<conan_create>` "
"or :ref:`conan export-pkg<conan_export-pkg>`) a new package revision (PREV) "
"will be calculated always using the hash of the package contents. The "
"packages and their revisions (PREVs) belongs to a concrete recipe revision "
"(RREV). The same package ID (for example for Linux/GCC5/Debug), can have "
"multiple revisions (PREVs) that belong to a concrete RREV."
msgstr ""

#: ../../../mastering/revisions.rst:46
msgid ""
"If a client request a reference like `lib/1.0@conan/stable`, Conan will "
"retrieve automatically the latest revision. In the client cache there is "
"**only one revision installed at the same time**."
msgstr ""

#: ../../../mastering/revisions.rst:49
msgid ""
"The revisions can be pinned when you write a reference (in the recipe "
"requires, or in a reference in a conan install command…) but if you don’t "
"specify a revision the server will retrieve the latest revision."
msgstr ""

#: ../../../mastering/revisions.rst:52
msgid "You can specify the references in the following formats:"
msgstr ""

#: ../../../mastering/revisions.rst:55
msgid "Reference"
msgstr ""

#: ../../../mastering/revisions.rst:55
msgid "Meaning"
msgstr ""

#: ../../../mastering/revisions.rst:57
msgid "`lib/1.0@conan/stable`"
msgstr ""

#: ../../../mastering/revisions.rst:57
msgid "Latest RREV for lib/1.0@conan/stable"
msgstr ""

#: ../../../mastering/revisions.rst:59
msgid "`lib/1.0@conan/stable#RREV`"
msgstr ""

#: ../../../mastering/revisions.rst:59
msgid "Specific RREV for lib/1.0@conan/stable"
msgstr ""

#: ../../../mastering/revisions.rst:61
msgid "`lib/1.0@conan/stable#RREV:PACKAGE_ID`"
msgstr ""

#: ../../../mastering/revisions.rst:61
msgid "A binary package belonging to the specific RREV"
msgstr ""

#: ../../../mastering/revisions.rst:63
msgid "`lib/1.0@conan/stable#RREV:PACKAGE_ID#PREV`"
msgstr ""

#: ../../../mastering/revisions.rst:63
msgid "A binary package revision PREV belonging to the specific RREV"
msgstr ""

#: ../../../mastering/revisions.rst:67
msgid "**In the server**"
msgstr ""

#: ../../../mastering/revisions.rst:69
msgid ""
"By using a new folder layout and protocol it is able to store multiple "
"revisions, both for recipes and binary packages."
msgstr ""

#: ../../../mastering/revisions.rst:74
msgid "How to activate the revisions"
msgstr ""

#: ../../../mastering/revisions.rst:76
msgid "You have to explicitly activate the feature by:"
msgstr ""

#: ../../../mastering/revisions.rst:78
msgid ""
"Adding ``revisions_enabled=1`` in the ``[general]`` section of your `conan."
"conf` file."
msgstr ""

#: ../../../mastering/revisions.rst:79
msgid "Setting the ``CONAN_REVISIONS_ENABLED=1`` environment variable."
msgstr ""

#: ../../../mastering/revisions.rst:82
msgid "Take into account that it changes the default Conan behavior. e.g:"
msgstr ""

#: ../../../mastering/revisions.rst:84
msgid ""
"A client with revisions enabled will only find binary packages that belongs "
"to the installed recipe revision. For example, If you create a recipe and "
"run ``conan create . user/channel`` and then you modify the recipe and "
"export it ``conan export . user/channel``, the binary package generated in "
"the ``conan create`` command doesn't belong to the new exported recipe, so "
"it won't be located unless the previous recipe is recovered."
msgstr ""

#: ../../../mastering/revisions.rst:89
msgid ""
"If you generate and upload N binary packages for a recipe revision, if you "
"upload the revision you need to generate and upload again the N binaries if "
"you want them to be used with the new recipe."
msgstr ""

#: ../../../mastering/revisions.rst:94
msgid "Server support"
msgstr ""

#: ../../../mastering/revisions.rst:96
msgid "``conan_server`` >= 1.13."
msgstr ""

#: ../../../mastering/revisions.rst:97
msgid "``Artifactory`` coming soon."
msgstr ""

#: ../../../mastering/revisions.rst:98
msgid "``Bintray`` coming soon."
msgstr ""
