# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../howtos/other_languages_package_manager.rst:2
msgid "How to use Conan as other language package manager"
msgstr ""

#: ../../../howtos/other_languages_package_manager.rst:4
msgid ""
"Conan is a generic package manager. In the :ref:`getting started "
"<getting_started>` section we saw how to use Conan and manage a C/C++ "
"library, like POCO."
msgstr ""

#: ../../../howtos/other_languages_package_manager.rst:7
msgid ""
"But Conan just provided some tools, related to C/C++ (like some generators "
"and the cpp_info), to offer a better user experience. The general basis of "
"Conan can be used with other programming languages."
msgstr ""

#: ../../../howtos/other_languages_package_manager.rst:10
msgid ""
"Obviously, this does not try to compete with other package managers. Conan "
"is a C and C++ package manager, focused on C and C++ developers. But when we "
"realized that this was possible, we thought it was a good way to showcase "
"its power, simplicity and versatility."
msgstr ""

#: ../../../howtos/other_languages_package_manager.rst:13
msgid ""
"And of course, if you are doing C/C++ and occasionally you need some package "
"from other language in your workflow, as in the Conan package recipes "
"themselves, or for some other tooling, you might find this functionality "
"useful."
msgstr ""
