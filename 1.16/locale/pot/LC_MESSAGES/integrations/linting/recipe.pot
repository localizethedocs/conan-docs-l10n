# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/linting/recipe.rst:2
msgid "Linting the recipe"
msgstr ""

#: ../../../integrations/linting/recipe.rst:6
msgid "conanfile.py"
msgstr ""

#: ../../../integrations/linting/recipe.rst:8
msgid "The ``conan create`` command verifies the recipe file using pylint."
msgstr ""

#: ../../../integrations/linting/recipe.rst:10
msgid ""
"However, if you have an IDE that supports Python and may do linting "
"automatically, there are false warnings caused by the fact that Conan "
"dynamically populates some fields of the recipe based on context."
msgstr ""

#: ../../../integrations/linting/recipe.rst:14
msgid ""
"Conan provides a plugin which makes pylint aware of these dynamic fields and "
"their types. To use it when running pylint outside Conan, just add the "
"following to your ``.pylintrc`` file:"
msgstr ""

#: ../../../integrations/linting/recipe.rst:17
msgid ""
"[MASTER]\n"
"load-plugins=conans.pylint_plugin"
msgstr ""

#: ../../../integrations/linting/recipe.rst:24
msgid "Custom rules"
msgstr ""

#: ../../../integrations/linting/recipe.rst:26
msgid ""
"Using the :ref:`Conan hooks<hooks>` feature you can perform sanity checks to "
"your recipe."
msgstr ""

#: ../../../integrations/linting/recipe.rst:28
msgid ""
"Take a look at the `official hooks repository <https://github.com/conan-io/"
"hooks>`_ to see several examples of how to implement a linter for your "
"recipe."
msgstr ""
