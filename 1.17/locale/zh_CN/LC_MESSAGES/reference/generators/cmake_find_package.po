# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:06+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/generators/cmake_find_package.rst:5
msgid "`cmake_find_package`"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:9
msgid ""
"This is the reference page for ``cmake_find_package`` generator. Go to :ref:"
"`Integrations/CMake<cmake>` if you want to learn how to integrate your "
"project or recipes with CMake."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:13
msgid ""
"The ``cmake_find_package`` generator creates a file for each requirement "
"specified in the conanfile."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:15
msgid ""
"The name of the files follow the pattern ``Find<package_name>.cmake``. So "
"for the ``zlib/1.2.11@conan/stable`` package, a ``Findzlib.cmake`` file will "
"be generated."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:20
msgid "Variables in Find{name}.cmake"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:22
msgid "Being {name} the package name:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:25
msgid "NAME"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:25
msgid "VALUE"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:27
msgid "{name}_FOUND"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:27
msgid "Set to 1"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:29
msgid "{name}_VERSION"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:29
msgid "Package version"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:31
msgid "{name}_INCLUDE_DIRS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:31
msgid "Containing all the include directories of the package"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:33
msgid "{name}_INCLUDES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:33
msgid "Same as the XXX_INCLUDE_DIRS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:35
msgid "{name}_DEFINITIONS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:35
msgid "Definitions of the library"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:37
msgid "{name}_LIBRARIES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:37
msgid "Library paths to link"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:39
msgid "{name}_LIBS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:39
msgid "Same as XXX_LIBRARIES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:44
msgid "Target in Find<package_name>.cmake"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:46
msgid ""
"A target named ``{name}::{name}`` target is generated with the following "
"properties adjusted:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:48
msgid ""
"``INTERFACE_INCLUDE_DIRECTORIES``: Containing all the include directories of "
"the package."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:49
msgid "``INTERFACE_LINK_LIBRARIES``: Library paths to link."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:50
msgid "``INTERFACE_COMPILE_DEFINITIONS``: Definitions of the library."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:52
msgid ""
"The targets are transitive. So, if your project depends on a packages ``A`` "
"and ``B``, and at the same time ``A`` depends on ``C``, the ``A`` target "
"will contain automatically the properties of the ``C`` dependency, so in "
"your `CMakeLists.txt` file you only need to ``find_package(A)`` and "
"``find_package(B)``."
msgstr ""
