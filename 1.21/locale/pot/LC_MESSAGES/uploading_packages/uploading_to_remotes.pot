# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.21\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../uploading_packages/uploading_to_remotes.rst:2
msgid "Uploading Packages to Remotes"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:4
msgid ""
"First, check if the remote you want to upload to is already in your current "
"remote list:"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:6
msgid "$ conan remote list"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:10
msgid "You can easily add any remote. To run a remote on your machine:"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:12
msgid "$ conan remote add my_local_server http://localhost:9300"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:16
msgid ""
"You can search any remote in the same way you search your computer. "
"Actually, many Conan commands can specify a specific remote."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:19
msgid "$ conan search -r=my_local_server"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:23
msgid ""
"Now, upload the package recipe and all the packages to your remote. In this "
"example, we are using our ``my_local_server`` remote, but you could use any "
"other."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:26
msgid "$ conan upload Hello/0.1@demo/testing --all -r=my_local_server"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:30
msgid ""
"You might be prompted for a username and password. The default Conan server "
"remote has a **demo/demo** account we can use for testing."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:34
msgid ""
"The ``--all`` option will upload the package recipe plus all the binary "
"packages. Omitting the ``--all`` option will upload the package recipe "
"*only*. For fine-grained control over which binary packages are upload to "
"the server, consider using the ``--packages/-p`` or ``--query/-q`` flags. "
"``--packages`` allows you to explicitly declare which package gets uploaded "
"to the server by specifying the package ID. ``--query`` accepts a query "
"parameter, e.g. ``arch=armv8 and os=Linux``, and only uploads binary "
"packages which match this query. When using the ``--query`` flag, ensure "
"that your query string is enclosed in quotes to make the parameter explicit "
"to your shell. For example, ``conan upload <package> -q 'arch=x86_64 and "
"os=Linux' ...`` is appropriate use of the ``--query`` flag."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:44
msgid ""
"Now try again to read the information from the remote. We refer to it as "
"remote, even if it is running on your local machine, as it could be running "
"on another server in your LAN:"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:47
msgid "$ conan search Hello/0.1@demo/testing -r=my_local_server"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:53
msgid ""
"If package upload fails, you can try to upload it again. Conan keeps track "
"of the upload integrity and will only upload missing files."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:56
msgid ""
"Now we can check if we can download and use them in a project. For that "
"purpose, we first have to **remove the local copies**, otherwise the remote "
"packages will not be downloaded. Since we have just uploaded them, they are "
"identical to the local ones."
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:60
msgid ""
"$ conan remove Hello*\n"
"$ conan search"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:65
msgid ""
"Since we have our test setup from the previous section, we can just use it "
"for our test. Go to your package folder and run the tests again, now saying "
"that we don't want to build the sources again. We just want to check if we "
"can download the binaries and use them:"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:69
msgid "$ conan create . demo/testing --not-export --build=never"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:73
msgid ""
"You will see that the test is built, but the packages are not. The binaries "
"are simply downloaded from your local server. You can check their existence "
"on your local computer again with:"
msgstr ""

#: ../../../uploading_packages/uploading_to_remotes.rst:76
msgid "$ conan search"
msgstr ""
