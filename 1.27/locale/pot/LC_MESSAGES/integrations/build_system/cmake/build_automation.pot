# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.27\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/build_system/cmake/build_automation.rst:3
msgid "Build automation"
msgstr ""

#: ../../../integrations/build_system/cmake/build_automation.rst:5
msgid ""
"You can invoke CMake from your conanfile.py file and automate the build of "
"your library/project. Conan provides a ``CMake()`` helper. This helper is "
"useful in calling the ``cmake`` command both for creating Conan packages or "
"automating your project build with the :command:`conan build .` command. The "
"``CMake()`` helper will take into account your settings in order to "
"automatically set definitions and a generator according to your compiler, "
"build_type, etc."
msgstr ""

#: ../../../integrations/build_system/cmake/build_automation.rst:10
msgid "Check the section :ref:`Building with CMake<cmake_reference>`."
msgstr ""
