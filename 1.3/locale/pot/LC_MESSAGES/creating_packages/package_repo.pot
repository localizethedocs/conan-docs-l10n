# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../creating_packages/package_repo.rst:4
msgid "Recipe and sources in the same repo"
msgstr ""

#: ../../../creating_packages/package_repo.rst:6
msgid ""
"In the previous package we implemented a ``source()`` method that fetched "
"the source code from github. An alternative approach would be embedding the "
"source code into the package recipe, so it is self-contained and it doesn't "
"require to fetch code from external origins when it is necessary to build "
"from sources."
msgstr ""

#: ../../../creating_packages/package_repo.rst:11
msgid ""
"This could be an appropriate approach if we want the package recipe to live "
"in the same repository as the source code it is packaging. It could be "
"considered as a \"snapshot\" of the source code too."
msgstr ""

#: ../../../creating_packages/package_repo.rst:14
msgid ""
"First, let's get the initial source code and create the basic package recipe:"
msgstr ""

#: ../../../creating_packages/package_repo.rst:16
msgid "$ conan new Hello/0.1 -t -s"
msgstr ""

#: ../../../creating_packages/package_repo.rst:20
msgid ""
"A *src* folder will be created with the same \"hello\" source code than in "
"the previous example. You can have a look at it, is straightforward code."
msgstr ""

#: ../../../creating_packages/package_repo.rst:23
msgid "Now lets have a look to the *conanfile.py*:"
msgstr ""

#: ../../../creating_packages/package_repo.rst:25
msgid ""
"from conans import ConanFile, CMake\n"
"\n"
"class HelloConan(ConanFile):\n"
"    name = \"Hello\"\n"
"    version = \"0.1\"\n"
"    license = \"<Put the package license here>\"\n"
"    url = \"<Package recipe repository url here, for issues about the "
"package>\"\n"
"    description = \"<Description of Hello here>\"\n"
"    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\n"
"    options = {\"shared\": [True, False]}\n"
"    default_options = \"shared=False\"\n"
"    generators = \"cmake\"\n"
"    exports_sources = \"src/*\"\n"
"\n"
"    def build(self):\n"
"        cmake = CMake(self)\n"
"        cmake.configure(source_folder=\"src\")\n"
"        cmake.build()\n"
"\n"
"        # Explicit way:\n"
"        # self.run('cmake \"%s/src\" %s' % (self.source_folder, cmake."
"command_line))\n"
"        # self.run(\"cmake --build . %s\" % cmake.build_config)\n"
"\n"
"    def package(self):\n"
"        self.copy(\"*.h\", dst=\"include\", src=\"src\")\n"
"        self.copy(\"*.lib\", dst=\"lib\", keep_path=False)\n"
"        self.copy(\"*.dll\", dst=\"bin\", keep_path=False)\n"
"        self.copy(\"*.dylib*\", dst=\"lib\", keep_path=False)\n"
"        self.copy(\"*.so\", dst=\"lib\", keep_path=False)\n"
"        self.copy(\"*.a\", dst=\"lib\", keep_path=False)\n"
"\n"
"    def package_info(self):\n"
"        self.cpp_info.libs = [\"hello\"]"
msgstr ""

#: ../../../creating_packages/package_repo.rst:61
msgid "There are two important changes:"
msgstr ""

#: ../../../creating_packages/package_repo.rst:63
msgid ""
"Added the ``exports_sources`` field, to tell conan to copy all the files "
"from the local *src* folder into the package recipe."
msgstr ""

#: ../../../creating_packages/package_repo.rst:65
msgid ""
"Removed the ``source()`` method, it is not necessary anymore to retrieve "
"external sources."
msgstr ""

#: ../../../creating_packages/package_repo.rst:67
msgid "Also, you can notice the two CMake lines:"
msgstr ""

#: ../../../creating_packages/package_repo.rst:69
msgid ""
"include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)\n"
"conan_basic_setup()"
msgstr ""

#: ../../../creating_packages/package_repo.rst:74
msgid ""
"They are not added in the package recipe, as they can be directly put in the "
"``src/CMakeLists.txt`` file."
msgstr ""

#: ../../../creating_packages/package_repo.rst:77
msgid ""
"And simply create the package for user and channel **demo/testing** as "
"previously:"
msgstr ""

#: ../../../creating_packages/package_repo.rst:79
msgid ""
"$ conan create . demo/testing\n"
"...\n"
"Hello/0.1@demo/testing test package: Running test()\n"
"Hello world!"
msgstr ""
