# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/travisci.rst:7
msgid "|travisci_logo| Travis Ci"
msgstr ""

#: ../../../integrations/travisci.rst:90
msgid "travisci_logo"
msgstr ""

#: ../../../integrations/travisci.rst:9
msgid ""
"You can use `Travis CI`_ cloud service to automatically build and test your "
"project in Linux/OSX environments in the cloud. It is free for OSS projects, "
"and offers an easy integration with Github, so builds can be automatically "
"fired in Travis-CI after a :command:`git push` to Github."
msgstr ""

#: ../../../integrations/travisci.rst:13
msgid "You can use Travis-CI both for:"
msgstr ""

#: ../../../integrations/travisci.rst:15
msgid ""
"Building and testing your project, which manages dependencies with Conan, "
"and probably a conanfile.txt file"
msgstr ""

#: ../../../integrations/travisci.rst:16
msgid ""
"Building and testing conan binary packages for a given conan package recipe "
"(with a conanfile.py)"
msgstr ""

#: ../../../integrations/travisci.rst:20
msgid "Building and testing your project"
msgstr ""

#: ../../../integrations/travisci.rst:22
msgid ""
"We are going to use an example with GTest package now, with **Travis CI** "
"support to run the tests."
msgstr ""

#: ../../../integrations/travisci.rst:25
msgid "Clone the project from github:"
msgstr ""

#: ../../../integrations/travisci.rst:28
msgid "$ git clone https://github.com/lasote/conan-gtest-example"
msgstr ""

#: ../../../integrations/travisci.rst:33
msgid "Create a ``.travis.yml`` file and paste this code in it:"
msgstr ""

#: ../../../integrations/travisci.rst:36
msgid ""
"language: cpp\n"
"compiler:\n"
"- gcc\n"
"install:\n"
"# Upgrade GCC\n"
"- sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y\n"
"- sudo apt-get update -qq\n"
"- sudo apt-get install -qq g++-4.9\n"
"- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --"
"slave /usr/bin/g++ g++ /usr/bin/g++-4.9\n"
"\n"
"# Install conan\n"
"- pip install conan\n"
"# Automatic detection of your arch, compiler, etc.\n"
"- conan user\n"
"\n"
"script:\n"
"# Download dependencies, build, test and create package\n"
"- conan create user/channel"
msgstr ""

#: ../../../integrations/travisci.rst:58
msgid ""
"Travis will install the **conan** tool and will execute the **conan "
"install** command. Then, the **script** section creates the build folder, "
"compiles the project with **cmake** and runs the **tests**."
msgstr ""

#: ../../../integrations/travisci.rst:63
msgid "Creating, testing and uploading conan binary packages"
msgstr ""

#: ../../../integrations/travisci.rst:65
msgid ""
"You can use Travis to automate the building of binary packages, which will "
"be created in the cloud after pushing to Github. You can probably setup your "
"own way, but conan has some utilities to help in the process."
msgstr ""

#: ../../../integrations/travisci.rst:68
msgid ""
"The command :command:`conan new` has arguments to create a default working *."
"travis.yml* file. Other setups might be possible, but for this example we "
"are assuming that you are using github and also uploading your final "
"packages to Bintray. You could follow these steps:"
msgstr ""

#: ../../../integrations/travisci.rst:72
msgid ""
"First, create an empty github repository, lets call it \"hello\", for "
"creating a \"hello world\" package. Github allows to create it with a Readme "
"and .gitignore."
msgstr ""

#: ../../../integrations/travisci.rst:73
msgid ""
"Get the credentials User and API Key (remember, Bintray uses the API key as "
"\"password\", not your main Bintray account password)"
msgstr ""

#: ../../../integrations/travisci.rst:74
msgid ""
"Create a conan repository in Bintray under your user or organization, and "
"get its URL (\"Set me up\"). We will call it ``UPLOAD_URL``"
msgstr ""

#: ../../../integrations/travisci.rst:75
msgid ""
"Activate the repo in your Travis account, so it is built when we push "
"changes to it."
msgstr ""

#: ../../../integrations/travisci.rst:76
msgid ""
"Under *Travis More Options -> Settings->Environment Variables*, add the "
"``CONAN_PASSWORD`` environment variable with the Bintray API Key. If your "
"Bintray user is different from the package user, you can define your Bintray "
"username too, defining the environment variable ``CONAN_LOGIN_USERNAME``"
msgstr ""

#: ../../../integrations/travisci.rst:77
msgid "Clone the repo: ``$ git clone <your_repo/hello> && cd hello``"
msgstr ""

#: ../../../integrations/travisci.rst:78
msgid ""
"Create the package: :command:`conan new Hello/0.1@<user>/testing -t -s -cilg "
"-cis -ciu=UPLOAD_URL` where **user** is your Bintray username."
msgstr ""

#: ../../../integrations/travisci.rst:79
msgid ""
"You can inspect the created files: both *.travis.yml*, *.travis/run.sh*, and "
"``.travis/install.sh`` and the *build.py* script, that is used by **conan-"
"package-tools** utility to split different builds with different "
"configurations in different travis jobs."
msgstr ""

#: ../../../integrations/travisci.rst:81
msgid "You can test locally, before pushing, with :command:`conan test`."
msgstr ""

#: ../../../integrations/travisci.rst:82
msgid ""
"Add the changes, commit and push: :command:`git add . && git commit -m "
"\"first commit\" && git push`."
msgstr ""

#: ../../../integrations/travisci.rst:83
msgid "Go to Travis and see the build, with the different jobs."
msgstr ""

#: ../../../integrations/travisci.rst:84
msgid ""
"When it finish, go to your Bintray repository, you should see there the "
"uploaded packages for different configurations."
msgstr ""

#: ../../../integrations/travisci.rst:85
msgid ""
"Check locally, searching in Bintray: :command:`conan search Hello/0.1@<user>/"
"testing -r=mybintray`."
msgstr ""

#: ../../../integrations/travisci.rst:87
msgid ""
"If something fails, please report an issue in the ``conan-package-tools`` "
"github repository: https://github.com/conan-io/conan-package-tools"
msgstr ""
