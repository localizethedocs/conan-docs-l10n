# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.36\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:4
msgid "Artifactory Community Edition for C/C++"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:6
msgid ""
"Artifactory Community Edition (CE) for C/C++ is the recommended server for "
"development and hosting private packages for a team or company. It is "
"completely free, and it features a WebUI, advanced authentication and "
"permissions, great performance and scalability, a REST API, a generic CLI "
"tool and generic repositories to host any kind of source or binary artifact."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:11
msgid ""
"This is a very brief introduction to Artifactory CE. For the complete "
"Artifactory CE documentation, visit `Artifactory docs <https://www.jfrog.com/"
"confluence/>`_."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:15
msgid "Running Artifactory CE"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:17
msgid ""
"There are several ways to download and run Artifactory CE. The simplest one "
"might be to download and unzip the designated zip file, though other "
"installers, including also installing from a Docker image. When the file is "
"unzipped, launch Artifactory by double clicking the .bat or .sh script in "
"the *bin* subfolder, depending on the OS. Java 8 update 45 or later runtime "
"is required. If you don't have it, please install it first (newer Java "
"versions preferred)."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:26
msgid ""
"Once Artifactory has started, navigate to the default URL `http://"
"localhost:8081`, where the Web UI should be running. The default user and "
"password are ``admin:password``."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:30
msgid "Creating and Using a Conan Repo"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:32
msgid ""
"Navigate to Admin -> Repositories -> Local, then click on the \"New\" "
"button. A dialog for selecting the package type will appear, select Conan, "
"then type a \"Repository Key\" (the name of the repository you are about to "
"create), for example \"conan-local\". You can create multiple repositories "
"to serve different flows, teams, or projects."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:36
msgid ""
"Now, it is necessary to configure the client. Go to Artifacts, and click on "
"the created repository. The \"Set Me Up\" button in the top right corner "
"provides instructions on how to configure the remote in the Conan client:"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:39
msgid ""
"$ conan remote add artifactory http://localhost:8081/artifactory/api/conan/"
"conan-local"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:44
msgid ""
"From now, you can upload, download, search, etc. the remote repos similarly "
"to the other repo types."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:46
msgid ""
"$ conan upload \"*\" --all -r=artifactory\n"
"$ conan search \"*\" -r=artifactory"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:52
msgid "Migrating from Other Servers"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:54
msgid ""
"If you are already running another server, for example, the open source "
"*conan_server*, it is easy to migrate your packages, using the Conan client "
"to download the packages and re-upload them to the new server."
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:57
msgid ""
"This Python script might be helpful, given that it already defines the "
"respective ``local`` and ``artifactory`` remotes:"
msgstr ""

#: ../../../uploading_packages/artifactory/artifactory_ce.rst:60
msgid ""
"import os\n"
"import subprocess\n"
"\n"
"def run(cmd):\n"
"    ret = os.system(cmd)\n"
"    if ret != 0:\n"
"        raise Exception(\"Command failed: %s\" % cmd)\n"
"\n"
"# Assuming local = conan_server and artifactory remotes\n"
"output = subprocess.check_output(\"conan search -r=local --raw\")\n"
"packages = output.splitlines()\n"
"\n"
"for package in packages:\n"
"    print(\"Downloading %s\" % package)\n"
"    run(\"conan download %s -r=local\" % package)\n"
"\n"
"run(\"conan upload \\\"*\\\" --all --confirm -r=artifactory\")"
msgstr ""
