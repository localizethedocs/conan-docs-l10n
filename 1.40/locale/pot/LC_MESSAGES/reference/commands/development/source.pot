# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2020, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.40\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/development/source.rst:5
msgid "conan source"
msgstr ""

#: ../../../reference/commands/development/source.rst:7
msgid "$ conan source [-h] [-sf SOURCE_FOLDER] [-if INSTALL_FOLDER] path"
msgstr ""

#: ../../../reference/commands/development/source.rst:11
msgid "Calls your local conanfile.py 'source()' method."
msgstr ""

#: ../../../reference/commands/development/source.rst:13
msgid "Usually downloads and uncompresses the package sources."
msgstr ""

#: ../../../reference/commands/development/source.rst:15
msgid ""
"positional arguments:\n"
"  path                  Path to a folder containing a conanfile.py or to a\n"
"                        recipe file e.g., my_folder/conanfile.py\n"
"\n"
"optional arguments:\n"
"  -h, --help            show this help message and exit\n"
"  -sf SOURCE_FOLDER, --source-folder SOURCE_FOLDER\n"
"                        Destination directory. Defaulted to current "
"directory\n"
"  -if INSTALL_FOLDER, --install-folder INSTALL_FOLDER\n"
"                        Directory containing the conaninfo.txt and\n"
"                        conanbuildinfo.txt files (from previous 'conan\n"
"                        install'). Defaulted to --build-folder Optional,\n"
"                        source method will run without the information\n"
"                        retrieved from the conaninfo.txt and\n"
"                        conanbuildinfo.txt, only required when using\n"
"                        conditional source() based on settings, options,\n"
"                        env_info and user_info"
msgstr ""

#: ../../../reference/commands/development/source.rst:36
msgid ""
"The ``source()`` method might use (optional) `settings`, `options` and "
"`environment variables` from the specified profile and dependencies "
"information from the declared ``deps_XXX_info`` objects in the conanfile "
"requirements."
msgstr ""

#: ../../../reference/commands/development/source.rst:40
msgid ""
"All that information is saved automatically in the *conaninfo.txt* and "
"*conanbuildinfo.txt* files respectively, when you run the :command:`conan "
"install` command. Those files have to be located in the specified :command:"
"`--install-folder`."
msgstr ""

#: ../../../reference/commands/development/source.rst:43
msgid "**Examples**:"
msgstr ""

#: ../../../reference/commands/development/source.rst:45
msgid ""
"Call a local recipe's source method: In user space, the command will execute "
"a local *conanfile.py* ``source()`` method, in the *mysrc* folder in the "
"current directory."
msgstr ""

#: ../../../reference/commands/development/source.rst:48
msgid ""
"$ conan new lib/1.0@conan/stable\n"
"$ conan source . --source-folder mysrc"
msgstr ""

#: ../../../reference/commands/development/source.rst:53
msgid ""
"In case you need the settings/options or any info from the requirements, "
"perform first an install:"
msgstr ""

#: ../../../reference/commands/development/source.rst:55
msgid ""
"$ conan install . --install-folder mybuild\n"
"$ conan source . --source-folder mysrc --install-folder mybuild"
msgstr ""
