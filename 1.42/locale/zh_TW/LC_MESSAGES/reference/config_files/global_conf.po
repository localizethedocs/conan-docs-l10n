# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2021, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.42\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/config_files/global_conf.rst:4
msgid "global.conf"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:8
msgid ""
"This new configuration mechanism is an **experimental** feature subject to "
"breaking changes in future releases."
msgstr ""

#: ../../../reference/config_files/global_conf.rst:11
msgid "The **global.conf** file is located in the Conan user home directory."
msgstr ""

#: ../../../reference/config_files/global_conf.rst:14
msgid "Global configuration"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:16
msgid ""
"``core:required_conan_version = expression`` allows defining a version "
"expression like ``>=1.30``. Conan will raise an error if its current version "
"does not satisfy the condition"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:17
msgid ""
"``core.package_id:msvc_visual_incompatible`` allows opting-out the fallback "
"from the new ``msvc`` compiler to the ``Visual Studio`` compiler existing "
"binaries"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:22
msgid "Tools configurations"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:24
msgid ""
"Tools and user configurations allows them to be defined both in the *global."
"conf* file and in profile files. Profile values will have priority over "
"globally defined ones in *global.conf*, and can be defined as:"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:27
msgid ""
"[settings]\n"
"...\n"
"\n"
"[conf]\n"
"tools.microsoft.msbuild:verbosity=Diagnostic\n"
"tools.microsoft.msbuild:max_cpu_count=20\n"
"tools.microsoft.msbuild:vs_version = 16\n"
"tools.build:processes=10\n"
"tools.ninja:jobs=30\n"
"tools.gnu.make:jobs=40"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:41
msgid ""
"To list all possible configurations available, run :command:`conan config "
"list`."
msgstr ""

#: ../../../reference/config_files/global_conf.rst:43
msgid ""
"core:required_conan_version: Raise if current version does not match the "
"defined range."
msgstr ""

#: ../../../reference/config_files/global_conf.rst:44
msgid ""
"core.package_id:msvc_visual_incompatible: Allows opting-out the fallback "
"from the new msvc compiler to the Visual Studio compiler existing binaries"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:45
msgid ""
"core:default_profile: Defines the default host profile ('default' by default)"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:46
msgid ""
"core:default_build_profile: Defines the default build profile (None by "
"default)"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:47
msgid "tools.android:ndk_path: Argument for the CMAKE_ANDROID_NDK"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:48
msgid ""
"tools.build:skip_test: Do not execute CMake.test() and Meson.test() when "
"enabled"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:49
msgid "tools.build:processes: Default jobs number"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:50
msgid ""
"tools.cmake.cmaketoolchain:generator: User defined CMake generator to use "
"instead of default"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:51
msgid ""
"tools.cmake.cmaketoolchain:msvc_parallel_compile: Argument for the /MP when "
"running msvc"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:52
msgid ""
"tools.cmake.cmaketoolchain:find_package_prefer_config: Argument for the "
"CMAKE_FIND_PACKAGE_PREFER_CONFIG"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:53
msgid ""
"tools.cmake.cmaketoolchain:toolchain_file: Use other existing file rather "
"than conan_toolchain.cmake one"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:54
msgid ""
"tools.cmake.cmaketoolchain:user_toolchain: Inject existing user toolchain at "
"the beginning of conan_toolchain.cmake"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:55
msgid ""
"tools.cmake.cmaketoolchain:system_name: Define CMAKE_SYSTEM_NAME in "
"CMakeToolchain"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:56
msgid ""
"tools.cmake.cmaketoolchain:system_version: Define CMAKE_SYSTEM_VERSION in "
"CMakeToolchain"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:57
msgid ""
"tools.cmake.cmaketoolchain:system_processor: Define CMAKE_SYSTEM_PROCESSOR "
"in CMakeToolchain"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:58
msgid ""
"tools.env.virtualenv:auto_use: Automatically activate virtualenv file "
"generation"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:59
msgid ""
"tools.files.download:retry: Number of retries in case of failure when "
"downloading"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:60
msgid ""
"tools.files.download:retry_wait: Seconds to wait between download attempts"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:61
msgid "tools.gnu:make_program: Indicate path to make program"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:62
msgid ""
"tools.gnu.make:jobs: Argument for the -j parameter when running Make "
"generator"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:63
msgid "tools.google.bazel:config: Define Bazel config file"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:64
msgid "tools.google.bazel:bazelrc_path: Defines Bazel rc-path"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:65
msgid ""
"tools.microsoft.msbuild:verbosity: Verbosity level for MSBuild: 'Quiet', "
"'Minimal', 'Normal', 'Detailed', 'Diagnostic'"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:66
msgid ""
"tools.microsoft.msbuild:max_cpu_count: Argument for the /m (/maxCpuCount) "
"when running MSBuild"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:67
msgid ""
"tools.microsoft.msbuild:vs_version: Defines the IDE version when using the "
"new msvc compiler"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:68
msgid ""
"tools.microsoft.msbuild:installation_path: VS install path, to avoid auto-"
"detect via vswhere, like C:/Program Files (x86)/Microsoft Visual Studio/2019/"
"Community"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:69
msgid ""
"tools.microsoft.msbuilddeps:exclude_code_analysis: Suppress MSBuild code "
"analysis for patterns"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:70
msgid ""
"tools.microsoft.msbuildtoolchain:compile_options: Dictionary with MSBuild "
"compiler options"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:71
msgid ""
"tools.ninja:jobs: Argument for the --jobs parameter when running Ninja "
"generator"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:75
msgid "Configuration from build_requires"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:77
msgid ""
"From Conan 1.37, it is possible to define configuration in packages that are "
"``build_requires``. For example, assuming there is a package that bundles "
"the AndroidNDK, it could define the location of such NDK to the ``tools."
"android:ndk_path`` configuration as:"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:82
msgid ""
"import os\n"
"from conans import ConanFile\n"
"\n"
"class Pkg(ConanFile):\n"
"    name = \"android_ndk\"\n"
"\n"
"    def package_info(self):\n"
"        self.conf_info[\"tools.android:ndk_path\"] = os.path.join(self."
"package_folder, \"ndk\")"
msgstr ""

#: ../../../reference/config_files/global_conf.rst:94
msgid ""
"Note that this only propagates from the immediate, direct ``build_requires`` "
"of a recipe."
msgstr ""
