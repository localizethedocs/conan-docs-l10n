# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.52\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/tools/gnu/autotools.rst:4
msgid "Autotools"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:8
msgid ""
"These tools are still **experimental** (so subject to breaking changes) but "
"with very stable syntax. We encourage the usage of it to be prepared for "
"Conan 2.0."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:11
msgid ""
"Available since: `1.35.0 <https://github.com/conan-io/conan/releases/"
"tag/1.35.0>`_"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:13
msgid ""
"The ``Autotools`` build helper is a wrapper around the command line "
"invocation of autotools. It will abstract the calls like ``./configure`` or "
"``make`` into Python method calls."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:16
msgid "The ``Autotools`` helper can be used like:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:30
msgid ""
"from conan import ConanFile\n"
"from conan.tools.gnu import Autotools\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def build(self):\n"
"        autotools = Autotools(self)\n"
"        autotools.configure()\n"
"        autotools.make()"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:31
msgid ""
"It will read the ``conanbuild.conf`` file generated by the :ref:"
"`AutotoolsToolchain<conan_tools_gnu_autotools_toolchain>` to know read the "
"arguments for calling the configure and make scripts:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:34
msgid "**configure_args**: Arguments to call the ``configure`` script."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:35
msgid "**make_args**: Arguments to call the ``make`` script."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:39
msgid "Methods"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:42
msgid "constructor"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:47
msgid "def __init__(self, conanfile, namespace=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:48
msgid "**conanfile**: the current recipe object. Always use ``self``."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:49
msgid ""
"**namespace**: this argument avoids collisions when you have multiple "
"toolchain calls in the same recipe. By setting this argument, the "
"*conanbuild.conf* file used to pass information to the toolchain will be "
"named as: *<namespace>_conanbuild.conf*. The default value is ``None`` "
"meaning that the name of the generated file is *conanbuild.conf*. This "
"namespace must be also set with the same value in the constructor of the :"
"ref:`AutotoolsToolchain<conan_tools_gnu_autotools_toolchain>` so that it "
"reads the information from the proper file."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:57
msgid "configure(self, build_script_folder=None, args=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:59
msgid "def configure(self, build_script_folder=None, args=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:63
msgid "Call the configure script."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:65
msgid ""
"**build_script_folder** (Optional, Defaulted to ``None``): Subfolder where "
"the configure script is located."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:66
msgid "If ``None``, ``conanfile.source_folder`` will be used."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:68
#: ../../../reference/conanfile/tools/gnu/autotools.rst:81
msgid ""
"**args** (Optional, Defaulted to ``None``): List of arguments to use for the"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:68
msgid "``configure`` call."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:71
msgid "autoreconf(self, args=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:73
msgid "def autoreconf(self, args=None)"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:77
msgid "Call the ``autoreconf`` program."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:81
#: ../../../reference/conanfile/tools/gnu/autotools.rst:96
#: ../../../reference/conanfile/tools/gnu/autotools.rst:111
msgid "Parameters:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:81
msgid "``autoreconf`` call."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:84
msgid "make(self, target=None, args=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:86
msgid "def make(self, target=None)"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:90
msgid "Call the ``make`` program."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:93
msgid ""
"**target** (Optional, Defaulted to ``None``): Choose which target to build. "
"This allows building of e.g., docs, shared libraries or install for some "
"AutoTools projects."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:95
msgid ""
"**args** (Optional, Defaulted to ``None``): List of arguments to use for the "
"``make`` call."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:99
msgid "install(self, args=None):"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:101
msgid "def install(self, args=None)"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:105
msgid "This is just an \"alias\" of ``self.make(target=\"install\")``"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:108
msgid ""
"**args** (Optional, Defaulted to ``None``): List of arguments to use for the "
"``make install`` call. By default an argument ``DESTDIR=self."
"package_folder`` is added to the call if the passed value is ``None``."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:114
msgid ""
"A note about relocatable shared libraries in macOS built the  Autotools "
"build helper"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:116
msgid ""
"When building a shared library with Autotools in macOS a section "
"``LC_ID_DYLIB`` and another ``LC_LOAD_DYLIB`` are added to the ``.dylib``. "
"These sections store ``install_name`` information, which is the location of "
"the folder where the library or its dependencies are installed. You can "
"check the install_name of your shared libraries using the otool command:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:122
msgid ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 0.0.0\n"
"compatibility version 0.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"..."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:144
msgid "Why is this a problem when using Conan?"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:146
msgid ""
"When using Conan the library will be built in the local cache and this means "
"that this location will point to Conan's local cache folder where the "
"library was installed. This location is where the library tells any other "
"binaries using it where to load it at runtime. This is a problem since you "
"can build the shared library in one machine, then upload it to a server and "
"install it in another machine to use it. In this case, as Autotools behaves "
"by default, you would have a library storing an ``install_name`` pointing to "
"a folder that does not exist in your current machine so you would get linker "
"errors when building."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:157
msgid "How to adress this problem in Conan"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:159
msgid ""
"The only thing Conan can do to make these shared libraries relocatable is to "
"patch the built binaries after installation. To do this, when using the "
"``Autotools`` build helper and after running the Makefile's ``install()`` "
"step, you can use the :ref:"
"`fix_apple_shared_install_name()<conan_tools_apple_fix_apple_shared_install_name>` "
"tool to search for the built ``.dylib`` files and patch them by running the "
"``install_name_tool`` macOS utility, like this:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:166
msgid ""
"from conan.tools.apple import fix_apple_shared_install_name\n"
"class HelloConan(ConanFile):\n"
"  ...\n"
"  def package(self):\n"
"      autotools = Autotools(self)\n"
"      autotools.install()\n"
"      fix_apple_shared_install_name(self)"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:177
msgid ""
"This will change the value of the ``LC_ID_DYLIB`` and ``LC_LOAD_DYLIB`` "
"sections in the ``.dylib`` file to:"
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:181
msgid ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 0.0.0\n"
"compatibility version 0.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"..."
msgstr ""

#: ../../../reference/conanfile/tools/gnu/autotools.rst:202
msgid ""
"The ``@rpath`` special keyword will tell the loader to search a list of "
"paths to find the library. These paths can be defined by the consumer of "
"that library by defining the ``LC_RPATH`` field. This is done by passing the "
"``-Wl,-rpath -Wl,/path/to/libMyLib.dylib`` linker flag when building the "
"consumer of the library. Then if Conan builds an executable that consumes "
"the ``libMyLib.dylib`` library, it will automatically add the ``-Wl,-rpath -"
"Wl,/path/to/libMyLib.dylib`` flag so that the library is correctly found "
"when building."
msgstr ""
