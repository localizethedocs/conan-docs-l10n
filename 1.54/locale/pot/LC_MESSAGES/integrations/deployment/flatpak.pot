# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.54\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/deployment/flatpak.rst:4
msgid "Flatpak"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:6
msgid ""
"`Flatpak <https://flatpak.org>`_ (former ``xdg-app``) is a package "
"management system to distribute desktop applications for Linux. It is based "
"on `OSTree <https://en.wikipedia.org/wiki/OSTree>`_. Flatpak is `RedHat "
"<https://www.redhat.com/en>`_ initiative."
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:9
msgid ""
"Unlike :ref:`AppImage <deployment_appimage>`, usually applications are "
"distributed via `flathub <https://flathub.org>`_ store, and require a "
"special runtime to install applications on target machines."
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:11
msgid ""
"The major advantage of ``Flatpak`` is sandboxing: each application runs in "
"its own isolated environment. ``Flatpak`` provides fine-grained control to "
"system resources (e.g. network, bluetooth, host filesystem, etc.). "
"``Flatpak`` also offers a set of runtimes for various Linux desktop "
"applications, e.g. `Freedesktop <https://www.freedesktop.org/wiki/>`_, "
"`GNOME <https://www.gnome.org>`_ and `KDE <https://kde.org>`_."
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:15
msgid ""
"The `packaging process <https://docs.flatpak.org/en/latest/first-build."
"html>`__ is:"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:17
msgid "Install the flatpak runtime, flatpak-builder and SDK."
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:18
msgid "Create a manifest ``<app-id>.json``"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:19
msgid "Run the ``flatpak-builder`` in order to produce the application"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:20
msgid ""
"`Publish <https://docs.flatpak.org/en/latest/publishing.html>`__ the "
"application for further distribution"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:22
msgid ""
"With help of conan's :ref:`json generator<deployable_json_generator>`, the "
"`manifest <https://docs.flatpak.org/en/latest/manifests.html>`_ creation "
"could be easily automated. For example, the custom script could generate "
"``build-commands`` and ``sources`` entries within the manifest file:"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:24
msgid ""
"app_id = \"org.flatpak.%s\" % self._name\n"
"manifest = {\n"
"    \"app-id\": app_id,\n"
"    \"runtime\": \"org.freedesktop.Platform\",\n"
"    \"runtime-version\": \"18.08\",\n"
"    \"sdk\": \"org.freedesktop.Sdk\",\n"
"    \"command\": \"conan-entrypoint.sh\",\n"
"    \"modules\": [\n"
"        {\n"
"            \"name\": self._name,\n"
"            \"buildsystem\": \"simple\",\n"
"            \"build-commands\": [\"install -D conan-entrypoint.sh /app/bin/"
"conan-entrypoint.sh\"],\n"
"            \"sources\": [\n"
"                {\n"
"                    \"type\": \"file\",\n"
"                    \"path\": \"conan-entrypoint.sh\"\n"
"                }\n"
"            ]\n"
"        }\n"
"    ]\n"
"}\n"
"sources = []\n"
"build_commands = []\n"
"for root, _, filenames in os.walk(temp_folder):\n"
"    for filename in filenames:\n"
"        filepath = os.path.join(root, filename)\n"
"        unique_name = str(uuid.uuid4())\n"
"        source = {\n"
"            \"type\": \"file\",\n"
"            \"path\": filepath,\n"
"            \"dest-filename\": unique_name\n"
"        }\n"
"        build_command = \"install -D %s /app/%s\" % (unique_name, os.path."
"relpath(filepath, temp_folder))\n"
"        sources.append(source)\n"
"        build_commands.append(build_command)\n"
"\n"
"manifest[\"modules\"][0][\"sources\"].extend(sources)\n"
"manifest[\"modules\"][0][\"build-commands\"].extend(build_commands)"
msgstr ""

#: ../../../integrations/deployment/flatpak.rst:65
msgid ""
"Alternatively, ``flatpak`` allows distributing the `single-file <https://"
"docs.flatpak.org/en/latest/single-file-bundles.html>`_ package. Such "
"package, however, cannot be run or installed on its own, it's needed to be "
"imported to the local repository on another machine."
msgstr ""
