# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.56\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../howtos/manage_cpp_standard.rst:4
msgid "How to manage C++ standard [EXPERIMENTAL]"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:8
msgid ""
"This is an **experimental** feature subject to breaking changes in future "
"releases. Previously, it was implemented as a first level setting "
"``cppstd``, we encourage you to adopt the new subsetting and update your "
"recipes if they were including the deprecated one in its :ref:"
"`settings_property` attribute."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:14
msgid ""
"The setting representing the C++ standard is ``compiler.cppstd``. The "
"detected default profile doesn't set any value for the ``compiler.cppstd`` "
"setting,"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:17
msgid ""
"The consumer can specify it in a :ref:`profile<profiles>` or with the ``-s`` "
"parameter:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:19
msgid "conan install . -s compiler.cppstd=gnu14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:24
msgid ""
"As it is a subsetting, it can have different values for each compiler (also, "
"take into account that depending on the version of the compiler the standard "
"could have only partial support and may change the ABI)."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:28
msgid "Valid values for ``compiler=Visual Studio``:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:31
#: ../../../howtos/manage_cpp_standard.rst:43
msgid "VALUE"
msgstr "VALUE"

#: ../../../howtos/manage_cpp_standard.rst:31
#: ../../../howtos/manage_cpp_standard.rst:43
msgid "DESCRIPTION"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:33
#: ../../../howtos/manage_cpp_standard.rst:53
msgid "14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:33
#: ../../../howtos/manage_cpp_standard.rst:53
msgid "C++ 14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:35
#: ../../../howtos/manage_cpp_standard.rst:57
msgid "17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:35
#: ../../../howtos/manage_cpp_standard.rst:57
msgid "C++ 17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:37
#: ../../../howtos/manage_cpp_standard.rst:61
msgid "20"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:37
msgid "C++ 20 (Still C++20 Working Draft)"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:40
msgid "Valid values for other compilers:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:45
msgid "98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:45
msgid "C++ 98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:47
msgid "gnu98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:47
msgid "C++ 98 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:49
msgid "11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:49
msgid "C++ 11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:51
msgid "gnu11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:51
msgid "C++ 11 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:55
msgid "gnu14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:55
msgid "C++ 14 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:59
msgid "gnu17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:59
msgid "C++ 17 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:61
msgid "C++ 20 (Partial support)"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:63
msgid "gnu20"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:63
msgid "C++ 20 with GNU extensions (Partial support)"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:69
msgid "Build helpers"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:71
msgid ""
"The value of ``compiler.cppstd`` provided by the consumer is used by the "
"build helpers:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:73
msgid ""
"The :ref:`CMake<cmake_reference>` build helper will set the "
"``CONAN_CMAKE_CXX_STANDARD`` and ``CONAN_CMAKE_CXX_EXTENSIONS`` definitions "
"that will be converted to the corresponding CMake variables to activate the "
"standard automatically with the ``conan_basic_setup()`` macro."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:76
msgid ""
"The :ref:`AutotoolsBuildEnvironment <autotools_reference>` build helper will "
"adjust the needed flag to ``CXXFLAGS`` automatically."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:78
msgid ""
"The :ref:`MSBuild/VisualStudioBuildEnvironment <msbuild>` build helper will "
"adjust the needed flag to ``CL`` env var automatically."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:82
msgid "Package compatibility"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:84
msgid ""
"By default Conan will detect the default standard of your compiler to not "
"generate different binary packages. For example, you already built some "
"``gcc 6.1`` packages, where the default C++ standard is ``gnu14``. If you "
"introduce the ``compiler.cppstd`` setting in your profile with the ``gnu14`` "
"value, Conan won't generate new packages, because it was already the default "
"of your compiler."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:91
msgid ""
"Check the :ref:`package_id() <method_package_id>` reference to know more."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:95
msgid ""
"Conan 1.x will also generate the same packages as the ones generated with "
"the deprecated setting ``cppstd`` for the default value of the standard."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:100
msgid "Required version"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:102
msgid ""
"When the package to be built requires a minimal C++ standard support (e.g. "
"17), it can be done by comparing the ``cppstd``. For such condition, there "
"is the helper :ref:`check_min_cppstd <tools.check_min_cppstd>`."
msgstr ""
