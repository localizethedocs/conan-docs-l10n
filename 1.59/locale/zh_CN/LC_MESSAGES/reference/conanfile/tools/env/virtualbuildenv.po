# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.59\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:4
msgid "VirtualBuildEnv"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:8
msgid ""
"Some of the features used in this section are still **under development**, "
"while they are recommended and usable and we will try not to break them in "
"future releases, some breaking changes might still happen if necessary to "
"prepare for the *Conan 2.0 release*."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:12
msgid ""
"Available since: `1.39.0 <https://github.com/conan-io/conan/releases/"
"tag/1.39.0>`_"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:14
msgid "The ``VirtualBuildEnv`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:16
#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:30
msgid "conanfile.py"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:16
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"VirtualBuildEnv\""
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:22
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:22
msgid ""
"[generators]\n"
"VirtualBuildEnv"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:28
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:30
msgid ""
"from conan import ConanFile\n"
"from conan.tools.env import VirtualBuildEnv\n"
"\n"
"class Pkg(ConanFile):\n"
"    settings = \"os\", \"compiler\", \"arch\", \"build_type\"\n"
"    requires = \"zlib/1.2.11\", \"bzip2/1.0.8\"\n"
"\n"
"    def generate(self):\n"
"        ms = VirtualBuildEnv(self)\n"
"        ms.generate()"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:44
msgid ""
"When the ``VirtualBuildEnv`` generator is used, calling :command:`conan "
"install` will generate a *conanbuildenv* .bat or .sh script containing "
"environment variables of the build time environment."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:47
msgid ""
"That information is collected from the direct ``tool_requires`` in \"build\" "
"context recipes from the ``self.buildenv_info`` definition plus the ``self."
"runenv_info`` of the transitive dependencies of those ``tool_requires``."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:51
msgid ""
"This generator (for example the invocation of ``conan install cmake/3.20.0@ -"
"g VirtualBuildEnv --build-require``) will create the following files:"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:54
msgid ""
"conanbuildenv-release-x86_64.(bat|sh): This file contains the actual "
"definition of environment variables like PATH, LD_LIBRARY_PATH, etc, and any "
"other variable defined in the dependencies ``buildenv_info`` corresponding "
"to the ``build`` context, and to the current installed configuration. If a "
"repeated call is done with other settings, a different file will be created. "
"After the execution or sourcing of this file, a new deactivation script will "
"be generated, capturing the current environment, so the environment can be "
"restored when desired. The file will be named also following the current "
"active configuration, like ``deactivate_conanbuildenv-release-x86_64.bat``."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:61
msgid ""
"conanbuild.(bat|sh): Accumulates the calls to one or more other scripts, in "
"case there are multiple tools in the generate process that create files, to "
"give one single convenient file for all. This only calls the latest specific "
"configuration one, that is, if ``conan install`` is called first for Release "
"build type, and then for Debug, ``conanbuild.(bat|sh)`` script will call the "
"Debug one."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:65
msgid ""
"deactivate_conanbuild.(bat|sh): Accumulates the deactivation calls defined "
"in the above ``conanbuild.(bat|sh)``. This file should only be called after "
"the accumulated activate has been called first."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:70
msgid "Constructor"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:75
msgid "def __init__(self, conanfile):"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:76
msgid "``conanfile``: the current recipe object. Always use ``self``."
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:80
msgid "generate()"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:86
msgid "def generate(self, scope=\"build\"):"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:87
msgid "Parameters:"
msgstr ""

#: ../../../reference/conanfile/tools/env/virtualbuildenv.rst:89
msgid ""
"**scope** (Defaulted to ``\"build\"``): Add the launcher automatically to "
"the ``conanbuild`` launcher. Read more in the :ref:`Environment "
"documentation <conan_tools_env_environment_model>`."
msgstr ""
