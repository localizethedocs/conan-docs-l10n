# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.61\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/tools/scons.rst:4
msgid "conan.tools.scons"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:8
msgid ""
"Some of the features used in this section are still **under development**. "
"While they are recommended and usable, and we will try not to break them in "
"future releases, some breaking changes might still occur."
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:13
msgid "SConsDeps"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:15
msgid "Available since: `1.61.0 <https://github.com/conan-io/conan/releases>`_"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:17
msgid ""
"The ``SConsDeps`` is the dependency generator for `SCons <https://scons.org/"
">`_. It will generate a `SConscript_conandeps` file containing the necessary "
"information for SCons to build against the desired dependencies."
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:21
msgid "The ``SConsDeps`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:23
msgid "conanfile.py"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:23
msgid ""
"from conan import ConanFile\n"
"\n"
"class Pkg(ConanFile):\n"
"    generators = \"SConsDeps\""
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:31
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:31
msgid ""
"[generators]\n"
"SConsDeps"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:37
msgid ""
"It can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:50
msgid ""
"from conan import ConanFile\n"
"from conan.tools.scons import SConsDeps\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def generate(self):\n"
"        tc = SConsDeps(self)\n"
"        tc.generate()"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:51
msgid ""
"After executing the ``conan install`` command, the ``SConsDeps`` generator "
"will create the `SConscript_conandeps` file. This file will provide the "
"following information for `SCons`: ``CPPPATH``, ``LIBPATH``, ``BINPATH``, "
"``LIBS``, ``FRAMEWORKS``, ``FRAMEWORKPATH``, ``CPPDEFINES``, ``CXXFLAGS``, "
"``CCFLAGS``, ``SHLINKFLAGS``, and ``LINKFLAGS``. This information is "
"generated for the accumulated list of all dependencies and also for each one "
"of the requirements. You can load it in your consumer `SConscript` like this:"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:58
msgid "consumer `SConscript`"
msgstr ""

#: ../../../reference/conanfile/tools/scons.rst:58
msgid ""
"...\n"
"info = SConscript('./SConscript_conandeps')\n"
"# You can use conandeps to get the information\n"
"# for all the dependencies.\n"
"flags = info[\"conandeps\"]\n"
"\n"
"# Or use the name of the requirement if\n"
"# you only want the information about that one.\n"
"flags = info[\"zlib\"]\n"
"\n"
"env.MergeFlags(flags)\n"
"..."
msgstr ""
