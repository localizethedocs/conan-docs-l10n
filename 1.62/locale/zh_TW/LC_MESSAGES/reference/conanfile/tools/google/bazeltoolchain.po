# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.62\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:4
#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:15
msgid "BazelToolchain"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:8
msgid ""
"Some of the features used in this section are still **under development**, "
"while they are recommended and usable and we will try not to break them in "
"future releases, some breaking changes might still happen if necessary to "
"prepare for the *Conan 2.0 release*."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:12
msgid ""
"Available since: `1.37.0 <https://github.com/conan-io/conan/releases/"
"tag/1.37.0>`_"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:17
msgid ""
"The ``BazelToolchain`` is the toolchain generator for Bazel. It will "
"generate a ``conan_bzl.rc`` file that contains a build configuration ``conan-"
"config`` to inject all the parameters into the :command:`bazel build` "
"command."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:20
msgid "The ``BazelToolchain`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:22
#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:36
msgid "conanfile.py"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:22
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"BazelToolchain\""
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:28
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:28
msgid ""
"[generators]\n"
"BazelToolchain"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:34
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:36
msgid ""
"from conan import ConanFile\n"
"from conan.tools.google import BazelToolchain\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def generate(self):\n"
"        tc = BazelToolchain(self)\n"
"        tc.generate()"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:49
msgid ""
"After running :command:`conan install` command, the ``BazelToolchain`` "
"generates the *conan_bzl.rc* file that contains Bazel build parameters (it "
"will depend on your current Conan settings and options from your *default* "
"profile):"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:52
msgid "conan_bzl.rc"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:52
msgid ""
"# Automatic bazelrc file created by Conan\n"
"\n"
"build:conan-config --cxxopt=-std=gnu++17\n"
"\n"
"build:conan-config --dynamic_mode=off\n"
"build:conan-config --compilation_mode=opt"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:62
msgid ""
"The :ref:`Bazel build helper<conan_tools_google_bazel>` will use that "
"``conan_bzl.rc`` file to perform a call using this configuration. The "
"outcoming command will look like this :command:`bazel --bazelrc=/path/to/"
"conan_bzl.rc build --config=conan-config <target>`."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:66
msgid "The toolchain supports the following methods and attributes:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:69
msgid "constructor"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:71
msgid "def __init__(self, conanfile, namespace=None):"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:76
msgid "``conanfile``: the current recipe object. Always use ``self``."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:77
msgid ""
"``namespace``: Deprecated since Conan 1.62. It only keeps backward "
"compatibility."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:81
msgid "Attributes"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:83
msgid ""
"You can change some attributes before calling the ``generate()`` method if "
"you want to change some of the precalculated values:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:86
msgid ""
"from conan import ConanFile\n"
"from conan.tools.google import BazelToolchain\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def generate(self):\n"
"        tc = BazelToolchain(self)\n"
"        tc.cxxopt.append(\"--my_flag\")\n"
"        tc.generate()"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:99
msgid ""
"These attributes are processed and passed as part of ``build:conan-config``:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:101
msgid ""
"**force_pic** (defaulted to ``fpic`` if ``options.shared == False`` and "
"``options.fpic == True`` else ``None``): Injected to the ``--force_pic`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:103
msgid ""
"**dynamic_mode** (defaulted to ``fully`` if shared, else ``off``): Injected "
"to the ``--dynamic_mode`` parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:104
msgid ""
"**cppstd** (defaulted to ``None`` if your settings does not have ``settings."
"compiler.cppstd``"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:105
msgid ""
"**copt** (defaulted to ``[]``): They will be part of the ``--copt`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:106
msgid ""
"**conlyopt** (defaulted to ``[]``): They will be part of the ``--conlyopt`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:107
msgid ""
"**cxxopt** (defaulted to ``[]``): They will be part of the ``--cxxopt`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:108
msgid ""
"**linkopt** (defaulted to ``[]``): They will be part of the ``--linkopt`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:109
msgid ""
"**compilation_mode** (defaulted to ``opt`` if ``settings.build_type == "
"\"Release\"``, otherwise, if ``settings.build_type == \"Debug\"``, it'll be "
"``dbg``): Injected to the ``--compilation_mode`` parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:111
msgid ""
"**compiler** (defaulted to ``None``): Injected to the ``--compiler`` "
"parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:112
msgid "**cpu** (defaulted to ``None``): Injected to the ``--cpu`` parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:113
msgid ""
"**crosstool_top** (defaulted to ``None``): Injected to the ``--"
"crosstool_top`` parameter."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:117
msgid "conf"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:119
msgid ""
"``BazelToolchain`` is affected by these :ref:`[conf]<global_conf>` variables:"
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:121
msgid ""
"``tools.build:cxxflags`` list of extra C++ flags that will be used by "
"``cxxopt``."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:122
msgid ""
"``tools.build:cflags`` list of extra of pure C flags that will be used by "
"``conlyopt``."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:123
msgid ""
"``tools.build:sharedlinkflags`` list of extra linker flags that will be used "
"by ``linkopt``."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:124
msgid ""
"``tools.build:exelinkflags`` list of extra linker flags that will be used by "
"``linkopt``."
msgstr ""

#: ../../../reference/conanfile/tools/google/bazeltoolchain.rst:125
msgid ""
"``tools.build:linker_scripts`` list of linker scripts, each of which will be "
"prefixed with ``-T`` and added to ``linkopt``."
msgstr ""
