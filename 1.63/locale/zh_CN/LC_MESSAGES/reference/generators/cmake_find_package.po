# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.63\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/generators/cmake_find_package.rst:5
msgid "cmake_find_package"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:9
msgid ""
"This is a **deprecated** feature. Please refer to the :ref:`Migration "
"Guidelines<conan2_migration_guide>` to find the feature that replaced this "
"one."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:12
msgid ""
"The new, **under development** integration with CMake can be found in :ref:"
"`conan_tools_cmake`. This is the integration that will become the standard "
"one in Conan 2.0, and the below generators and integrations will be "
"deprecated and removed. While they are recommended and usable and we will "
"try not to break them in future releases, some breaking changes might still "
"happen if necessary to prepare for the *Conan 2.0 release*."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:19
msgid ""
"This is the reference page for ``cmake_find_package`` generator. Go to :ref:"
"`Integrations/CMake<cmake>` if you want to learn how to integrate your "
"project or recipes with CMake."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:23
msgid ""
"The ``cmake_find_package`` generator creates a file for each requirement "
"specified in the conanfile."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:25
msgid ""
"The name of the files follow the pattern ``Find<PKG-NAME>.cmake``. So for "
"the ``asio/1.14.0`` package, a ``Findasio.cmake`` file will be generated."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:29
msgid "Variables in Find<PKG-NAME>.cmake"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:31
msgid ""
"Being ``<PKG-NAME>`` the package name used in the reference (by default) or "
"the one declared in ``cpp_info.names[\"cmake_find_package\"]`` if specified:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:34
msgid "NAME"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:34
msgid "VALUE"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:36
msgid "<PKG-NAME>_FOUND"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:36
msgid "Set to 1"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:38
msgid "<PKG-NAME>_VERSION"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:38
msgid "Package version"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:40
msgid "<PKG-NAME>_INCLUDE_DIRS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:40
msgid "Containing all the include directories of the package"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:42
msgid "<PKG-NAME>_INCLUDES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:42
msgid "Same as the XXX_INCLUDE_DIRS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:44
msgid "<PKG-NAME>_DEFINITIONS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:44
msgid "Definitions of the library"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:46
msgid "<PKG-NAME>_LIBS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:46
msgid "Library paths to link"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:48
msgid "<PKG-NAME>_LIBRARIES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:48
msgid "Same as <PKG-NAME>_LIBS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:50
msgid "<PKG-NAME>_BUILD_MODULES"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:50
msgid "List of CMake module files with functionalities for consumers"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:52
msgid "<PKG-NAME>_SYSTEM_LIBS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:52
msgid "System libraries to link"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:54
msgid "<PKG-NAME>_FRAMEWORKS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:54
msgid "Framework names to do a `find_library()`"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:56
msgid "<PKG-NAME>_FRAMEWORKS_FOUND"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:56
msgid "Found frameworks to link with after `find_library()`"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:58
msgid "<PKG-NAME>_FRAMEWORK_DIRS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:58
msgid ""
"Framework directories to perform the `find_library()` of <PKG-"
"NAME>_FRAMEWORKS"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:61
msgid ""
"This file uses `<PKG-NAME>_BUILD_MODULES` values to include the files using "
"the `include(...)` CMake directive after the targets are created. This makes "
"functions or utilities exported by the package available for consumers just "
"by setting `find_package(<PKG-NAME>)` in the *CMakeLists.txt*. Specify the "
"modules that you want to be included in attribute ``cpp_info.build_modules`` "
"in function ``package_info()``."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:65
msgid ""
"Moreover, this also adjusts `CMAKE_MODULE_PATH` and `CMAKE_PREFIX_PATH` to "
"the values declared by the package in ``cpp_info.buildirs``, so modules in "
"those directories can be found."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:69
msgid "Targets in Find<PKG-NAME>.cmake"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:71
msgid ""
"A target named ``<PKG-NAME>::<PKG-NAME>`` target is generated with the "
"following properties adjusted:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:73
msgid ""
"``INTERFACE_INCLUDE_DIRECTORIES``: Containing all the include directories of "
"the package."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:74
msgid "``INTERFACE_LINK_LIBRARIES``: Library paths to link."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:75
msgid "``INTERFACE_COMPILE_DEFINITIONS``: Definitions of the library."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:77
msgid ""
"The targets are transitive. So, if your project depends on a packages ``A`` "
"and ``B``, and at the same time ``A`` depends on ``C``, the ``A`` target "
"will contain automatically the properties of the ``C`` dependency, so in "
"your `CMakeLists.txt` file you only need to ``find_package(A)`` and "
"``find_package(B)``."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:82
msgid "Components"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:84
msgid ""
"If a recipe uses components, the targets generated will be ``<PKG-NAME>::"
"<COMP-NAME>`` with the following properties adjusted:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:86
msgid ""
"``INTERFACE_INCLUDE_DIRECTORIES``: Containing all the include directories of "
"the component."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:87
msgid ""
"``INTERFACE_LINK_DIRECTORIES``: Containing all the lib directories of the "
"component."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:88
msgid ""
"``INTERFACE_LINK_LIBRARIES``: Containing the targets to link the component "
"to (includes component's libraries and dependencies)."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:89
msgid ""
"``INTERFACE_COMPILE_DEFINITIONS``: Containing the definitions of the "
"component."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:90
msgid ""
"``INTERFACE_COMPILE_OPTIONS``: Containing the compile options of the "
"component."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:92
msgid ""
"Moreover, a global target ``<PKG-NAME>::<PKG-NAME>`` will be declared with "
"the following properties adjusted:"
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:94
msgid ""
"``INTERFACE_LINK_LIBRARIES``: Containing all the component targets to link "
"the global target to (includes package's components only)."
msgstr ""

#: ../../../reference/generators/cmake_find_package.rst:98
msgid ""
"**Name conflicts**: If the name of the global target is the same for "
"different packages, Conan will aggregate into this global target all the "
"components from all those different packages. This means that this global "
"target will contain information coming from different packages. For the "
"components themselves, a name conflict will result in one of them being "
"inaccessible without further notice."
msgstr ""
