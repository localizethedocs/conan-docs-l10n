# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.63\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/deployment/snap.rst:4
msgid "Snap"
msgstr ""

#: ../../../integrations/deployment/snap.rst:6
msgid ""
"`Snap <https://snapcraft.io/>`_ is the package management system available "
"for the wide range of Linux distributions. Unlike :ref:`AppImage "
"<deployment_appimage>`, Snap requires a daemon (``snapd``) installed in the "
"system in order to operate. Under the hood, **Snap** is based on `SquashFS "
"<https://github.com/plougher/squashfs-tools>`_. ``Snap`` is `Canonical "
"<https://canonical.com>`_ initiative. Usually, applications are distributed "
"via `snapcraft <https://snapcraft.io/store>`_ store, but it's not mandatory. "
"``Snap`` provides fine-grained control to system resources (e.g. camera, "
"removable media, network, etc.). The major advantage is `plug-in system "
"<https://snapcraft.io/docs/supported-plugins>`_, which allows to easily "
"integrate ``Snap`` with different languages and build systems (e.g. CMake, "
"autotools, etc.)."
msgstr ""

#: ../../../integrations/deployment/snap.rst:13
msgid ""
"The `packaging process <https://snapcraft.io/docs/creating-a-snap>`__ could "
"be summed up in the following steps:"
msgstr ""

#: ../../../integrations/deployment/snap.rst:15
msgid "`Install <https://snapcraft.io/docs/snapcraft-overview>`_ the snapcraft"
msgstr ""

#: ../../../integrations/deployment/snap.rst:16
msgid "Run ``snapcraft init``"
msgstr ""

#: ../../../integrations/deployment/snap.rst:17
msgid ""
"Edit the ``snap/snapcraft.yml`` `manifest <https://snapcraft.io/docs/"
"snapcraft-format>`_"
msgstr ""

#: ../../../integrations/deployment/snap.rst:18
msgid "Run ``snapcraft`` in order to produce the snap"
msgstr ""

#: ../../../integrations/deployment/snap.rst:19
msgid ""
"`Publish <https://forum.snapcraft.io/t/releasing-your-app/6795>`__ and "
"upload snap, so it could be installed on other systems."
msgstr ""

#: ../../../integrations/deployment/snap.rst:21
msgid ""
"In order to integrate with build process managed with help of the conan, the "
"following steps could be used:"
msgstr ""

#: ../../../integrations/deployment/snap.rst:23
msgid ""
"Use :ref:`deploy generator <deployable_deploy_generator>` (or :ref:`json "
"generator<deployable_json_generator>` with custom script) to prepare the "
"assets"
msgstr ""

#: ../../../integrations/deployment/snap.rst:24
msgid ""
"Use the `dump plug-in <https://snapcraft.io/docs/dump-plugin>`_ of snapcraft "
"to simply copy the files deployed on previous step into the ``snap``"
msgstr ""
