# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:4
msgid "Custom command: Clean old recipe and package revisions"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:8
msgid ""
"This is mostly an example command. The built-in ``conan remove *#!latest`` "
"syntax, meaning \"all revisions but the latest\" would probably be enough "
"for this use case, without needing this custom command."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:13
msgid ""
"Please, first clone the sources to recreate this project. You can find them "
"in the `examples2 repository <https://github.com/conan-io/examples2>`_ in "
"GitHub:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:16
msgid ""
"$ git clone https://github.com/conan-io/examples2.git\n"
"$ cd examples2/examples/extensions/commands/clean"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:22
msgid ""
"In this example we are going to see how to create/use a custom command: :"
"command:`conan clean`. It removes every recipe and its package revisions "
"from the local cache or the remotes, except the latest package revision from "
"the latest recipe one."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:28
msgid ""
"To understand better this example, it is highly recommended to read "
"previously the :ref:`Custom commands "
"reference<reference_commands_custom_commands>`."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:32
msgid "Locate the command"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:34
msgid ""
"Copy the command file ``cmd_clean.py`` into your ``[YOUR_CONAN_HOME]/"
"extensions/commands/`` folder (create it if it's not there). If you don't "
"know where ``[YOUR_CONAN_HOME]`` is located, you can run :command:`conan "
"config home` to check it."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:39
msgid "Run it"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:41
msgid "Now, you should be able to see the new command in your command prompt:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:43
msgid ""
"$ conan -h\n"
"...\n"
"Custom commands\n"
"clean        Deletes (from local cache or remotes) all recipe and package "
"revisions but the\n"
"               latest package revision from the latest recipe revision.\n"
"\n"
"$ conan clean -h\n"
"usage: conan clean [-h] [-r REMOTE] [--force]\n"
"\n"
"Deletes (from local cache or remotes) all recipe and package revisions but\n"
"the latest package revision from the latest recipe revision.\n"
"\n"
"optional arguments:\n"
"  -h, --help            show this help message and exit\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Will remove from the specified remote\n"
"  --force               Remove without requesting a confirmation"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:64
msgid "Finally, if you execute :command:`conan clean`:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:66
msgid ""
"$ conan clean\n"
"Do you want to remove all the recipes revisions and their packages ones, "
"except the latest package revision from the latest recipe one? (yes/no): "
"yes\n"
"other/1.0\n"
"Removed package revision: other/1.0#31da245c3399e4124e39bd4f77b5261f:"
"da39a3ee5e6b4b0d3255bfef95601890afd80709#a16985deb2e1aa73a8480faad22b722c "
"[Local cache]\n"
"Removed recipe revision: other/1.0#721995a35b1a8d840ce634ea1ac71161 and all "
"its package revisions [Local cache]\n"
"hello/1.0\n"
"Removed package revision: hello/1.0#9a77cdcff3a539b5b077dd811b2ae3b0:"
"da39a3ee5e6b4b0d3255bfef95601890afd80709#cee90a74944125e7e9b4f74210bfec3f "
"[Local cache]\n"
"Removed package revision: hello/1.0#9a77cdcff3a539b5b077dd811b2ae3b0:"
"da39a3ee5e6b4b0d3255bfef95601890afd80709#7cddd50952de9935d6c3b5b676a34c48 "
"[Local cache]\n"
"libcxx/0.1"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:78
msgid "Nothing should happen if you run it again:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:80
msgid ""
"$ conan clean\n"
"Do you want to remove all the recipes revisions and their packages ones, "
"except the latest package revision from the latest recipe one? (yes/no): "
"yes\n"
"other/1.0\n"
"hello/1.0\n"
"libcxx/0.1"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:89
msgid "Code tour"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:91
msgid "The ``conan clean`` command has the following code:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:93
msgid "cmd_clean.py"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:93
msgid ""
"from conan.api.conan_api import ConanAPI\n"
"from conan.api.output import ConanOutput, Color\n"
"from conan.cli.command import OnceArgument, conan_command\n"
"from conans.client.userio import UserInput\n"
"\n"
"\n"
"recipe_color = Color.BRIGHT_BLUE\n"
"removed_color = Color.BRIGHT_YELLOW\n"
"\n"
"\n"
"@conan_command(group=\"Custom commands\")\n"
"def clean(conan_api: ConanAPI, parser, *args):\n"
"    \"\"\"\n"
"    Deletes (from local cache or remotes) all recipe and package revisions "
"but\n"
"    the latest package revision from the latest recipe revision.\n"
"    \"\"\"\n"
"    parser.add_argument('-r', '--remote', action=OnceArgument,\n"
"                        help='Will remove from the specified remote')\n"
"    parser.add_argument('--force', default=False, action='store_true',\n"
"                        help='Remove without requesting a confirmation')\n"
"    args = parser.parse_args(*args)\n"
"\n"
"    def confirmation(message):\n"
"        return args.force or ui.request_boolean(message)\n"
"\n"
"    ui = UserInput(non_interactive=False)\n"
"    out = ConanOutput()\n"
"    remote = conan_api.remotes.get(args.remote) if args.remote else None\n"
"    output_remote = remote or \"Local cache\"\n"
"\n"
"    # Getting all the recipes\n"
"    recipes = conan_api.search.recipes(\"*/*\", remote=remote)\n"
"    if recipes and not confirmation(\"Do you want to remove all the recipes "
"revisions and their packages ones, \"\n"
"                                    \"except the latest package revision "
"from the latest recipe one?\"):\n"
"        return\n"
"    for recipe in recipes:\n"
"        out.writeln(f\"{str(recipe)}\", fg=recipe_color)\n"
"        all_rrevs = conan_api.list.recipe_revisions(recipe, remote=remote)\n"
"        latest_rrev = all_rrevs[0] if all_rrevs else None\n"
"        for rrev in all_rrevs:\n"
"            if rrev != latest_rrev:\n"
"                conan_api.remove.recipe(rrev, remote=remote)\n"
"                out.writeln(f\"Removed recipe revision: {rrev.repr_notime()} "
"\"\n"
"                            f\"and all its package revisions "
"[{output_remote}]\", fg=removed_color)\n"
"            else:\n"
"                packages = conan_api.list.packages_configurations(rrev, "
"remote=remote)\n"
"                for package_ref in packages:\n"
"                    all_prevs = conan_api.list."
"package_revisions(package_ref, remote=remote)\n"
"                    latest_prev = all_prevs[0] if all_prevs else None\n"
"                    for prev in all_prevs:\n"
"                    if prev != latest_prev:\n"
"                        conan_api.remove.package(prev, remote=remote)\n"
"                        out.writeln(f\"Removed package revision: {prev."
"repr_notime()} [{output_remote}]\", fg=removed_color)"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:152
msgid "Let's analyze the most important parts."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:155
msgid "parser"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:157
msgid ""
"The ``parser`` param is an instance of the Python command-line parsing "
"``argparse.ArgumentParser``, so if you want to know more about its API, "
"visit `its official website <https://docs.python.org/3/library/argparse."
"html>`_."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:162
msgid "User input and user output"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:164
msgid "Important classes to manage user input and user output:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:166
msgid ""
"ui = UserInput(non_interactive=False)\n"
"out = ConanOutput()"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:172
msgid ""
"``UserInput(non_interactive)``: class to manage user inputs. In this example "
"we're using ``ui.request_boolean(\"Do you want to proceed?\")``, so it'll be "
"automatically translated to ``Do you want to proceed? (yes/no):`` in the "
"command prompt. **Note**: you can use ``UserInput(non_interactive=conan_api."
"config.get(\"core:non_interactive\"))`` too."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:175
msgid ""
"``ConanOutput()``: class to manage user outputs. In this example, we're "
"using only ``out.writeln(message, fg=None, bg=None)`` where ``fg`` is the "
"font foreground, and ``bg`` is the font background. Apart from that, you "
"have some predefined methods like ``out.info()``, ``out.success()``, ``out."
"error()``, etc."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:181
msgid "Conan public API"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:185
msgid ""
"The most important part of this example is the usage of the Conan API via "
"``conan_api`` parameter. These are some examples which are being used in "
"this custom command:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:188
msgid ""
"conan_api.remotes.get(args.remote)\n"
"conan_api.search.recipes(\"*/*\", remote=remote)\n"
"conan_api.list.recipe_revisions(recipe, remote=remote)\n"
"conan_api.remove.recipe(rrev, remote=remote)\n"
"conan_api.list.packages_configurations(rrev, remote=remote)\n"
"conan_api.list.package_revisions(package_ref, remote=remote)\n"
"conan_api.remove.package(prev, remote=remote)"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:200
msgid ""
"``conan_api.remotes.get(...)``: ``[RemotesAPI]`` Returns a RemoteRegistry "
"given the remote name."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:201
msgid ""
"``conan_api.search.recipes(...)``: ``[SearchAPI]`` Returns a list with all "
"the recipes matching the given pattern."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:202
msgid ""
"``conan_api.list.recipe_revisions(...)``: ``[ListAPI]`` Returns a list with "
"all the recipe revisions given a recipe reference."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:203
msgid ""
"``conan_api.list.packages_configurations(...)``: ``[ListAPI]`` Returns the "
"list of different configurations (package_id's) for a recipe revision."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:204
msgid ""
"``conan_api.list.package_revisions(...)``: ``[ListAPI]`` Returns the list of "
"package revisions for a given recipe revision."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:205
msgid ""
"``conan_api.remove.recipe(...)``: ``[RemoveAPI]`` Removes the given recipe "
"revision."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:206
msgid ""
"``conan_api.remove.package(...)``: ``[RemoveAPI]`` Removes the given package "
"revision."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:208
msgid "Besides that, it deserves especial attention these lines:"
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:210
msgid ""
"all_rrevs = conan_api.list.recipe_revisions(recipe, remote=remote)\n"
"latest_rrev = all_rrevs[0] if all_rrevs else None\n"
"\n"
"...\n"
"\n"
"packages = conan_api.list.packages_configurations(rrev, remote=remote)\n"
"\n"
"...\n"
"\n"
"all_prevs = conan_api.list.package_revisions(package_ref, remote=remote)\n"
"latest_prev = all_prevs[0] if all_prevs else None"
msgstr ""
"all_rrevs = conan_api.list.recipe_revisions(recipe, remote=remote)\n"
"latest_rrev = all_rrevs[0] if all_rrevs else None\n"
"\n"
"...\n"
"\n"
"packages = conan_api.list.packages_configurations(rrev, remote=remote)\n"
"\n"
"...\n"
"\n"
"all_prevs = conan_api.list.package_revisions(package_ref, remote=remote)\n"
"latest_prev = all_prevs[0] if all_prevs else None"

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:224
msgid ""
"Basically, these API calls are returning a list of recipe revisions and "
"package ones respectively, but we're saving the first element as the latest "
"one because these calls are getting an ordered list always."
msgstr ""

#: ../../../examples/extensions/commands/clean/custom_command_clean_revisions.rst:229
msgid ""
"If you want to know more about the Conan API, visit the :ref:`ConanAPI "
"section<reference_python_api_conan_api>`"
msgstr ""
