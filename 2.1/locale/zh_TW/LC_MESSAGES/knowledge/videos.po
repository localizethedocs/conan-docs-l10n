# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:37+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../knowledge/videos.rst:4
msgid "Videos"
msgstr ""

#: ../../../knowledge/videos.rst:8
msgid ""
"This section presents some conference talks and presentations regarding "
"Conan. While they can be very informative and educational, please note that "
"some of them might be outdated. Always use the documentation and reference "
"as the source of truth, not the videos."
msgstr ""

#: ../../../knowledge/videos.rst:14
msgid ""
"ACCU 2022: Advanced Dependencies Model in Conan 2.0 C, C++ Package Manager "
"by Diego Rodriguez-Losada"
msgstr ""

#: ../../../knowledge/videos.rst:16
msgid ""
"Conan 2.0 introduces a new dependencies model with requirements \"traits\" "
"like visibility, definition and propagation of headers and libraries "
"independently, and more that allow modeling all these advanced use cases. "
"This talk will present this new model, and apply it to solve different "
"advanced use cases, with real life examples"
msgstr ""

#: ../../../knowledge/videos.rst:22
msgid ""
"CppCon 2022: What's New in Conan 2.0 C/C++ Package Manager - Diego Rodriguez-"
"Losada"
msgstr ""

#: ../../../knowledge/videos.rst:24
msgid ""
"During the years since Conan 1.0 was released, we have continued to learn "
"from the C++ ecosystem as we watched it grow; learning many lessons, "
"challenges and trends in the industry from the feedback from tens of "
"thousands of conversations with users and customers, including many of the "
"largest C++ related companies in the world. This talk summarizes some of "
"these lessons and how they have been used to create the new major version of "
"Conan."
msgstr ""

#: ../../../knowledge/videos.rst:31
msgid ""
"Using std::cpp: Why you shouldnâ€™t write your own C++ package manager Luis "
"Caro Campos JFrog"
msgstr ""

#: ../../../knowledge/videos.rst:33
msgid ""
"This talk will provide a quick overview of how Conan deals with intrinsic C+"
"+ complexities: Headers vs binary symbols Shared and static library Symbol "
"visibilityBinary compatibility: is there a one-size fits all approach to "
"modeling it? Build-time dependency resolution is only half the battle, what "
"about runtime dependencies?"
msgstr ""

#: ../../../knowledge/videos.rst:39
msgid ""
"Meeting C++ 2023: CMake and Conan: past, present and future - Diego "
"Rodriguez-Losada"
msgstr ""

#: ../../../knowledge/videos.rst:53
msgid "Meeting C++ online book & tool fair: Conan 2.0 demo - Chris McArthur"
msgstr ""
