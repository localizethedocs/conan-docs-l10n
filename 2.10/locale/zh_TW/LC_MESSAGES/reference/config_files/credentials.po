# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/config_files/credentials.rst:4
msgid "credentials.json"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../reference/config_files/credentials.rst:9
msgid ""
"Conan can authenticate against its Conan remote servers with the following:"
msgstr ""

#: ../../../reference/config_files/credentials.rst:11
msgid ""
"Interactive command line, when some server launches an unauthorized error, "
"the Conan client will ask for user/password interactively and retry."
msgstr ""

#: ../../../reference/config_files/credentials.rst:12
msgid ""
"With the ``conan remote login`` command, authentication can be done with "
"argument passing, or interactively."
msgstr ""

#: ../../../reference/config_files/credentials.rst:13
msgid ""
"With the environment variables ``CONAN_LOGIN_USERNAME`` for all remotes "
"(``CONAN_LOGIN_USERNAME_{REMOTE}`` for an individual remote) and "
"``CONAN_PASSWORD`` (``CONAN_PASSWORD_{REMOTE}`` for an individual remote), "
"Conan will not request interactively in the command line when necessary, but "
"will take the values from the environment variables as if they were provided "
"by the user."
msgstr ""

#: ../../../reference/config_files/credentials.rst:14
msgid "With a ``credentials.json`` file put in the Conan cache."
msgstr ""

#: ../../../reference/config_files/credentials.rst:15
msgid ""
"With a custom :ref:`auth plugin <reference_extensions_authorization_plugin>`."
msgstr ""

#: ../../../reference/config_files/credentials.rst:17
msgid "This section describes the usage of ``credentials.json`` file."
msgstr ""

#: ../../../reference/config_files/credentials.rst:20
msgid ""
"This file has the following format, in which every ``credentials`` entry "
"should have a ``remote`` name, matching the name defined in ``conan remote "
"list``. Then, the ``user`` and ``password`` fields."
msgstr ""

#: ../../../reference/config_files/credentials.rst:23
msgid ""
"{\n"
"    \"credentials\": [\n"
"        {\n"
"            \"remote\": \"default\",\n"
"            \"user\": \"admin\",\n"
"            \"password\": \"password\"\n"
"        }\n"
"    ]\n"
"}"
msgstr ""

#: ../../../reference/config_files/credentials.rst:35
msgid ""
"Conan will be able to extract the credentials from this file automatically "
"when necessary and requested by the server."
msgstr ""

#: ../../../reference/config_files/credentials.rst:39
msgid ""
"Conan does not pre-emptively use the credentials to force a login "
"automatically in every remote defined at every Conan command. By default "
"Conan uses the previously stored tokens or anonymous usage, until an "
"explicit ``conan remote login`` command is done, or until a remote server "
"launches an authentication error. When that happens, authentication against "
"that server will be done, using the ``credentials.json`` file, the "
"environment variables or the user interactive inputs."
msgstr ""

#: ../../../reference/config_files/credentials.rst:44
msgid "The priority of credentials origins is as follows:"
msgstr ""

#: ../../../reference/config_files/credentials.rst:46
msgid ""
"If the ``credentials.json`` file exist, it has higher priority, if an entry "
"for the remote exists, it will be used. If it doesn't work, it will be an "
"error."
msgstr ""

#: ../../../reference/config_files/credentials.rst:48
msgid ""
"If an entry in the ``credentials.json`` for that remote does not exist, it "
"will look for defined environment variables"
msgstr ""

#: ../../../reference/config_files/credentials.rst:49
msgid ""
"If environment variables don't exist, it will request interactively the "
"credentials. If ``core:non_interactive=True``, it will error."
msgstr ""

#: ../../../reference/config_files/credentials.rst:51
msgid ""
"The ``credentials.json`` file is jinja-rendered with injected ``platform`` "
"and ``os`` imports, so it allows to use jinja syntax. For example it could "
"do something like the following to get the credentials from environment "
"variables:"
msgstr ""

#: ../../../reference/config_files/credentials.rst:55
msgid ""
"{% set myuser = os.getenv('myuser') %}\n"
"{% set mytk = os.getenv('mytoken') %}\n"
"{\n"
"    \"credentials\": [\n"
"        {\n"
"            \"remote\": \"myremote\",\n"
"            \"user\": \"{{myuser}}\"\n"
"            \"password\": \"{{mytk}}\"\n"
"        }\n"
"    ]\n"
"}"
msgstr ""

#: ../../../reference/config_files/credentials.rst:71
msgid ""
":ref:`How to use your own secrets manager for Conan remotes logins "
"<reference_extensions_authorization_plugin>`."
msgstr ""
