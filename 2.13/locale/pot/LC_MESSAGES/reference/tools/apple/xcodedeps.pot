# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/apple/xcodedeps.rst:4
msgid "XcodeDeps"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:6
msgid ""
"The ``XcodeDeps`` tool is the dependency information generator for *Xcode*. "
"It will generate multiple *.xcconfig* configuration files, the can be used "
"by consumers using *xcodebuild* or *Xcode*. To use them just add the "
"generated configuration files to the Xcode project or set the ``-xcconfig`` "
"argument from the command line."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:11
msgid "The ``XcodeDeps`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:13
#: ../../../reference/tools/apple/xcodedeps.rst:27
msgid "conanfile.py"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:13
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"XcodeDeps\""
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:19
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:19
msgid ""
"[generators]\n"
"XcodeDeps"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:25
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:27
msgid ""
"from conan import ConanFile\n"
"from conan.tools.apple import XcodeDeps\n"
"\n"
"class Pkg(ConanFile):\n"
"    settings = \"os\", \"compiler\", \"arch\", \"build_type\"\n"
"    requires = \"libpng/1.6.37@\" # Note libpng has zlib as transitive "
"dependency\n"
"\n"
"    def generate(self):\n"
"        xcode = XcodeDeps(self)\n"
"        xcode.generate()"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:41
msgid ""
"When the ``XcodeDeps`` generator is used, every invocation of ``conan "
"install`` will generate several configuration files, per dependency and "
"configuration. For the *conanfile.py* above, for example:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:45
msgid ""
"$ conan install conanfile.py # default is Release\n"
"$ conan install conanfile.py -s build_type=Debug"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:50
msgid ""
"This generator is multi-configuration. It will generate different files for "
"the different *Debug/Release* configurations for each requirement. It will "
"also generate one single file (*conandeps.xcconfig*) aggregating all the "
"files for the direct dependencies (just *libpng* in this case). The above "
"commands generate the following files:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:55
msgid ""
".\n"
"├── conan_config.xcconfig\n"
"├── conan_libpng.xcconfig\n"
"├── conan_libpng_libpng.xcconfig\n"
"├── conan_libpng_libpng_debug_x86_64.xcconfig\n"
"├── conan_libpng_libpng_release_x86_64.xcconfig\n"
"├── conan_zlib.xcconfig\n"
"├── conan_zlib_zlib.xcconfig\n"
"├── conan_zlib_zlib_debug_x86_64.xcconfig\n"
"├── conan_zlib_zlib_release_x86_64.xcconfig\n"
"└── conandeps.xcconfig"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:69
msgid ""
"The first ``conan install`` with the default *Release* and *x86_64* "
"configuration generates:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:71
msgid ""
"*conan_libpng_libpng_release_x86_64.xcconfig*: declares variables with "
"conditional logic to be considered only for the active configuration in "
"*Xcode* or the one passed by command line to *xcodebuild*."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:72
msgid ""
"*conan_libpng_libpng.xcconfig*: includes *conan_libpng_libpng_release_x86_64."
"xcconfig* and declares the following *Xcode* build settings: "
"``SYSTEM_HEADER_SEARCH_PATHS``, ``GCC_PREPROCESSOR_DEFINITIONS``, "
"``OTHER_CFLAGS``, ``OTHER_CPLUSPLUSFLAGS``, ``FRAMEWORK_SEARCH_PATHS``, "
"``LIBRARY_SEARCH_PATHS``, ``OTHER_LDFLAGS``. It also includes the generated "
"*xcconfig* files for transitive dependencies (*conan_zlib_zlib.xcconfig* in "
"this case)."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:73
msgid ""
"*conan_libpng.xcconfig*: in this case it only includes *conan_libpng_libpng."
"xcconfig*, but in the case that the required package has components, this "
"file will include all of the components of the package."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:74
msgid ""
"Same 3 files will be generated for each dependency in the graph. In this "
"case, as *zlib* is a dependency of *libpng* it will generate: "
"*conan_zlib_zlib_release_x86_64.xcconfig*, *conan_zlib_zlib.xcconfig* and "
"*conan_zlib.xcconfig*."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:75
#: ../../../reference/tools/apple/xcodedeps.rst:84
msgid ""
"*conandeps.xcconfig*: configuration files including all direct dependencies, "
"in this case, it just includes ``conan_libpng.xcconfig``."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:76
#: ../../../reference/tools/apple/xcodedeps.rst:85
msgid ""
"The main *conan_config.xcconfig* file, to be added to the project. Includes "
"both the files from this generator and the generated by the :ref:"
"`XcodeToolchain<conan_tools_apple_xcodetoolchain>` in case it was also set."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:78
msgid "The second ``conan install -s build_type=Debug`` generates:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:80
msgid ""
"*conan_libpng_libpng_debug_x86_64.xcconfig*: same variables as the one below "
"for *Debug* configuration."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:81
msgid ""
"*conan_libpng_libpng.xcconfig*: this file has been already created by the "
"previous command, now it's modified to add the include for "
"*conan_libpng_debug_x86_64.xcconfig*."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:82
msgid "*conan_libpng.xcconfig*: this file will remain the same."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:83
msgid ""
"Like in the previous command the same 3 files will be generated for each "
"dependency in the graph. In this case, as *zlib* is a dependency of *libpng* "
"it will generate: *conan_zlib_zlib_debug_x86_64.xcconfig*, *conan_zlib_zlib."
"xcconfig* and *conan_zlib.xcconfig*."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:87
msgid ""
"If you want to add this dependencies to you Xcode project, you just have to "
"add the *conan_config.xcconfig* configuration file for all of the "
"configurations you want to use (usually *Debug* and *Release*)."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:92
msgid "Additional variables defined"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:94
msgid ""
"Besides the variables that define the *Xcode* build settings mentioned "
"above, there are additional variables declared that may be useful to use in "
"your *Xcode* project:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:97
msgid ""
"`PACKAGE_ROOT_<package_name>`: Set to the location of the :ref:"
"`package_folder attribute <conan_conanfile_properties_package_folder>`."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:101
msgid "Components support"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:103
msgid "This generator supports packages with components. That means that:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:105
msgid ""
"If a **dependency** ``package_info()`` declares ``cpp_info.requires`` on "
"some components, the generated *.xcconfig* files will contain includes to "
"only those components."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:109
msgid ""
"The current package ``requires`` will be fully dependent on and all "
"components. Recall that the ``package_info()`` only applies for consumers, "
"but not to the current package."
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:114
msgid "Custom configurations"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:116
msgid ""
"If your Xcode project defines custom configurations, like ``ReleaseShared``, "
"or ``MyCustomConfig``, it is possible to define it into the ``XcodeDeps`` "
"generator, so different project configurations can use different set of "
"dependencies. Let's say that our current project can be built as a shared "
"library, with the custom configuration ``ReleaseShared``, and the package "
"also controls this with the ``shared`` option:"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:122
msgid ""
"from conan import ConanFile\n"
"from conan.tools.apple import XcodeDeps\n"
"\n"
"class Pkg(ConanFile):\n"
"    settings = \"os\", \"compiler\", \"arch\", \"build_type\"\n"
"    options = {\"shared\": [True, False]}\n"
"    default_options = {\"shared\": False}\n"
"    requires = \"zlib/1.2.11\"\n"
"\n"
"    def generate(self):\n"
"        xcode = XcodeDeps(self)\n"
"        # We assume that -o *:shared=True is used to install all shared deps "
"too\n"
"        if self.options.shared:\n"
"            xcode.configuration = str(self.settings.build_type) + "
"\"Shared\"\n"
"        xcode.generate()"
msgstr ""

#: ../../../reference/tools/apple/xcodedeps.rst:140
msgid ""
"This will manage to generate new *.xcconfig* files for this custom "
"configuration, and when you switch to this configuration in the IDE, the "
"build system will take the correct values depending whether we want to link "
"with shared or static libraries."
msgstr ""
