# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/graph/outdated.rst:4
msgid "conan graph outdated"
msgstr ""

#: ../../../reference/commands/graph/outdated.rst:-1
msgid ""
"$ conan graph outdated -h\n"
"usage: conan graph outdated [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                            [-cc CORE_CONF] [--name NAME] [--version "
"VERSION]\n"
"                            [--user USER] [--channel CHANNEL]\n"
"                            [--requires REQUIRES]\n"
"                            [--tool-requires TOOL_REQUIRES] [-b BUILD]\n"
"                            [-r REMOTE | -nr] [-u [UPDATE]] [-pr PROFILE]\n"
"                            [-pr:b PROFILE_BUILD] [-pr:h PROFILE_HOST]\n"
"                            [-pr:a PROFILE_ALL] [-o OPTIONS]\n"
"                            [-o:b OPTIONS_BUILD] [-o:h OPTIONS_HOST]\n"
"                            [-o:a OPTIONS_ALL] [-s SETTINGS]\n"
"                            [-s:b SETTINGS_BUILD] [-s:h SETTINGS_HOST]\n"
"                            [-s:a SETTINGS_ALL] [-c CONF] [-c:b CONF_BUILD]\n"
"                            [-c:h CONF_HOST] [-c:a CONF_ALL] [-l LOCKFILE]\n"
"                            [--lockfile-partial] [--lockfile-out "
"LOCKFILE_OUT]\n"
"                            [--lockfile-clean]\n"
"                            [--lockfile-overrides LOCKFILE_OVERRIDES]\n"
"                            [--check-updates] [--build-require]\n"
"                            [path]\n"
"\n"
"List the dependencies in the graph and it's newer versions in the remote\n"
"\n"
"positional arguments:\n"
"  path                  Path to a folder containing a recipe (conanfile.py "
"or\n"
"                        conanfile.txt) or to a recipe file. e.g.,\n"
"                        ./my_project/conanfile.txt.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --name NAME           Provide a package name if not specified in "
"conanfile\n"
"  --version VERSION     Provide a package version if not specified in\n"
"                        conanfile\n"
"  --user USER           Provide a user if not specified in conanfile\n"
"  --channel CHANNEL     Provide a channel if not specified in conanfile\n"
"  --requires REQUIRES   Directly provide requires instead of a conanfile\n"
"  --tool-requires TOOL_REQUIRES\n"
"                        Directly provide tool-requires instead of a "
"conanfile\n"
"  -b BUILD, --build BUILD\n"
"                        Optional, specify which packages to build from "
"source.\n"
"                        Combining multiple '--build' options on one command\n"
"                        line is allowed. Possible values: --build=never\n"
"                        Disallow build for all packages, use binary "
"packages\n"
"                        or fail if a binary package is not found, it cannot "
"be\n"
"                        combined with other '--build' options. --"
"build=missing\n"
"                        Build packages from source whose binary package is "
"not\n"
"                        found. --build=cascade Build packages from source "
"that\n"
"                        have at least one dependency being built from "
"source.\n"
"                        --build=[pattern] Build packages from source whose\n"
"                        package reference matches the pattern. The pattern\n"
"                        uses 'fnmatch' style wildcards, so '--build=\"*\"' "
"will\n"
"                        build everything from source. --build=~[pattern]\n"
"                        Excluded packages, which will not be built from the\n"
"                        source, whose package reference matches the "
"pattern.\n"
"                        The pattern uses 'fnmatch' style wildcards.\n"
"                        --build=missing:[pattern] Build from source if a\n"
"                        compatible binary does not exist, only for packages\n"
"                        matching pattern. --build=compatible:[pattern]\n"
"                        (Experimental) Build from source if a compatible\n"
"                        binary does not exist, and the requested package is\n"
"                        invalid, the closest package binary following the\n"
"                        defined compatibility policies (method and\n"
"                        compatibility.py)\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Look in the specified remote or remotes server\n"
"  -nr, --no-remote      Do not use remote, resolve exclusively in the cache\n"
"  -u [UPDATE], --update [UPDATE]\n"
"                        Will install newer versions and/or revisions in the\n"
"                        local cache for the given reference name, or all\n"
"                        references in the graph if no argument is supplied.\n"
"                        When using version ranges, it will install the "
"latest\n"
"                        version that satisfies the range. It will update to\n"
"                        the latest revision for the resolved version range.\n"
"  -pr PROFILE, --profile PROFILE\n"
"                        Apply the specified profile. By default, or if\n"
"                        specifying -pr:h (--profile:host), it applies to "
"the\n"
"                        host context. Use -pr:b (--profile:build) to "
"specify\n"
"                        the build context, or -pr:a (--profile:all) to "
"specify\n"
"                        both contexts at once\n"
"  -pr:b PROFILE_BUILD, --profile:build PROFILE_BUILD\n"
"  -pr:h PROFILE_HOST, --profile:host PROFILE_HOST\n"
"  -pr:a PROFILE_ALL, --profile:all PROFILE_ALL\n"
"  -o OPTIONS, --options OPTIONS\n"
"                        Apply the specified options. By default, or if\n"
"                        specifying -o:h (--options:host), it applies to the\n"
"                        host context. Use -o:b (--options:build) to specify\n"
"                        the build context, or -o:a (--options:all) to "
"specify\n"
"                        both contexts at once. Example:\n"
"                        -o=\"pkg/*:with_qt=True\"\n"
"  -o:b OPTIONS_BUILD, --options:build OPTIONS_BUILD\n"
"  -o:h OPTIONS_HOST, --options:host OPTIONS_HOST\n"
"  -o:a OPTIONS_ALL, --options:all OPTIONS_ALL\n"
"  -s SETTINGS, --settings SETTINGS\n"
"                        Apply the specified settings. By default, or if\n"
"                        specifying -s:h (--settings:host), it applies to "
"the\n"
"                        host context. Use -s:b (--settings:build) to "
"specify\n"
"                        the build context, or -s:a (--settings:all) to "
"specify\n"
"                        both contexts at once. Example: -s=\"compiler=gcc\"\n"
"  -s:b SETTINGS_BUILD, --settings:build SETTINGS_BUILD\n"
"  -s:h SETTINGS_HOST, --settings:host SETTINGS_HOST\n"
"  -s:a SETTINGS_ALL, --settings:all SETTINGS_ALL\n"
"  -c CONF, --conf CONF  Apply the specified conf. By default, or if "
"specifying\n"
"                        -c:h (--conf:host), it applies to the host context.\n"
"                        Use -c:b (--conf:build) to specify the build "
"context,\n"
"                        or -c:a (--conf:all) to specify both contexts at "
"once.\n"
"                        Example:\n"
"                        -c=\"tools.cmake.cmaketoolchain:generator=Xcode\"\n"
"  -c:b CONF_BUILD, --conf:build CONF_BUILD\n"
"  -c:h CONF_HOST, --conf:host CONF_HOST\n"
"  -c:a CONF_ALL, --conf:all CONF_ALL\n"
"  -l LOCKFILE, --lockfile LOCKFILE\n"
"                        Path to a lockfile. Use --lockfile=\"\" to avoid\n"
"                        automatic use of existing 'conan.lock' file\n"
"  --lockfile-partial    Do not raise an error if some dependency is not "
"found\n"
"                        in lockfile\n"
"  --lockfile-out LOCKFILE_OUT\n"
"                        Filename of the updated lockfile\n"
"  --lockfile-clean      Remove unused entries from the lockfile\n"
"  --lockfile-overrides LOCKFILE_OVERRIDES\n"
"                        Overwrite lockfile overrides\n"
"  --check-updates       Check if there are recipe updates\n"
"  --build-require       Whether the provided reference is a build-require\n"
"\n"
msgstr ""

#: ../../../reference/commands/graph/outdated.rst:10
msgid ""
"The ``conan graph outdated`` command provides details on libraries for which "
"a newer version is available in a remote repository. This command helps "
"users in identifying outdated libraries by displaying the latest version "
"available in the remote repository and indicating which specific remote "
"repository it was found in. Additionally, it presents information on the "
"versions currently stored in the local cache and specifies the version "
"ranges for each library."
msgstr ""

#: ../../../reference/commands/graph/outdated.rst:15
msgid ""
"It will display the information for every library on the dependency graph it "
"is run on. For example if running the command with an older version of "
"``libcurl`` it will display:"
msgstr ""

#: ../../../reference/commands/graph/outdated.rst:18
msgid "$ conan graph outdated --requires=libcurl/[*]"
msgstr ""

#: ../../../reference/commands/graph/outdated.rst:22
msgid ""
"======== Computing dependency graph ========\n"
"Graph root\n"
"    cli\n"
"Requirements\n"
"    libcurl/8.5.0#95279f20d2443016907657f081a79261 - Cache\n"
"    openssl/3.2.1#edbeabd3bfc383d2cca3858aa2a78a0d - Cache\n"
"    zlib/1.3.1#f52e03ae3d251dec704634230cd806a2 - Cache\n"
"Build requirements\n"
"    nasm/2.15.05#058c93b2214a49ca1cfe9f8f26205568 - Cache\n"
"    strawberryperl/5.32.1.1#8f83d05a60363a422f9033e52d106b47 - Cache\n"
"Resolved version ranges\n"
"    libcurl/[*]: libcurl/8.5.0\n"
"    openssl/[>=1.1 <4]: openssl/3.2.1\n"
"    zlib/[>=1.2.11 <2]: zlib/1.3.1\n"
"\n"
"======== Checking remotes ========\n"
"Found 35 pkg/version recipes matching libcurl in conancenter\n"
"Found 46 pkg/version recipes matching openssl in conancenter\n"
"Found 6 pkg/version recipes matching zlib in conancenter\n"
"Found 5 pkg/version recipes matching nasm in conancenter\n"
"Found 3 pkg/version recipes matching strawberryperl in conancenter\n"
"======== Outdated dependencies ========\n"
"libcurl\n"
"    Current versions:  libcurl/8.5.0\n"
"    Latest in remote(s):  libcurl/8.6.0 - conancenter\n"
"    Version ranges: libcurl/[*]\n"
"nasm\n"
"    Current versions:  nasm/2.15.05\n"
"    Latest in remote(s):  nasm/2.16.01 - conancenter"
msgstr ""
