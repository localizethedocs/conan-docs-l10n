# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/gnu/autotools.rst:4
msgid "Autotools"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:7
msgid ""
"The ``Autotools`` build helper is a wrapper around the command line "
"invocation of autotools. It will abstract the calls like ``./configure`` or "
"``make`` into Python method calls."
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:10
msgid "Usage:"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:12
msgid ""
"from conan import ConanFile\n"
"from conan.tools.gnu import Autotools\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def build(self):\n"
"        autotools = Autotools(self)\n"
"        autotools.configure()\n"
"        autotools.make()"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:25
msgid ""
"It will read the ``conanbuild.conf`` file generated by the :ref:"
"`AutotoolsToolchain<conan_tools_gnu_autotoolstoolchain>` to know read the "
"arguments for calling the configure and make scripts:"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:28
msgid "**configure_args**: Arguments to call the ``configure`` script."
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:29
msgid "**make_args**: Arguments to call the ``make`` script."
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:33
msgid "Reference"
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools:0
#: conan.tools.gnu.autotools.Autotools.autoreconf:0
#: conan.tools.gnu.autotools.Autotools.configure:0
#: conan.tools.gnu.autotools.Autotools.install:0
#: conan.tools.gnu.autotools.Autotools.make:0
msgid "Parameters"
msgstr "參數"

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools:1
msgid "The current recipe object. Always use ``self``."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools:2
msgid ""
"this argument avoids collisions when you have multiple toolchain calls in "
"the same recipe. By setting this argument, the *conanbuild.conf* file used "
"to pass information to the toolchain will be named as: "
"*<namespace>_conanbuild.conf*. The default value is ``None`` meaning that "
"the name of the generated file is *conanbuild.conf*. This namespace must be "
"also set with the same value in the constructor of the AutotoolsToolchain so "
"that it reads the information from the proper file."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.configure:1
msgid "Call the configure script."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.configure:3
msgid "List of arguments to use for the ``configure`` call."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.autoreconf:5
#: conan.tools.gnu.autotools.Autotools.configure:4
msgid ""
"Subfolder where the `configure` script is located. If not specified "
"conanfile.source_folder is used."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.make:1
msgid "Call the make program."
msgstr "呼叫 make 程式。"

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.make:3
msgid ""
"(Optional, Defaulted to ``None``): Choose which target to build. This allows "
"building of e.g., docs, shared libraries or install for some AutoTools "
"projects"
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.make:6
msgid ""
"(Optional, Defaulted to ``None``): List of arguments to use for the ``make`` "
"call."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.install:1
msgid "This is just an \"alias\" of ``self.make(target=\"install\")``"
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.install:3
msgid ""
"(Optional, Defaulted to ``None``): List of arguments to use for the ``make`` "
"call. By default an argument ``DESTDIR=unix_path(self.package_folder)`` is "
"added to the call if the passed value is ``None``. See more information "
"about :ref:`tools.microsoft.unix_path() "
"function<conan_tools_microsoft_unix_path>`"
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.install:7
msgid "(Optional, Defaulted to ``None``): Choose which target to install."
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.autoreconf:1
msgid "Call ``autoreconf``"
msgstr ""

#: ../../../conan_sources/conan/tools/gnu/autotools.py:docstring of
#: conan.tools.gnu.autotools.Autotools.autoreconf:3
msgid ""
"(Optional, Defaulted to ``None``): List of arguments to use for the "
"``autoreconf`` call."
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:42
msgid ""
"A note about relocatable shared libraries in macOS built the  Autotools "
"build helper"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:44
msgid ""
"When building a shared library with Autotools in macOS a section "
"``LC_ID_DYLIB`` and another ``LC_LOAD_DYLIB`` are added to the ``.dylib``. "
"These sections store ``install_name`` information, which is the location of "
"the folder where the library or its dependencies are installed. You can "
"check the install_name of your shared libraries using the otool command:"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:50
msgid ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"..."
msgstr ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name path/to/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"..."

#: ../../../reference/tools/gnu/autotools.rst:71
msgid "Why is this a problem when using Conan?"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:73
msgid ""
"When using Conan the library will be built in the local cache and this means "
"that this location will point to Conan's local cache folder where the "
"library was installed. This location is where the library tells any other "
"binaries using it where to load it at runtime. This is a problem since you "
"can build the shared library in one machine, then upload it to a server and "
"install it in another machine to use it. In this case, as Autotools behaves "
"by default, you would have a library storing an ``install_name`` pointing to "
"a folder that does not exist in your current machine so you would get linker "
"errors when building."
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:84
msgid "How to address this problem in Conan"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:86
msgid ""
"The only thing Conan can do to make these shared libraries relocatable is to "
"patch the built binaries after installation. To do this, when using the "
"``Autotools`` build helper and after running the Makefile's ``install()`` "
"step, you can use the :ref:`fix_apple_shared_install_name() "
"<conan_tools_apple_fix_apple_shared_install_name>` tool to search for the "
"built ``.dylib`` files and patch them by running the ``install_name_tool`` "
"macOS utility, like this:"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:93
msgid ""
"from conan.tools.apple import fix_apple_shared_install_name\n"
"class HelloConan(ConanFile):\n"
"  ...\n"
"  def package(self):\n"
"      autotools = Autotools(self)\n"
"      autotools.install()\n"
"      fix_apple_shared_install_name(self)"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:104
msgid ""
"This will change the value of the ``LC_ID_DYLIB`` and ``LC_LOAD_DYLIB`` "
"sections in the ``.dylib`` file to:"
msgstr ""

#: ../../../reference/tools/gnu/autotools.rst:107
msgid ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0"
msgstr ""
"$ otool -l path/to/libMyLib.dylib\n"
"...\n"
"cmd LC_ID_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/libMyLib.dylib (offset 24)\n"
"time stamp 1 Thu Jan  1 01:00:01 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0\n"
"...\n"
"Load command 11\n"
"        cmd LC_LOAD_DYLIB\n"
"    cmdsize 48\n"
"        name @rpath/dependency.dylib (offset 24)\n"
"time stamp 2 Thu Jan  1 01:00:02 1970\n"
"    current version 1.0.0\n"
"compatibility version 1.0.0"

#: ../../../reference/tools/gnu/autotools.rst:126
msgid ""
"The ``@rpath`` special keyword will tell the loader to search a list of "
"paths to find the library. These paths can be defined by the consumer of "
"that library by defining the ``LC_RPATH`` field. This is done by passing the "
"``-Wl,-rpath -Wl,/path/to/libMyLib.dylib`` linker flag when building the "
"consumer of the library. Then if Conan builds an executable that consumes "
"the ``libMyLib.dylib`` library, it will automatically add the ``-Wl,-rpath -"
"Wl,/path/to/libMyLib.dylib`` flag so that the library is correctly found "
"when building."
msgstr ""
