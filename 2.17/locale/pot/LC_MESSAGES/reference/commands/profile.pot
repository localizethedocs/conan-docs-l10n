# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/profile.rst:4
msgid "conan profile"
msgstr ""

#: ../../../reference/commands/profile.rst:6
msgid "Manage profiles"
msgstr ""

#: ../../../reference/commands/profile.rst:10
msgid "conan profile detect"
msgstr ""

#: ../../../reference/commands/profile.rst:-1
msgid ""
"$ conan profile detect -h\n"
"usage: conan profile detect [-h] [--out-file OUT_FILE] [-v [V]]\n"
"                            [-cc CORE_CONF] [--name NAME] [-f] [-e]\n"
"\n"
"Generate a profile using auto-detected values.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --name NAME           Profile name, 'default' if not specified\n"
"  -f, --force           Overwrite if exists\n"
"  -e, --exist-ok        If the profile already exist, do not detect a new "
"one\n"
"\n"
msgstr ""

#: ../../../reference/commands/profile.rst:18
msgid ""
"The output of ``conan profile detect`` is **not stable**. It can change at "
"any time in future Conan releases to adapt to latest tools, latest versions, "
"or other changes in the environment. See :ref:`the Conan "
"stability<stability>` section for more information."
msgstr ""

#: ../../../reference/commands/profile.rst:22
msgid ""
"You can create a new auto-detected profile for your configuration using:"
msgstr ""

#: ../../../reference/commands/profile.rst:24
msgid "*auto-detected profile*"
msgstr ""

#: ../../../reference/commands/profile.rst:24
msgid ""
"$ conan profile detect\n"
"Found apple-clang 14.0\n"
"apple-clang>=13, using the major as version\n"
"Detected profile:\n"
"[settings]\n"
"arch=x86_64\n"
"build_type=Release\n"
"compiler=apple-clang\n"
"compiler.cppstd=gnu17\n"
"compiler.libcxx=libc++\n"
"compiler.version=14\n"
"os=Macos\n"
"\n"
"WARN: This profile is a guess of your environment, please check it.\n"
"WARN: Defaulted to cppstd='gnu17' for apple-clang.\n"
"WARN: The output of this command is not guaranteed to be stable and can "
"change in future Conan versions.\n"
"WARN: Use your own profile files for stability.\n"
"Saving detected profile to /Users/barbarians/.conan2/profiles/default"
msgstr ""

#: ../../../reference/commands/profile.rst:47
msgid ""
"Be aware that if the profile already exists you have to use ``--force`` to "
"overwrite it. Otherwise it will fail"
msgstr ""

#: ../../../reference/commands/profile.rst:49
#: ../../../reference/commands/profile.rst:75
msgid "*force overwriting already existing default profile*"
msgstr ""

#: ../../../reference/commands/profile.rst:49
msgid ""
"$ conan profile detect\n"
"ERROR: Profile '/Users/carlosz/.conan2/profiles/default' already exists\n"
"$ conan profile detect --force\n"
"Found apple-clang 14.0\n"
"...\n"
"Saving detected profile to /Users/carlosz/.conan2/profiles/default"
msgstr ""

#: ../../../reference/commands/profile.rst:61
msgid ""
"**Best practices** It is not recommended to use ``conan profile detect`` in "
"production. To guarantee reproducibility, it is recommended to define your "
"own profiles, store them in a git repo or in a zip in a server, and "
"distribute it to your team and CI machines with ``conan config install``, "
"together with other configuration like custom settings, custom remotes "
"definition, etc."
msgstr ""

#: ../../../reference/commands/profile.rst:69
msgid "conan profile list"
msgstr ""

#: ../../../reference/commands/profile.rst:-1
msgid ""
"$ conan profile list -h\n"
"usage: conan profile list [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                          [-cc CORE_CONF]\n"
"\n"
"List all profiles in the cache.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/profile.rst:75
msgid ""
"$ conan profile list\n"
"Profiles found in the cache:\n"
"default\n"
"ios_base\n"
"ios_simulator\n"
"clang_15"
msgstr ""

#: ../../../reference/commands/profile.rst:87
msgid "conan profile path"
msgstr ""

#: ../../../reference/commands/profile.rst:-1
msgid ""
"$ conan profile path -h\n"
"usage: conan profile path [-h] [--out-file OUT_FILE] [-v [V]] [-cc "
"CORE_CONF]\n"
"                          name\n"
"\n"
"Show profile path location.\n"
"\n"
"positional arguments:\n"
"  name                  Profile name\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/profile.rst:93
msgid "Use to get the profile location in your ``[CONAN_HOME]`` folder:"
msgstr ""

#: ../../../reference/commands/profile.rst:95
msgid ""
"$ conan profile path default\n"
"/Users/barbarians/.conan2/profiles/default"
msgstr ""

#: ../../../reference/commands/profile.rst:102
msgid "conan profile show"
msgstr ""

#: ../../../reference/commands/profile.rst:-1
msgid ""
"$ conan profile show -h\n"
"usage: conan profile show [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                          [-cc CORE_CONF] [-pr PROFILE] [-pr:b "
"PROFILE_BUILD]\n"
"                          [-pr:h PROFILE_HOST] [-pr:a PROFILE_ALL]\n"
"                          [-o OPTIONS] [-o:b OPTIONS_BUILD]\n"
"                          [-o:h OPTIONS_HOST] [-o:a OPTIONS_ALL] [-s "
"SETTINGS]\n"
"                          [-s:b SETTINGS_BUILD] [-s:h SETTINGS_HOST]\n"
"                          [-s:a SETTINGS_ALL] [-c CONF] [-c:b CONF_BUILD]\n"
"                          [-c:h CONF_HOST] [-c:a CONF_ALL] [-cx {host,"
"build}]\n"
"\n"
"Show aggregated profiles from the passed arguments.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  -pr PROFILE, --profile PROFILE\n"
"                        Apply the specified profile. By default, or if\n"
"                        specifying -pr:h (--profile:host), it applies to "
"the\n"
"                        host context. Use -pr:b (--profile:build) to "
"specify\n"
"                        the build context, or -pr:a (--profile:all) to "
"specify\n"
"                        both contexts at once\n"
"  -pr:b PROFILE_BUILD, --profile:build PROFILE_BUILD\n"
"  -pr:h PROFILE_HOST, --profile:host PROFILE_HOST\n"
"  -pr:a PROFILE_ALL, --profile:all PROFILE_ALL\n"
"  -o OPTIONS, --options OPTIONS\n"
"                        Apply the specified options. By default, or if\n"
"                        specifying -o:h (--options:host), it applies to the\n"
"                        host context. Use -o:b (--options:build) to specify\n"
"                        the build context, or -o:a (--options:all) to "
"specify\n"
"                        both contexts at once. Example:\n"
"                        -o=\"pkg/*:with_qt=True\"\n"
"  -o:b OPTIONS_BUILD, --options:build OPTIONS_BUILD\n"
"  -o:h OPTIONS_HOST, --options:host OPTIONS_HOST\n"
"  -o:a OPTIONS_ALL, --options:all OPTIONS_ALL\n"
"  -s SETTINGS, --settings SETTINGS\n"
"                        Apply the specified settings. By default, or if\n"
"                        specifying -s:h (--settings:host), it applies to "
"the\n"
"                        host context. Use -s:b (--settings:build) to "
"specify\n"
"                        the build context, or -s:a (--settings:all) to "
"specify\n"
"                        both contexts at once. Example: -s=\"compiler=gcc\"\n"
"  -s:b SETTINGS_BUILD, --settings:build SETTINGS_BUILD\n"
"  -s:h SETTINGS_HOST, --settings:host SETTINGS_HOST\n"
"  -s:a SETTINGS_ALL, --settings:all SETTINGS_ALL\n"
"  -c CONF, --conf CONF  Apply the specified conf. By default, or if "
"specifying\n"
"                        -c:h (--conf:host), it applies to the host context.\n"
"                        Use -c:b (--conf:build) to specify the build "
"context,\n"
"                        or -c:a (--conf:all) to specify both contexts at "
"once.\n"
"                        Example:\n"
"                        -c=\"tools.cmake.cmaketoolchain:generator=Xcode\"\n"
"  -c:b CONF_BUILD, --conf:build CONF_BUILD\n"
"  -c:h CONF_HOST, --conf:host CONF_HOST\n"
"  -c:a CONF_ALL, --conf:all CONF_ALL\n"
"  -cx {host,build}, --context {host,build}\n"
"\n"
msgstr ""

#: ../../../reference/commands/profile.rst:108
msgid ""
"Use :command:`conan profile show` to compute the resulting build and host "
"profiles from the command line arguments. For example, combining different "
"options and settings with the default profile or with any other profile "
"using the ``pr:b`` or ``pr:h`` arguments:"
msgstr ""

#: ../../../reference/commands/profile.rst:112
msgid ""
"$ conan profile show -s:h build_type=Debug -o:h shared=False\n"
"Host profile:\n"
"[settings]\n"
"arch=x86_64\n"
"build_type=Debug\n"
"compiler=apple-clang\n"
"compiler.cppstd=gnu17\n"
"compiler.libcxx=libc++\n"
"compiler.version=14\n"
"os=Macos\n"
"[options]\n"
"shared=False\n"
"[conf]\n"
"\n"
"\n"
"Build profile:\n"
"[settings]\n"
"arch=x86_64\n"
"build_type=Release\n"
"compiler=apple-clang\n"
"compiler.cppstd=gnu17\n"
"compiler.libcxx=libc++\n"
"compiler.version=14\n"
"os=Macos\n"
"[conf]"
msgstr ""

#: ../../../reference/commands/profile.rst:141
msgid ""
"It's also useful to show the result of the evaluation of :ref:`jinja2 "
"templates in the profiles<reference_config_files_profiles_rendering>`. For "
"example, a profile like this:"
msgstr ""

#: ../../../reference/commands/profile.rst:144
msgid "*myprofile*"
msgstr ""

#: ../../../reference/commands/profile.rst:144
msgid ""
"[settings]\n"
"os = {{ {\"Darwin\": \"Macos\"}.get(platform.system(), platform.system()) }}"
msgstr ""

#: ../../../reference/commands/profile.rst:150
msgid "Check the evaluated profile:"
msgstr ""

#: ../../../reference/commands/profile.rst:152
msgid ""
"$ conan profile show -pr:h=myprofile\n"
"Host profile:\n"
"[settings]\n"
"os=Macos\n"
"[conf]\n"
"..."
msgstr ""

#: ../../../reference/commands/profile.rst:162
msgid "The command can also output a json with the results:"
msgstr ""

#: ../../../reference/commands/profile.rst:164
msgid ""
"$ conan profile show --format=json\n"
"\n"
"{\n"
"\"host\": {\n"
"    \"settings\": {\n"
"        \"arch\": \"armv8\",\n"
"        \"build_type\": \"Release\",\n"
"        \"compiler\": \"apple-clang\",\n"
"        \"compiler.cppstd\": \"gnu17\",\n"
"        \"compiler.libcxx\": \"libc++\",\n"
"        \"compiler.version\": \"15\",\n"
"        \"os\": \"Macos\"\n"
"    },\n"
"    \"package_settings\": {},\n"
"    \"options\": {},\n"
"    \"tool_requires\": {},\n"
"    \"conf\": {},\n"
"    \"build_env\": \"\"\n"
"},\n"
"\"build\": {\n"
"    \"settings\": {\n"
"        \"arch\": \"armv8\",\n"
"        \"build_type\": \"Release\",\n"
"        \"compiler\": \"apple-clang\",\n"
"        \"compiler.cppstd\": \"gnu17\",\n"
"        \"compiler.libcxx\": \"libc++\",\n"
"        \"compiler.version\": \"15\",\n"
"        \"os\": \"Macos\"\n"
"    },\n"
"    \"package_settings\": {},\n"
"    \"options\": {},\n"
"    \"tool_requires\": {},\n"
"    \"conf\": {},\n"
"    \"build_env\": \"\"\n"
"}\n"
"}"
msgstr ""

#: ../../../reference/commands/profile.rst:205
msgid "Read more about :ref:`profiles<reference_config_files_profiles>`"
msgstr ""
