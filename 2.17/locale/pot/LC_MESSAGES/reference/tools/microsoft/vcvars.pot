# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/microsoft/vcvars.rst:5
msgid "VCVars"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:7
msgid ""
"Generates a file called ``conanvcvars.bat`` that activates the Visual Studio "
"developer command prompt according to the current settings by wrapping the "
"`vcvarsall <https://docs.microsoft.com/en-us/cpp/build/building-on-the-"
"command-line?view=vs-2017>`_ Microsoft bash script."
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:12
msgid "The ``VCVars`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:14
#: ../../../reference/tools/microsoft/vcvars.rst:28
msgid "conanfile.py"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:14
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"VCVars\""
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:20
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:20
msgid ""
"[generators]\n"
"VCVars"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:26
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:28
msgid ""
"from conan import ConanFile\n"
"from conan.tools.microsoft import VCVars\n"
"\n"
"class Pkg(ConanFile):\n"
"    settings = \"os\", \"compiler\", \"arch\", \"build_type\"\n"
"    requires = \"zlib/1.2.11\", \"bzip2/1.0.8\"\n"
"\n"
"    def generate(self):\n"
"        ms = VCVars(self)\n"
"        ms.generate()"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:45
msgid "Customization"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:48
msgid "conf"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:50
msgid "``VCVars`` is affected by these ``[conf]`` variables:"
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:52
msgid ""
"``tools.microsoft.msbuild:installation_path`` indicates the path to Visual "
"Studio installation folder. For instance: ``C:\\Program Files "
"(x86)\\Microsoft Visual Studio\\2019\\Community``, ``C:\\Program Files "
"(x86)\\Microsoft Visual Studio 14.0``, etc."
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:54
msgid ""
"``tools.microsoft:winsdk_version`` defines the specific winsdk version in "
"the vcvars command line."
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:55
msgid ""
"``tools.env.virtualenv:powershell`` generates an additional ``conanvcvars."
"ps1`` so it can be run from the Powershell console."
msgstr ""

#: ../../../reference/tools/microsoft/vcvars.rst:58
msgid "Reference"
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars:1
msgid ""
"VCVars class generator to generate a ``conanvcvars.bat`` script that "
"activates the correct Visual Studio prompt."
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars:4
msgid ""
"This generator will be automatically called by other generators such as "
"``CMakeToolchain`` when considered necessary, for example if building with "
"Visual Studio compiler using the CMake ``Ninja`` generator, which needs an "
"active Visual Studio prompt. Then, it is not necessary to explicitly "
"instantiate this generator in most cases."
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars:0
#: conan.tools.microsoft.visual.VCVars.generate:0
msgid "Parameters"
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars:9
msgid "``ConanFile object`` The current recipe object. Always use ``self``."
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars.generate:1
msgid ""
"Creates a ``conanvcvars.bat`` file that calls Visual ``vcvars`` with the "
"necessary args to activate the correct Visual Studio prompt matching the "
"Conan settings."
msgstr ""

#: ../../../conan_sources/conan/tools/microsoft/visual.py:docstring of
#: conan.tools.microsoft.visual.VCVars.generate:4
msgid ""
"``str`` activation scope, by default \"build\". It means it will add a call "
"to this ``conanvcvars.bat`` from the aggregating general ``conanbuild.bat``, "
"which is the script that will be called by default in ``self.run()`` calls "
"and build helpers such as ``cmake.configure()`` and ``cmake.build()``."
msgstr ""
