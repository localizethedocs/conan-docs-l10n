# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/workspace.rst:4
msgid "conan workspace"
msgstr ""

#: ../../../common/incubating_warning.inc:3
msgid ""
"This feature is part of the new incubating features. This means that it is "
"under development, and looking for user testing and feedback. For more info "
"see :ref:`Incubating section<incubating>`."
msgstr ""

#: ../../../reference/commands/workspace.rst:9
msgid ""
"The ``conan workspace`` command allows to open, add, and remove packages "
"from the current workspace. Check the ``conan workspace -h`` help and the "
"help of the subcommands to check their usage."
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace -h\n"
"Error executing: conan workspace -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:18
msgid "conan workspace init"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace init -h\n"
"Error executing: conan workspace init -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:24
msgid ""
"The command ``conan workspace init [path]`` creates an empty ``conanws.yml`` "
"file and a minimal ``conanws.py`` within that path if they don't exist yet. "
"That path can be relative to your current working directory."
msgstr ""

#: ../../../reference/commands/workspace.rst:27
msgid ""
"$ conan workspace init myfolder\n"
"Created empty conanws.yml in myfolder\n"
"Created minimal conanws.py in myfolder"
msgstr ""

#: ../../../reference/commands/workspace.rst:35
msgid "conan workspace [add | remove]"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace add -h\n"
"Error executing: conan workspace add -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace remove -h\n"
"Error executing: conan workspace remove -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:44
msgid ""
"Use these commands to add or remove editable packages to the current "
"workspace. The ``conan workspace add <path>`` folder must contain a "
"``conanfile.py``. That path can be relative to your current workspace."
msgstr ""

#: ../../../reference/commands/workspace.rst:47
msgid ""
"The ``conanws.py`` has a default implementation, but it is possible to "
"override the default behavior:"
msgstr ""

#: ../../../reference/commands/workspace.rst:49
msgid "conanws.py"
msgstr ""

#: ../../../reference/commands/workspace.rst:49
msgid ""
"import os\n"
"from conan import Workspace\n"
"\n"
"class MyWorkspace(Workspace):\n"
"   def name(self):\n"
"      return \"myws\"\n"
"\n"
"   def add(self, ref, path, *args, **kwargs):\n"
"      self.output.info(f\"Adding {ref} at {path}\")\n"
"      super().add(ref, path, *args, **kwargs)\n"
"\n"
"   def remove(self, path, *args, **kwargs):\n"
"      self.output.info(f\"Removing {path}\")\n"
"      return super().remove(path, *args, **kwargs)"
msgstr ""

#: ../../../reference/commands/workspace.rst:69
msgid "conan workspace info"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace info -h\n"
"Error executing: conan workspace info -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:75
msgid "Use this command to show information about the current workspace"
msgstr ""

#: ../../../reference/commands/workspace.rst:77
msgid ""
"$ cd myfolder\n"
"$ conan new workspace\n"
"$ conan workspace info\n"
"WARN: Workspace found\n"
"WARN: Workspace is a dev-only feature, exclusively for testing\n"
"name: myfolder\n"
"folder: /path/to/myfolder\n"
"products\n"
"   app1\n"
"packages\n"
"   liba/0.1\n"
"      path: liba\n"
"   libb/0.1\n"
"      path: libb\n"
"   app1/0.1\n"
"      path: app1"
msgstr ""

#: ../../../reference/commands/workspace.rst:98
msgid "conan workspace clean"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace clean -h\n"
"Error executing: conan workspace clean -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:104
msgid ""
"The new ``conan workspace clean`` command removes by default the ``output-"
"folder`` of every package in the workspace if it was defined. If it is not "
"defined, it won't remove anything by default, as removing files in user "
"space is dangerous, and could destroy user changes or files. It would be "
"recommended that users manage that cleaning with ``git clean -xdf`` or "
"similar strategies. It is also possible to define a custom clean logic by "
"implementing the ``clean()`` method:"
msgstr ""

#: ../../../reference/commands/workspace.rst:109
msgid ""
"class Ws(Workspace):\n"
"   def name(self):\n"
"      return \"my_workspace\"\n"
"   def clean(self):\n"
"      self.output.info(\"MY CLEAN!!!!\")"
msgstr ""

#: ../../../reference/commands/workspace.rst:120
msgid "conan workspace open"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace open -h\n"
"Error executing: conan workspace open -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:126
msgid ""
"The new ``conan workspace open`` command implements a new concept. The "
"packages containing an ``scm`` information in the ``conandata.yml`` (with "
"``git.coordinates_to_conandata()``) can be automatically cloned and checkout "
"inside the current workspace from their Conan recipe reference (including "
"recipe revision)."
msgstr ""

#: ../../../reference/commands/workspace.rst:132
msgid "conan workspace build"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace build -h\n"
"Error executing: conan workspace build -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:138
msgid ""
"The command ``conan workspace build`` does the equivalent of ``conan build "
"<product-path> --build=editable``, for every ``product`` defined within the "
"workspace."
msgstr ""

#: ../../../reference/commands/workspace.rst:141
msgid ""
"Products are the \"downstream\" consumers, the \"root\" and starting node of "
"dependency graphs. They can be defined with the ``conan workspace add "
"<folder> --product`` new ``--product`` argument."
msgstr ""

#: ../../../reference/commands/workspace.rst:144
msgid ""
"The ``conan workspace build`` command just iterates all products, so it "
"might repeat the build of editables dependencies of the products. In most "
"cases, it will be a no-op as the projects would be already built, but might "
"still take some time. This is pending for optimization, but that will be "
"done later, the important thing now is to focus on tools, UX, flows, and "
"definitions (of things like the ``products``)."
msgstr ""

#: ../../../reference/commands/workspace.rst:151
msgid "conan workspace install"
msgstr ""

#: ../../../reference/commands/workspace.rst:-1
msgid ""
"$ conan workspace install -h\n"
"Error executing: conan workspace install -h\n"
"ERROR: Workspace command disabled without CONAN_WORKSPACE_ENABLE env var,"
"please read the docs about this 'incubating' feature\n"
"\n"
msgstr ""

#: ../../../reference/commands/workspace.rst:157
msgid ""
"The command ``conan workspace install`` is useful to install and build the "
"current workspace as a monolithic super-project of the editables."
msgstr ""

#: ../../../reference/commands/workspace.rst:160
msgid ""
"By default it uses all the ``editable`` packages in the workspace. It is "
"possible to select only a subset of them with the ``conan workspace install "
"<folder1> .. <folderN>`` optional arguments. Only the subgraph of those "
"packages, including their dependencies and transitive dependencies will be "
"installed."
msgstr ""

#: ../../../reference/commands/workspace.rst:168
msgid ""
"Read the :ref:`Workspace tutorial<tutorial_workspaces>` section. Read the :"
"ref:`conan new workspace<reference_commands_new>` command section."
msgstr ""
