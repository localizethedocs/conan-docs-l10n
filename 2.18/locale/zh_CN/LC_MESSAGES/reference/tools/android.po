# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.18\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/android.rst:4
msgid "conan.tools.android"
msgstr ""

#: ../../../reference/tools/android.rst:7
msgid "android_abi()"
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:1
msgid "Returns Android-NDK ABI"
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:0
msgid "Parameters"
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:3
msgid "ConanFile instance"
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:4
msgid "either \"host\", \"build\" or \"target\""
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:0
msgid "Returns"
msgstr ""

#: ../../../conan_sources/conan/tools/android/utils.py:docstring of
#: conan.tools.android.utils.android_abi:5
msgid "Android-NDK ABI"
msgstr ""

#: ../../../reference/tools/android.rst:13
msgid ""
"This function might not be necessary when using Conan built-in integrations, "
"as they already manage it, but can be useful if developing your own build "
"system integration."
msgstr ""

#: ../../../reference/tools/android.rst:16
msgid ""
"``android_abi()`` function returns the Android standard ABI name based on "
"Conan ``settings.arch`` value, something like:"
msgstr ""

#: ../../../reference/tools/android.rst:18
msgid ""
"def android_abi(conanfile, context=\"host\"):\n"
"  ...\n"
"  return {\n"
"        \"armv5el\": \"armeabi\",\n"
"        \"armv5hf\": \"armeabi\",\n"
"        \"armv5\": \"armeabi\",\n"
"        \"armv6\": \"armeabi-v6\",\n"
"        \"armv7\": \"armeabi-v7a\",\n"
"        \"armv7hf\": \"armeabi-v7a\",\n"
"        \"armv8\": \"arm64-v8a\",\n"
"        }.get(conanfile.settings.arch)"
msgstr ""

#: ../../../reference/tools/android.rst:33
msgid ""
"As it can be seen, the default is the \"host\" ABI, but it is possible to "
"select also the \"build\" or \"target\" ones if necessary."
msgstr ""

#: ../../../reference/tools/android.rst:35
msgid ""
"from conan.tools.android import android_abi\n"
"\n"
"class Pkg(ConanFile):\n"
"    def generate(self)\n"
"        abi = android_abi(self)"
msgstr ""
