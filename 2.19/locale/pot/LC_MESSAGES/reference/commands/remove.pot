# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.19\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/remove.rst:4
msgid "conan remove"
msgstr ""

#: ../../../reference/commands/remove.rst:-1
msgid ""
"$ conan remove -h\n"
"usage: conan remove [-h] [-v [V]] [-cc CORE_CONF] [-f FORMAT]\n"
"                    [--out-file OUT_FILE] [-c] [-p PACKAGE_QUERY] [-r "
"REMOTE]\n"
"                    [-l LIST] [--lru LRU] [--dry-run]\n"
"                    [pattern]\n"
"\n"
"Remove recipes or packages from local cache or a remote.\n"
"\n"
"- If no remote is specified (-r), the removal will be done in the local "
"conan cache.\n"
"- If a recipe reference is specified, it will remove the recipe and all the "
"packages, unless -p\n"
"  is specified, in that case, only the packages matching the specified query "
"(and not the recipe)\n"
"  will be removed.\n"
"- If a package reference is specified, it will remove only the package.\n"
"\n"
"positional arguments:\n"
"  pattern               A pattern in the form\n"
"                        'pkg/version#revision:package_id#revision', e.g:\n"
"                        \"zlib/1.2.13:*\" means all binaries for "
"zlib/1.2.13. If\n"
"                        revision is not specified, it is assumed latest "
"one.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -c, --confirm         Remove without requesting a confirmation\n"
"  -p PACKAGE_QUERY, --package-query PACKAGE_QUERY\n"
"                        Remove all packages (empty) or provide a query:\n"
"                        os=Windows AND (arch=x86 OR compiler=gcc)\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Will remove from the specified remote\n"
"  -l LIST, --list LIST  Package list file\n"
"  --lru LRU             Remove recipes and binaries that have not been\n"
"                        recently used. Use a time limit like --lru=5d "
"(days)\n"
"                        or --lru=4w (weeks), h (hours), m(minutes)\n"
"  --dry-run             Do not remove any items, only print those which "
"would\n"
"                        be removed\n"
"\n"
msgstr ""

#: ../../../reference/commands/remove.rst:10
msgid ""
"The ``conan remove`` command removes recipes and packages from the local "
"cache or from a specified remote. Depending on the patterns specified as "
"argument, it is possible to remove a complete package, or just remove the "
"binaries, leaving still the recipe available. You can also use the keyword "
"``!latest`` in the revision part of the pattern to avoid removing the latest "
"recipe or package revision of a certain Conan package."
msgstr ""

#: ../../../reference/commands/remove.rst:16
msgid ""
"Use ``--dry-run`` to avoid performing actual deletions, and instead get a "
"list of the elements that would have been removed."
msgstr ""

#: ../../../reference/commands/remove.rst:18
msgid "It has 2 possible and mutually exclusive inputs:"
msgstr ""

#: ../../../reference/commands/remove.rst:20
msgid "The ``conan remove <pattern>`` pattern-based matching of recipes."
msgstr ""

#: ../../../reference/commands/remove.rst:21
msgid ""
"The ``conan remove --list=<pkglist>`` that will remove the artifacts "
"specified in the ``pkglist`` json file"
msgstr ""

#: ../../../reference/commands/remove.rst:24
msgid ""
"There are other commands like :command:`conan list` (see the patterns "
"documentation there :ref:`reference_commands_list`), :command:`conan upload` "
"and :command:`conan download`, that take the same patterns."
msgstr ""

#: ../../../reference/commands/remove.rst:26
msgid ""
"To remove recipes and their associated package binaries from the local cache:"
msgstr ""

#: ../../../reference/commands/remove.rst:29
msgid ""
"$ conan remove \"*\"\n"
"# Removes everything from the cache\n"
"\n"
"$ conan remove \"zlib/*\"\"\n"
"# Remove all possible versions of zlib, including all recipes, revisions and "
"packages\n"
"\n"
"$ conan remove zlib/1.2.11\n"
"# Remove zlib/1.2.11, all its revisions and package binaries. Leave other "
"zlib versions\n"
"\n"
"$ conan remove \"zlib/[<1.2.13]\"\n"
"# Remove zlib/1.2.11 and zlib/1.2.12, all its revisions and package "
"binaries.\n"
"\n"
"$ conan remove zlib/1.2.11#latest\n"
"# Remove zlib/1.2.11, only its latest recipe revision and binaries of that "
"revision\n"
"# Leave the other zlib/1.2.11 revisions intact\n"
"\n"
"$ conan remove zlib/1.2.11#!latest\n"
"# Remove all the recipe revisions from zlib/1.2.11 but the latest one\n"
"# Leave the latest zlib/1.2.11 revision intact\n"
"\n"
"$ conan remove zlib/1.2.11#<revision>\n"
"# Remove zlib/1.2.11, only its exact <revision> and binaries of that "
"revision\n"
"# Leave the other zlib/1.2.11 revisions intact"
msgstr ""

#: ../../../reference/commands/remove.rst:56
msgid ""
"To remove only package binaries, but leaving the recipes, it is necessary to "
"specify the pattern including the ``:`` separator of the ``package_id``:"
msgstr ""

#: ../../../reference/commands/remove.rst:59
msgid ""
"$ conan remove \"zlib/1.2.11:*\"\n"
"# Removes all the zlib/1.2.11 package binaries from all the recipe "
"revisions\n"
"\n"
"$ conan remove \"zlib/*:*\"\n"
"# Removes all the binaries from all the recipe revisions from all zlib "
"versions\n"
"\n"
"$ conan remove \"zlib/1.2.11#latest:*\"\n"
"# Removes all the zlib/1.2.11 package binaries only from the latest "
"zlib/1.2.11 recipe revision\n"
"\n"
"$ conan remove \"zlib/1.2.11#!latest:*\"\n"
"# Removes all the zlib/1.2.11 package binaries from all the recipe revisions "
"but the latest one\n"
"\n"
"$ conan remove zlib/1.2.11:<package_id>\n"
"# Removes the package binary <package_id> from all the zlib/1.2.11 recipe "
"revisions\n"
"\n"
"$ conan remove zlib/1.2.11:#latest<package_id>#latest\n"
"# Removes only the latest package revision of the binary identified with "
"<package_id>\n"
"# from the latest recipe revision of zlib/1.2.11\n"
"# WARNING: Recall that having more than 1 package revision is a smell and "
"shouldn't happen\n"
"# in normal situations"
msgstr ""

#: ../../../reference/commands/remove.rst:83
msgid ""
"Note that you can filter which packages will be removed using the ``--"
"package-query`` argument:"
msgstr ""

#: ../../../reference/commands/remove.rst:85
msgid ""
"$ conan remove zlib/1.2.11:* -p compiler=clang\n"
"# Removes all the zlib/1.2.11 packages built with Clang compiler"
msgstr ""

#: ../../../reference/commands/remove.rst:91
msgid ""
"You can query packages by both their settings and options, including custom "
"ones. To query for options you need to explicitly add the `options.` prefix, "
"so that `-p options.shared=False` will work but `-p shared=False` won't."
msgstr ""

#: ../../../reference/commands/remove.rst:97
msgid ""
"All the above commands, by default, operate in the Conan cache. To remove "
"artifacts from a server, use the ``-r=myremote`` argument:"
msgstr ""

#: ../../../reference/commands/remove.rst:100
msgid ""
"$ conan remove zlib/1.2.11:* -r=myremote\n"
"# Removes all the zlib/1.2.11 package binaries from all the recipe revisions "
"in\n"
"# the remote <myremote>"
msgstr ""
