# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 08:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/audit.rst:4
msgid "conan audit"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../reference/commands/audit.rst:8
msgid "*New feature in Conan 2.14.0*"
msgstr ""

#: ../../../reference/commands/audit.rst:10
msgid ""
"The ``conan audit`` command is used to check for known vulnerabilities in "
"your Conan packages."
msgstr ""

#: ../../../reference/commands/audit.rst:12
msgid ""
"See :ref:`the audit devops page<devops_audit>` to see examples on how to use "
"the ``conan audit`` command."
msgstr ""

#: ../../../reference/commands/audit.rst:16
msgid "conan audit scan"
msgstr ""

#: ../../../reference/commands/audit.rst:-1
msgid ""
"$ conan audit scan -h\n"
"usage: conan audit scan [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                        [-cc CORE_CONF] [--name NAME] [--version VERSION]\n"
"                        [--user USER] [--channel CHANNEL]\n"
"                        [--requires REQUIRES] [--tool-requires "
"TOOL_REQUIRES]\n"
"                        [-b BUILD] [-r REMOTE | -nr] [-u [UPDATE]]\n"
"                        [-pr PROFILE] [-pr:b PROFILE_BUILD]\n"
"                        [-pr:h PROFILE_HOST] [-pr:a PROFILE_ALL] [-o "
"OPTIONS]\n"
"                        [-o:b OPTIONS_BUILD] [-o:h OPTIONS_HOST]\n"
"                        [-o:a OPTIONS_ALL] [-s SETTINGS] [-s:b "
"SETTINGS_BUILD]\n"
"                        [-s:h SETTINGS_HOST] [-s:a SETTINGS_ALL] [-c CONF]\n"
"                        [-c:b CONF_BUILD] [-c:h CONF_HOST] [-c:a CONF_ALL]\n"
"                        [-l LOCKFILE] [--lockfile-partial]\n"
"                        [--lockfile-out LOCKFILE_OUT] [--lockfile-clean]\n"
"                        [--lockfile-overrides LOCKFILE_OVERRIDES]\n"
"                        [--build-require] [-sl SEVERITY_LEVEL] [-p "
"PROVIDER]\n"
"                        [path]\n"
"\n"
"Scan a given recipe for vulnerabilities in its dependencies.\n"
"\n"
"positional arguments:\n"
"  path                  Path to a folder containing a recipe (conanfile.py "
"or\n"
"                        conanfile.txt) or to a recipe file. e.g.,\n"
"                        ./my_project/conanfile.txt.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json, html\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --name NAME           Provide a package name if not specified in "
"conanfile\n"
"  --version VERSION     Provide a package version if not specified in\n"
"                        conanfile\n"
"  --user USER           Provide a user if not specified in conanfile\n"
"  --channel CHANNEL     Provide a channel if not specified in conanfile\n"
"  --requires REQUIRES   Directly provide requires instead of a conanfile\n"
"  --tool-requires TOOL_REQUIRES\n"
"                        Directly provide tool-requires instead of a "
"conanfile\n"
"  -b BUILD, --build BUILD\n"
"                        Optional, specify which packages to build from "
"source.\n"
"                        Combining multiple '--build' options on one command\n"
"                        line is allowed. Possible values: --build=never\n"
"                        Disallow build for all packages, use binary "
"packages\n"
"                        or fail if a binary package is not found, it cannot "
"be\n"
"                        combined with other '--build' options. --"
"build=missing\n"
"                        Build packages from source whose binary package is "
"not\n"
"                        found. --build=cascade Build packages from source "
"that\n"
"                        have at least one dependency being built from "
"source.\n"
"                        --build=[pattern] Build packages from source whose\n"
"                        package reference matches the pattern. The pattern\n"
"                        uses 'fnmatch' style wildcards, so '--build=\"*\"' "
"will\n"
"                        build everything from source. --build=~[pattern]\n"
"                        Excluded packages, which will not be built from the\n"
"                        source, whose package reference matches the "
"pattern.\n"
"                        The pattern uses 'fnmatch' style wildcards.\n"
"                        --build=missing:[pattern] Build from source if a\n"
"                        compatible binary does not exist, only for packages\n"
"                        matching pattern. --build=compatible:[pattern]\n"
"                        (Experimental) Build from source if a compatible\n"
"                        binary does not exist, and the requested package is\n"
"                        invalid, the closest package binary following the\n"
"                        defined compatibility policies (method and\n"
"                        compatibility.py)\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Look in the specified remote or remotes server\n"
"  -nr, --no-remote      Do not use remote, resolve exclusively in the cache\n"
"  -u [UPDATE], --update [UPDATE]\n"
"                        Will install newer versions and/or revisions in the\n"
"                        local cache for the given reference name, or all\n"
"                        references in the graph if no argument is supplied.\n"
"                        When using version ranges, it will install the "
"latest\n"
"                        version that satisfies the range. It will update to\n"
"                        the latest revision for the resolved version range.\n"
"  -pr PROFILE, --profile PROFILE\n"
"                        Apply the specified profile. By default, or if\n"
"                        specifying -pr:h (--profile:host), it applies to "
"the\n"
"                        host context. Use -pr:b (--profile:build) to "
"specify\n"
"                        the build context, or -pr:a (--profile:all) to "
"specify\n"
"                        both contexts at once\n"
"  -pr:b PROFILE_BUILD, --profile:build PROFILE_BUILD\n"
"  -pr:h PROFILE_HOST, --profile:host PROFILE_HOST\n"
"  -pr:a PROFILE_ALL, --profile:all PROFILE_ALL\n"
"  -o OPTIONS, --options OPTIONS\n"
"                        Apply the specified options. By default, or if\n"
"                        specifying -o:h (--options:host), it applies to the\n"
"                        host context. Use -o:b (--options:build) to specify\n"
"                        the build context, or -o:a (--options:all) to "
"specify\n"
"                        both contexts at once. Example:\n"
"                        -o=\"pkg/*:with_qt=True\"\n"
"  -o:b OPTIONS_BUILD, --options:build OPTIONS_BUILD\n"
"  -o:h OPTIONS_HOST, --options:host OPTIONS_HOST\n"
"  -o:a OPTIONS_ALL, --options:all OPTIONS_ALL\n"
"  -s SETTINGS, --settings SETTINGS\n"
"                        Apply the specified settings. By default, or if\n"
"                        specifying -s:h (--settings:host), it applies to "
"the\n"
"                        host context. Use -s:b (--settings:build) to "
"specify\n"
"                        the build context, or -s:a (--settings:all) to "
"specify\n"
"                        both contexts at once. Example: -s=\"compiler=gcc\"\n"
"  -s:b SETTINGS_BUILD, --settings:build SETTINGS_BUILD\n"
"  -s:h SETTINGS_HOST, --settings:host SETTINGS_HOST\n"
"  -s:a SETTINGS_ALL, --settings:all SETTINGS_ALL\n"
"  -c CONF, --conf CONF  Apply the specified conf. By default, or if "
"specifying\n"
"                        -c:h (--conf:host), it applies to the host context.\n"
"                        Use -c:b (--conf:build) to specify the build "
"context,\n"
"                        or -c:a (--conf:all) to specify both contexts at "
"once.\n"
"                        Example:\n"
"                        -c=\"tools.cmake.cmaketoolchain:generator=Xcode\"\n"
"  -c:b CONF_BUILD, --conf:build CONF_BUILD\n"
"  -c:h CONF_HOST, --conf:host CONF_HOST\n"
"  -c:a CONF_ALL, --conf:all CONF_ALL\n"
"  -l LOCKFILE, --lockfile LOCKFILE\n"
"                        Path to a lockfile. Use --lockfile=\"\" to avoid\n"
"                        automatic use of existing 'conan.lock' file\n"
"  --lockfile-partial    Do not raise an error if some dependency is not "
"found\n"
"                        in lockfile\n"
"  --lockfile-out LOCKFILE_OUT\n"
"                        Filename of the updated lockfile\n"
"  --lockfile-clean      Remove unused entries from the lockfile\n"
"  --lockfile-overrides LOCKFILE_OVERRIDES\n"
"                        Overwrite lockfile overrides\n"
"  --build-require       Whether the provided reference is a build-require\n"
"  -sl SEVERITY_LEVEL, --severity-level SEVERITY_LEVEL\n"
"                        Set threshold for severity level to raise an error. "
"By\n"
"                        default raises an error for any critical CVSS (9.0 "
"or\n"
"                        higher). Use 100.0 to disable it.\n"
"  -p PROVIDER, --provider PROVIDER\n"
"                        Provider to use for scanning\n"
"\n"
msgstr ""

#: ../../../reference/commands/audit.rst:21
msgid ""
"The ``conan audit scan`` command checks for vulnerabilities in the given "
"references and their transitive dependencies. This command receives "
"configuration arguments such as profiles and settings, to control the "
"expansion of the graph."
msgstr ""

#: ../../../reference/commands/audit.rst:25
msgid "conan audit list"
msgstr ""

#: ../../../reference/commands/audit.rst:-1
msgid ""
"$ conan audit list -h\n"
"usage: conan audit list [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                        [-cc CORE_CONF] [-l LIST] [-s SBOM] [-lock "
"LOCKFILE]\n"
"                        [-r REMOTE] [-p PROVIDER]\n"
"                        [reference]\n"
"\n"
"List the vulnerabilities of the given reference.\n"
"\n"
"positional arguments:\n"
"  reference             Reference to list vulnerabilities for\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json, html\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  -l LIST, --list LIST  pkglist file to list vulnerabilities for\n"
"  -s SBOM, --sbom SBOM  sbom file to list vulnerabilities for\n"
"  -lock LOCKFILE, --lockfile LOCKFILE\n"
"                        lockfile file to list vulnerabilities for\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Remote to use for listing\n"
"  -p PROVIDER, --provider PROVIDER\n"
"                        Provider to use for scanning\n"
"\n"
msgstr ""

#: ../../../reference/commands/audit.rst:30
msgid ""
"The ``conan audit list`` command lists vulnerabilities for the given "
"references, without checking their transitive dependencies. You can pass a "
"single reference, a pkglist file with multiple references, a cyclonedx SBOM "
"file generated with the :ref:`conan.tools.sbom <conan_tools_sbom>` module, "
"or a Conan lockfile."
msgstr ""

#: ../../../reference/commands/audit.rst:35
msgid "conan audit provider"
msgstr ""

#: ../../../reference/commands/audit.rst:-1
msgid ""
"$ conan audit provider -h\n"
"usage: conan audit provider [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                            [-cc CORE_CONF] [--url URL]\n"
"                            [--type {conan-center-proxy,private}]\n"
"                            [--token TOKEN]\n"
"                            {add,list,auth,remove} [name]\n"
"\n"
"Manage security providers for the 'conan audit' command.\n"
"\n"
"positional arguments:\n"
"  {add,list,auth,remove}\n"
"                        Action to perform from 'add', 'list' , 'remove' or\n"
"                        'auth'\n"
"  name                  Provider name\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --url URL             Provider URL\n"
"  --type {conan-center-proxy,private}\n"
"                        Provider type\n"
"  --token TOKEN         Provider token\n"
"\n"
msgstr ""

#: ../../../reference/commands/audit.rst:40
msgid ""
"The ``conan audit provider`` command manages the list of providers used to "
"check for vulnerabilities."
msgstr ""

#: ../../../reference/commands/audit.rst:42
msgid ""
"By default the ``conan audit`` subcommands use the ConanCenter provider, but "
"you can add your own providers to the list. For now, besides the default "
"ConanCenter provider, only private JFrog Security providers are supported, "
"see :ref:`the audit devops page<devops_audit_private_providers>` for more "
"information."
msgstr ""

#: ../../../reference/commands/audit.rst:45
msgid "There are 3 subcommands:"
msgstr ""

#: ../../../reference/commands/audit.rst:47
msgid "``conan audit provider auth``: Authenticates a provider with a token."
msgstr ""

#: ../../../reference/commands/audit.rst:48
msgid "``conan audit provider add``: Adds a provider to the list."
msgstr ""

#: ../../../reference/commands/audit.rst:49
msgid "``conan audit provider remove``: Removes a provider from the list."
msgstr ""

#: ../../../reference/commands/audit.rst:53
msgid ""
"Read more in the dedicated `blog post <https://blog.conan.io/introducing-"
"conan-audit-command/>`_."
msgstr ""
