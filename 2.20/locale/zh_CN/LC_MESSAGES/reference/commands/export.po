# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/export.rst:2
msgid "conan export"
msgstr ""

#: ../../../reference/commands/export.rst:-1
msgid ""
"$ conan export -h\n"
"usage: conan export [-h] [-v [V]] [-cc CORE_CONF] [-f FORMAT]\n"
"                    [--out-file OUT_FILE] [--name NAME] [--version VERSION]\n"
"                    [--user USER] [--channel CHANNEL] [-r REMOTE | -nr]\n"
"                    [-l LOCKFILE] [--lockfile-out LOCKFILE_OUT]\n"
"                    [--lockfile-partial] [--build-require]\n"
"                    path\n"
"\n"
"Export a recipe to the Conan package cache.\n"
"\n"
"positional arguments:\n"
"  path                  Path to a folder containing a recipe (conanfile.py)\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json, pkglist\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  --name NAME           Provide a package name if not specified in "
"conanfile\n"
"  --version VERSION     Provide a package version if not specified in\n"
"                        conanfile\n"
"  --user USER           Provide a user if not specified in conanfile\n"
"  --channel CHANNEL     Provide a channel if not specified in conanfile\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Look in the specified remote or remotes server\n"
"  -nr, --no-remote      Do not use remote, resolve exclusively in the cache\n"
"  -l LOCKFILE, --lockfile LOCKFILE\n"
"                        Path to a lockfile.\n"
"  --lockfile-out LOCKFILE_OUT\n"
"                        Filename of the updated lockfile\n"
"  --lockfile-partial    Do not raise an error if some dependency is not "
"found\n"
"                        in lockfile\n"
"  --build-require       Whether the provided reference is a build-require\n"
"\n"
msgstr ""

#: ../../../reference/commands/export.rst:8
msgid ""
"The ``conan export`` command exports the recipe specified in ``path`` to the "
"Conan package cache."
msgstr ""

#: ../../../reference/commands/export.rst:12
msgid "Output Formats"
msgstr ""

#: ../../../reference/commands/export.rst:14
msgid ""
"The :command:`conan export` command accepts two types of formats for the ``--"
"format`` argument:"
msgstr ""

#: ../../../reference/commands/export.rst:16
msgid ""
"``json``: Creates a JSON file containing the information of the exported "
"recipe reference."
msgstr ""

#: ../../../reference/commands/export.rst:17
msgid ""
"``pkglist``: Generates a JSON file in the :ref:"
"`pkglist<other_important_features_pkglist>` format, which can be utilized as "
"input for various commands such as :command:`upload`, :command:`download`, "
"and :command:`remove`."
msgstr ""
