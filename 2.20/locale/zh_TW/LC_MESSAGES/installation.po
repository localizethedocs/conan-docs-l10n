# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 08:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../installation.rst:4
msgid "Install"
msgstr ""

#: ../../../installation.rst:6
msgid ""
"Conan can be installed on many operating systems. It has been extensively "
"used and tested on Windows, Linux (different distros), macOS, and is also "
"actively used in FreeBSD and Solaris SunOS. There are also several "
"additional operating systems on which it has been reported to work."
msgstr ""

#: ../../../installation.rst:9
msgid "There are different ways to install Conan:"
msgstr ""

#: ../../../installation.rst:11
msgid ""
"The preferred and **strongly recommended way to install Conan** is from "
"PyPI, the Python Package Index, using the ``pip`` command."
msgstr ""

#: ../../../installation.rst:12
msgid ""
"Use a system installer, or create your own self-contained Conan executable, "
"to not require Python on your system."
msgstr ""

#: ../../../installation.rst:13
msgid "Running Conan from sources."
msgstr ""

#: ../../../installation.rst:16
msgid "Install with pip (recommended)"
msgstr ""

#: ../../../installation.rst:18
msgid ""
"To install latest Conan 2 version using ``pip``, you need a Python >= 3.7 "
"distribution installed on your machine. Modern Python distros come with pip "
"pre-installed. However, if necessary you can install pip by following the "
"instructions in `pip docs`_."
msgstr ""

#: ../../../installation.rst:23
msgid "Install Conan:"
msgstr "安裝 Conan："

#: ../../../installation.rst:25
msgid "$ pip install conan"
msgstr "$ pip install conan"

#: ../../../installation.rst:31
msgid "**Please READ carefully:**"
msgstr "**請仔細閱讀：**"

#: ../../../installation.rst:33
msgid ""
"Make sure that your **pip** installation matches your **Python (>= 3.7)** "
"version."
msgstr ""

#: ../../../installation.rst:34
msgid ""
"On **Linux**, you may need **sudo** permissions to install Conan globally."
msgstr ""

#: ../../../installation.rst:35
msgid ""
"We strongly recommend using **virtualenvs** (virtualenvwrapper works great) "
"for everything related to Python (check https://virtualenvwrapper."
"readthedocs.io/en/stable/, or https://pypi.org/project/virtualenvwrapper-"
"win/ on Windows). With Python 3, the built-in module ``venv`` can also be "
"used instead (check https://docs.python.org/3/library/venv.html). If not "
"using a **virtualenv** it is possible that conan dependencies will conflict "
"with previously existing dependencies, especially if you are using Python "
"for other purposes."
msgstr ""

#: ../../../installation.rst:40
msgid ""
"On **macOS**, especially the latest versions that may have **System "
"Integrity Protection**, pip may fail. Try using virtualenvs, or install it "
"to the Python user install directory with ``$ pip install --user conan``."
msgstr ""

#: ../../../installation.rst:42
msgid ""
"Some Linux distros, such as Linux Mint, require a restart (shell restart, or "
"logout/system if not enough) after installation, so Conan is found in the "
"path."
msgstr ""

#: ../../../installation.rst:47
msgid "Known installation issues with pip"
msgstr ""

#: ../../../installation.rst:49
msgid ""
"When Conan is installed with :command:`pip install --user conan`, a new "
"directory is usually created for it. However, the directory is not appended "
"automatically to the `PATH` and the :command:`conan` commands do not work. "
"This can usually be solved by restarting the session of the terminal or "
"running the following command:"
msgstr ""

#: ../../../installation.rst:51
msgid "$ source ~/.profile"
msgstr ""

#: ../../../installation.rst:59
msgid "Update"
msgstr "更新"

#: ../../../installation.rst:61
msgid "If installed via ``pip``, your Conan version can be updated with:"
msgstr ""

#: ../../../installation.rst:63
msgid "$ pip install conan --upgrade  # Might need sudo or --user"
msgstr ""

#: ../../../installation.rst:67
msgid ""
"The upgrade shouldn't affect the installed packages or cache information. If "
"the cache becomes inconsistent somehow, you may want to remove its content "
"by deleting it (``<userhome>/.conan2``)."
msgstr ""

#: ../../../installation.rst:71
msgid "Install with pipx"
msgstr ""

#: ../../../installation.rst:73
msgid ""
"In certain scenarios, attempting to install with ``pip`` may yield the "
"following error:"
msgstr ""

#: ../../../installation.rst:75
msgid ""
"error: externally-managed-environment\n"
"\n"
"x This environment is externally managed\n"
"    To install Python packages system-wide, try apt install\n"
"    python3-xyz, where xyz is the package you are trying to\n"
"    install.\n"
"..."
msgstr ""

#: ../../../installation.rst:85
msgid ""
"This is because some modern Linux distributions have started marking their "
"Python installations as \"externally managed\", which means that the "
"system's package manager is responsible for managing Python packages. "
"Installing packages globally or even in the user space can interfere with "
"system operations and potentially break system tools (check `PEP-668 "
"<https://peps.python.org/pep-0668/>`_ for more detailed information)."
msgstr ""

#: ../../../installation.rst:91
msgid ""
"For those cases, it's recommended to use ``pipx`` to install Conan. ``pipx`` "
"creates a virtual environment for each Python application, ensuring that "
"dependencies do not conflict. The advantage is that it isolates Conan and "
"its dependencies from the system Python and avoids potential conflicts with "
"system packages while providing a clean environment for Conan to run."
msgstr ""

#: ../../../installation.rst:97
msgid "To install Conan with ``pipx``:"
msgstr ""

#: ../../../installation.rst:99
msgid ""
"Ensure ``pipx`` is installed on your system. If it isn't, check the "
"installation guidelines `in the pipx documentation <https://pipx.pypa.io/"
"stable/installation/>`_. For Debian-based distributions, you can install "
"``pipx`` using the system package manager:"
msgstr ""

#: ../../../installation.rst:103
msgid ""
"$ apt-get install pipx\n"
"$ pipx ensurepath"
msgstr ""

#: ../../../installation.rst:108
msgid "(Note: The package name might vary depending on the distribution)"
msgstr ""

#: ../../../installation.rst:110
msgid "Restart your terminal and then install Conan using ``pipx``:"
msgstr ""

#: ../../../installation.rst:112
msgid "$ pipx install conan"
msgstr ""

#: ../../../installation.rst:116
msgid "Now you can use Conan as you typically would."
msgstr ""

#: ../../../installation.rst:120
msgid "Use a system installer or create a self-contained executable"
msgstr ""

#: ../../../installation.rst:122
msgid ""
"There are a number of existing installers in `Conan downloads`_ for macOS "
"Homebrew, Debian, Windows, Arch Linux, that will not require a Python "
"installation."
msgstr ""

#: ../../../installation.rst:124
msgid ""
"We also distribute `Conan binaries`_ for Windows, Linux, and macOS in a "
"compressed file that you can uncompress on your system and run directly."
msgstr ""

#: ../../../installation.rst:129
msgid ""
"If you are using **macOS**, please be aware of the Gatekeeper feature that "
"may quarantine the compressed binaries if downloaded directly using a web "
"browser. To avoid this issue, download them using a tool such as `curl`, "
"`wget`, or similar."
msgstr ""

#: ../../../installation.rst:134
msgid ""
"If there is no installer for your platform, you can create your own Conan "
"executable with the ``pyinstaller.py`` utility in the repo. This process is "
"able to create a self-contained Conan executable that contains all it needs, "
"including the Python interpreter, so it wouldn't be necessary to have Python "
"installed in the system."
msgstr ""

#: ../../../installation.rst:137
msgid "You can do it with:"
msgstr ""

#: ../../../installation.rst:139
msgid ""
"$ git clone https://github.com/conan-io/conan conan_src\n"
"$ cd conan_src\n"
"$ git checkout develop2 # or to the specific tag you want to\n"
"$ pip install -e .\n"
"$ python pyinstaller.py"
msgstr ""

#: ../../../installation.rst:148
msgid ""
"It is important to install the dependencies and the project first with ``pip "
"install -e .`` which configures the project as \"editable\", that is, to run "
"from the current source folder. After creating the executable, it can be "
"uninstalled with pip."
msgstr ""

#: ../../../installation.rst:150
msgid ""
"This has to run on the same platform that will be using the executable, "
"pyinstaller does not cross-build. The resulting executable can be just "
"copied and put in the system PATH of the running machine to be able to run "
"Conan."
msgstr ""

#: ../../../installation.rst:154
msgid "Install from source"
msgstr ""

#: ../../../installation.rst:156
msgid ""
"You can run Conan directly from source code. First, you need to install "
"Python and pip. Then, clone (or download and unzip) the Conan git repository "
"and install it."
msgstr ""

#: ../../../installation.rst:159
msgid ""
"For the latest development version, checkout the `develop2` branch of the "
"repository:"
msgstr ""

#: ../../../installation.rst:161
msgid ""
"# clone folder name matters, to avoid imports issues\n"
"$ git clone https://github.com/conan-io/conan.git conan_src\n"
"$ cd conan_src\n"
"$ git fetch --all\n"
"$ git checkout -b develop2 origin/develop2\n"
"$ python -m pip install -e ."
msgstr ""

#: ../../../installation.rst:170
msgid "Now test your ``conan`` installation by running:"
msgstr ""

#: ../../../installation.rst:172
msgid "$ conan"
msgstr ""

#: ../../../installation.rst:176
msgid "You should see the Conan commands help."
msgstr ""
