# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/extensions/python_api/RemotesAPI.rst:2
msgid "Remotes API"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI:1
msgid ""
"The ``RemotesAPI`` manages the definition of remotes, contained in the "
"\"remotes.json\" file in the Conan home, supporting addition, removal, "
"update, rename, enable, disable of remotes. These operations do not contact "
"the servers or check their existence at all. If they are not available, they "
"will fail later when used."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI:6
msgid ""
"The ``user_xxx`` methods perform authentication related tasks, and some of "
"them will contact the servers to perform such authentication"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.list:1
msgid ""
"Obtain a list of :ref:`Remote <conan.api.model.Remote>` objects matching the "
"pattern."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.add:0
#: conan.api.subapi.remotes.RemotesAPI.disable:0
#: conan.api.subapi.remotes.RemotesAPI.enable:0
#: conan.api.subapi.remotes.RemotesAPI.get:0
#: conan.api.subapi.remotes.RemotesAPI.list:0
#: conan.api.subapi.remotes.RemotesAPI.remove:0
#: conan.api.subapi.remotes.RemotesAPI.rename:0
#: conan.api.subapi.remotes.RemotesAPI.update:0
#: conan.api.subapi.remotes.RemotesAPI.user_login:0
#: conan.api.subapi.remotes.RemotesAPI.user_logout:0
msgid "Parameters"
msgstr "參數"

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.list:3
msgid ""
"``None``, single ``str`` or list of ``str``. If it is ``None``, all remotes "
"will be returned (equivalent to ``pattern=\"*\"``)."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.list:5
msgid "boolean, by default return only enabled remotes"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.disable:0
#: conan.api.subapi.remotes.RemotesAPI.enable:0
#: conan.api.subapi.remotes.RemotesAPI.get:0
#: conan.api.subapi.remotes.RemotesAPI.list:0
#: conan.api.subapi.remotes.RemotesAPI.remove:0
msgid "Returns"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.list:6
msgid "A list of :ref:`Remote <conan.api.model.Remote>` objects"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.disable:1
msgid "Disable all remotes matching ``pattern``"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.disable:3
#: conan.api.subapi.remotes.RemotesAPI.enable:3
#: conan.api.subapi.remotes.RemotesAPI.remove:3
msgid ""
"single ``str`` or list of ``str``. If the pattern is an exact name without "
"wildcards like \"*\" and no remote is found matching that exact name, it "
"will raise an error."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.disable:5
msgid ""
"the list of disabled :ref:`Remote <conan.api.model.Remote>` objects  (even "
"if they were already disabled)"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.enable:1
msgid "Enable all remotes matching ``pattern``."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.enable:5
msgid ""
"the list of enabled :ref:`Remote <conan.api.model.Remote>` objects (even if "
"they were already enabled)"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.get:1
msgid "Obtain a :ref:`Remote <conan.api.model.Remote>` object"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.get:3
msgid "the exact name of the remote to be returned"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.get:4
msgid ""
"the :ref:`Remote <conan.api.model.Remote>` object, or raise an Exception if "
"the remote does not exist."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.add:1
msgid ""
"Add a new :ref:`Remote <conan.api.model.Remote>` object to the existing ones"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.add:4
msgid "a :ref:`Remote <conan.api.model.Remote>` object to be added"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.add:5
msgid "do not fail if the remote already exist (but default it fails)"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.add:6
msgid ""
"if not defined, the new remote will be last one. Pass an integer to insert "
"the remote in that position instead of the last one"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.remove:1
msgid "Remove the remotes matching the ``pattern``"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.remove:5
msgid "The list of removed :ref:`Remote <conan.api.model.Remote>` objects"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:1
msgid "Update an existing remote"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:3
msgid "The name of the remote to update, must exist"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:4
msgid "optional url to update, if not defined it will not be updated"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:5
msgid "optional ssl secure connection to update"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:6
msgid "optional disabled state"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:7
msgid "optional integer to change the order of the remote"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.update:8
msgid "optional list of packages allowed from this remote"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.rename:1
msgid "Change the name of an existing remote"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.rename:3
msgid "The previous existing name"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.rename:4
msgid "The new name"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_login:1
msgid ""
"Perform user authentication against the given remote with the provided "
"username and password"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_login:3
msgid "a :ref:`Remote <conan.api.model.Remote>` object"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_login:4
msgid "the user login as ``str``"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_login:5
msgid "password ``str``"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_logout:1
msgid "Logout from the given :ref:`Remote <conan.api.model.Remote>`"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/remotes.py:docstring of
#: conan.api.subapi.remotes.RemotesAPI.user_logout:3
msgid "The :ref:`Remote <conan.api.model.Remote>` object to logout"
msgstr ""
