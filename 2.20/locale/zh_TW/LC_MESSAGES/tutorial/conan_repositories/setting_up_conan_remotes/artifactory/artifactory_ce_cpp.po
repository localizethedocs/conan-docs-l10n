# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:4
msgid "Artifactory Community Edition for C/C++"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:6
msgid ""
"Artifactory Community Edition (CE) for C/C++ is the recommended server for "
"development and hosting private packages for a team or company. It is "
"completely free, and features a WebUI, advanced authentication and "
"permissions, great performance and scalability, a REST API, a generic CLI "
"tool and generic repositories to host any kind of source or binary artifact."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:12
msgid ""
"This is a very brief introduction to Artifactory CE. For the complete "
"Artifactory CE documentation, visit `Artifactory docs <https://jfrog.com/"
"help/>`_."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:16
msgid "Running Artifactory CE"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:18
msgid ""
"The recommended way of running Artifactory CE is using Docker. The latest "
"image is ``releases-docker.jfrog.io/jfrog/artifactory-cpp-ce:latest``:"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:21
msgid ""
"$ docker run --name artifactory -d -e JF_SHARED_DATABASE_TYPE=derby -e "
"JF_SHARED_DATABASE_ALLOWNONPOSTGRESQL=true -p 8081:8081 -p 8082:8082 "
"releases-docker.jfrog.io/jfrog/artifactory-cpp-ce:latest"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:26
msgid ""
"This is running Artifactory CE with an embedded Derby database. For better "
"performance in production, you might want to check the `Single node "
"Artifactory installation <https://jfrog.com/help/r/jfrog-installation-setup-"
"documentation/install-artifactory-single-node-with-docker>`_ and the full "
"`Artifactory installation guide <https://jfrog.com/help/r/jfrog-installation-"
"setup-documentation>`_."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:30
msgid ""
"For versions older than Artifactory 7.77, alternative installation methods "
"like downloading installers from `Download Page <https://conan.io/downloads."
"html>`_ are available. After unzipping these installers, Artifactory can be "
"launched by double-clicking the ``artifactory.bat`` on Windows or "
"``artifactory.sh`` script in the *app/bin* subfolder, depending on the OS."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:35
msgid ""
"Once Artifactory has started, navigate to the default URL `http://"
"localhost:8081` where the Web UI should be running. The default user and "
"password are ``admin:password``."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:39
msgid "Creating and Using a Conan Repo"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:41
msgid ""
"Navigate to Administration -> Repositories -> Repositories, then click on "
"the \"Add Repositories\" button and select \"Local Repository\". A dialog "
"for selecting the package type will appear. Select **Conan**, then type a "
"\"Repository Key\" (the name of the repository you are about to create), for "
"example \"conan-local\", and click on \"Create Local Repository\". You can "
"create multiple repositories to serve different flows, teams, or projects."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:50
msgid ""
"Now, let's configure the Conan client to connect with the \"conan-local\" "
"repository. First, add the remote to the Conan remote registry:"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:53
msgid ""
"$ conan remote add artifactory http://localhost:8081/artifactory/api/conan/"
"conan-local"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:57
msgid "Then configure the credentials for the remote:"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:59
msgid "$ conan remote login artifactory <user> -p <password>"
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:63
msgid ""
"From now, you can upload, download, search, etc. the remote repos similarly "
"to the other repo types."
msgstr ""

#: ../../../tutorial/conan_repositories/setting_up_conan_remotes/artifactory/artifactory_ce_cpp.rst:66
msgid ""
"$ conan upload <package_name> -r=artifactory\n"
"$ conan search \"*\" -r=artifactory"
msgstr ""
