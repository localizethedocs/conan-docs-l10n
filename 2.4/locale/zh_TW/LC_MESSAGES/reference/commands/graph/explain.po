# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/graph/explain.rst:4
msgid "conan graph explain"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:-1
msgid ""
"$ conan graph explain -h\n"
"usage: conan graph explain [-h] [-f FORMAT] [-v [V]] [-cc CORE_CONF]\n"
"                           [--name NAME] [--version VERSION] [--user USER]\n"
"                           [--channel CHANNEL] [--requires REQUIRES]\n"
"                           [--tool-requires TOOL_REQUIRES] [-b BUILD]\n"
"                           [-r REMOTE | -nr] [-u [UPDATE]] [-pr PROFILE]\n"
"                           [-pr:b PROFILE_BUILD] [-pr:h PROFILE_HOST]\n"
"                           [-pr:a PROFILE_ALL] [-o OPTIONS]\n"
"                           [-o:b OPTIONS_BUILD] [-o:h OPTIONS_HOST]\n"
"                           [-o:a OPTIONS_ALL] [-s SETTINGS]\n"
"                           [-s:b SETTINGS_BUILD] [-s:h SETTINGS_HOST]\n"
"                           [-s:a SETTINGS_ALL] [-c CONF] [-c:b CONF_BUILD]\n"
"                           [-c:h CONF_HOST] [-c:a CONF_ALL] [-l LOCKFILE]\n"
"                           [--lockfile-partial] [--lockfile-out "
"LOCKFILE_OUT]\n"
"                           [--lockfile-clean]\n"
"                           [--lockfile-overrides LOCKFILE_OVERRIDES]\n"
"                           [--check-updates] [--build-require]\n"
"                           [--missing [MISSING]]\n"
"                           [path]\n"
"\n"
"Explain what is wrong with the dependency graph, like report missing "
"binaries\n"
"closest alternatives, trying to explain why the existing binaries do not "
"match\n"
"\n"
"positional arguments:\n"
"  path                  Path to a folder containing a recipe (conanfile.py "
"or\n"
"                        conanfile.txt) or to a recipe file. e.g.,\n"
"                        ./my_project/conanfile.txt.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --name NAME           Provide a package name if not specified in "
"conanfile\n"
"  --version VERSION     Provide a package version if not specified in\n"
"                        conanfile\n"
"  --user USER           Provide a user if not specified in conanfile\n"
"  --channel CHANNEL     Provide a channel if not specified in conanfile\n"
"  --requires REQUIRES   Directly provide requires instead of a conanfile\n"
"  --tool-requires TOOL_REQUIRES\n"
"                        Directly provide tool-requires instead of a "
"conanfile\n"
"  -b BUILD, --build BUILD\n"
"                        Optional, specify which packages to build from "
"source.\n"
"                        Combining multiple '--build' options on one command\n"
"                        line is allowed. Possible values: --build=\"*\" "
"Force\n"
"                        build from source for all packages. --build=never\n"
"                        Disallow build for all packages, use binary "
"packages\n"
"                        or fail if a binary package is not found, it cannot "
"be\n"
"                        combined with other '--build' options. --"
"build=missing\n"
"                        Build packages from source whose binary package is "
"not\n"
"                        found. --build=cascade Build packages from source "
"that\n"
"                        have at least one dependency being built from "
"source.\n"
"                        --build=[pattern] Build packages from source whose\n"
"                        package reference matches the pattern. The pattern\n"
"                        uses 'fnmatch' style wildcards. --build=~[pattern]\n"
"                        Excluded packages, which will not be built from the\n"
"                        source, whose package reference matches the "
"pattern.\n"
"                        The pattern uses 'fnmatch' style wildcards.\n"
"                        --build=missing:[pattern] Build from source if a\n"
"                        compatible binary does not exist, only for packages\n"
"                        matching pattern.\n"
"  -r REMOTE, --remote REMOTE\n"
"                        Look in the specified remote or remotes server\n"
"  -nr, --no-remote      Do not use remote, resolve exclusively in the cache\n"
"  -u [UPDATE], --update [UPDATE]\n"
"                        Will install newer versions and/or revisions in the\n"
"                        local cache for the given reference, or all in case "
"no\n"
"                        argument is supplied. When using version ranges, it\n"
"                        will install the latest version that satisfies the\n"
"                        range. Also, if using revisions, it will update to "
"the\n"
"                        latest revision for the resolved version range.\n"
"  -pr PROFILE, --profile PROFILE\n"
"                        Apply the specified profile. By default, or if\n"
"                        specifying -pr:h (--profile:host), it applies to "
"the\n"
"                        host context. Use -pr:b (--profile:build) to "
"specify\n"
"                        the build context, or -pr:a (--profile:all) to "
"specify\n"
"                        both contexts at once\n"
"  -pr:b PROFILE_BUILD, --profile:build PROFILE_BUILD\n"
"  -pr:h PROFILE_HOST, --profile:host PROFILE_HOST\n"
"  -pr:a PROFILE_ALL, --profile:all PROFILE_ALL\n"
"  -o OPTIONS, --options OPTIONS\n"
"                        Apply the specified options. By default, or if\n"
"                        specifying -o:h (--options:host), it applies to the\n"
"                        host context. Use -o:b (--options:build) to specify\n"
"                        the build context, or -o:a (--options:all) to "
"specify\n"
"                        both contexts at once. Example: -o pkg:with_qt=true\n"
"  -o:b OPTIONS_BUILD, --options:build OPTIONS_BUILD\n"
"  -o:h OPTIONS_HOST, --options:host OPTIONS_HOST\n"
"  -o:a OPTIONS_ALL, --options:all OPTIONS_ALL\n"
"  -s SETTINGS, --settings SETTINGS\n"
"                        Apply the specified settings. By default, or if\n"
"                        specifying -s:h (--settings:host), it applies to "
"the\n"
"                        host context. Use -s:b (--settings:build) to "
"specify\n"
"                        the build context, or -s:a (--settings:all) to "
"specify\n"
"                        both contexts at once. Example: -s compiler=gcc\n"
"  -s:b SETTINGS_BUILD, --settings:build SETTINGS_BUILD\n"
"  -s:h SETTINGS_HOST, --settings:host SETTINGS_HOST\n"
"  -s:a SETTINGS_ALL, --settings:all SETTINGS_ALL\n"
"  -c CONF, --conf CONF  Apply the specified conf. By default, or if "
"specifying\n"
"                        -c:h (--conf:host), it applies to the host context.\n"
"                        Use -c:b (--conf:build) to specify the build "
"context,\n"
"                        or -c:a (--conf:all) to specify both contexts at "
"once.\n"
"                        Example: -c tools.cmake.cmaketoolchain:"
"generator=Xcode\n"
"  -c:b CONF_BUILD, --conf:build CONF_BUILD\n"
"  -c:h CONF_HOST, --conf:host CONF_HOST\n"
"  -c:a CONF_ALL, --conf:all CONF_ALL\n"
"  -l LOCKFILE, --lockfile LOCKFILE\n"
"                        Path to a lockfile. Use --lockfile=\"\" to avoid\n"
"                        automatic use of existing 'conan.lock' file\n"
"  --lockfile-partial    Do not raise an error if some dependency is not "
"found\n"
"                        in lockfile\n"
"  --lockfile-out LOCKFILE_OUT\n"
"                        Filename of the updated lockfile\n"
"  --lockfile-clean      Remove unused entries from the lockfile\n"
"  --lockfile-overrides LOCKFILE_OVERRIDES\n"
"                        Overwrite lockfile overrides\n"
"  --check-updates       Check if there are recipe updates\n"
"  --build-require       Whether the provided reference is a build-require\n"
"  --missing [MISSING]   A pattern in the form\n"
"                        'pkg/version#revision:package_id#revision', e.g:\n"
"                        \"zlib/1.2.13:*\" means all binaries for "
"zlib/1.2.13. If\n"
"                        revision is not specified, it is assumed latest "
"one.\n"
"\n"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:9
msgid ""
"The ``conan graph explain`` tries to give a more detailed explanation for a "
"package that might be missing with the configuration provided and show the "
"differences between the expected binary package and the available ones. It "
"helps to understand what is missing from the package requested, whether it "
"is different options, different settings or different dependencies."
msgstr ""

#: ../../../reference/commands/graph/explain.rst:12
msgid "**Example**:"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:14
msgid ""
"Imagine that we want to install the `lib/1.0.0` that depends on `dep/2.0.0` "
"but we don't have a binary yet, as the latest CI run only generated a binary "
"for lib/1.0.0 using the previous version of `dep`. When we try to install "
"the refere `lib/1.0.0` it says:"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:17
msgid ""
"$ conan install --requires=lib/1.0.0\n"
"...\n"
"ERROR: Missing prebuilt package for 'lib/1.0.0'"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:23
msgid "Now we can try to find a explanation for this:"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:25
msgid ""
"$ conan graph explain --requires=lib/1.0.0\n"
"requires: dep/1.Y.Z\n"
"diff\n"
"  dependencies\n"
"    expected: dep/2.Y.Z\n"
"    existing: dep/1.Y.Z\n"
"    explanation: This binary has same settings and options, but different "
"dependencies"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:35
msgid ""
"In the same way, it can report when a package has a different option value "
"and the output is also available in JSON format:"
msgstr ""

#: ../../../reference/commands/graph/explain.rst:37
msgid ""
"$conan graph explain --requires=lib/1.0.0 -o lib/*:shared=True --"
"format=json\n"
"...\n"
"{\n"
"    \"closest_binaries\": {\n"
"        \"lib/1.0.0\": {\n"
"            \"revisions\": {\n"
"                \"dc0e384f0551386cd76dc29cc964c95e\": {\n"
"                    \"timestamp\": 1692672717.68,\n"
"                    \"packages\": {\n"
"                        \"b647c43bfefae3f830561ca202b6cfd935b56205\": {\n"
"                            \"info\": {\n"
"                                \"settings\": {\n"
"                                    \"arch\": \"x86_64\",\n"
"                                    \"build_type\": \"Release\",\n"
"                                    \"compiler\": \"gcc\",\n"
"                                    \"compiler.version\": \"11\",\n"
"                                    \"os\": \"Linux\"\n"
"                                },\n"
"                                \"options\": {\n"
"                                    \"shared\": \"False\"\n"
"                                }\n"
"                            },\n"
"                            \"diff\": {\n"
"                                \"platform\": {},\n"
"                                \"options\": {\n"
"                                    \"expected\": [\n"
"                                        \"shared=True\"\n"
"                                    ],\n"
"                                    \"existing\": [\n"
"                                        \"shared=False\"\n"
"                                    ]\n"
"                                },\n"
"                                \"settings\": {},\n"
"                                \"dependencies\": {},\n"
"                                \"explanation\": \"This binary was built "
"with same settings but different options.\"\n"
"                            },\n"
"                            \"remote\": \"conancenter\"\n"
"                        }\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"    }\n"
"}"
msgstr ""
