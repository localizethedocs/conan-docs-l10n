# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/google/bazeltoolchain.rst:4
msgid "BazelToolchain"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:8
msgid ""
"The ``BazelToolchain`` is the toolchain generator for Bazel. It will "
"generate a ``conan_bzl.rc`` file that contains a build configuration ``conan-"
"config`` to inject all the parameters into the :command:`bazel build` "
"command."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:11
msgid "The ``BazelToolchain`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:13
#: ../../../reference/tools/google/bazeltoolchain.rst:27
msgid "conanfile.py"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:13
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"BazelToolchain\""
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:19
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:19
msgid ""
"[generators]\n"
"BazelToolchain"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:25
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:27
msgid ""
"from conan import ConanFile\n"
"from conan.tools.google import BazelToolchain\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def generate(self):\n"
"        tc = BazelToolchain(self)\n"
"        tc.generate()"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:41
msgid "Generated files"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:43
msgid ""
"After running :command:`conan install` command, the ``BazelToolchain`` "
"generates the *conan_bzl.rc* file that contains Bazel build parameters (it "
"will depend on your current Conan settings and options from your *default* "
"profile):"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:46
msgid "conan_bzl.rc"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:46
msgid ""
"# Automatic bazelrc file created by Conan\n"
"\n"
"build:conan-config --cxxopt=-std=gnu++17\n"
"\n"
"build:conan-config --dynamic_mode=off\n"
"build:conan-config --compilation_mode=opt"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:56
msgid ""
"The :ref:`Bazel build helper<conan_tools_google_bazel>` will use that "
"``conan_bzl.rc`` file to perform a call using this configuration. The "
"outcoming command will look like this :command:`bazel --bazelrc=/path/to/"
"conan_bzl.rc build --config=conan-config <target>`."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:61
msgid "Reference"
msgstr ""

#: ../../../conan_sources/conan/tools/google/toolchain.py:docstring of
#: conan.tools.google.toolchain.BazelToolchain:0
msgid "Parameters"
msgstr ""

#: ../../../conan_sources/conan/tools/google/toolchain.py:docstring of
#: conan.tools.google.toolchain.BazelToolchain:1
msgid ""
"``< ConanFile object >`` The current recipe object. Always use ``self``."
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.force_pic:1
msgid ""
"Boolean used to add --force_pic=True. Depends on self.options.shared and "
"self.options.fPIC values"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.dynamic_mode:1
msgid ""
"String used to add --dynamic_mode=[\"fully\"|\"off\"]. Depends on self."
"options.shared value."
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.cppstd:1
msgid "String used to add --cppstd=[FLAG]. Depends on your settings."
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.copt:1
msgid "List of flags used to add --copt=flag1 ... --copt=flagN"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.conlyopt:1
msgid "List of flags used to add --conlyopt=flag1 ... --conlyopt=flagN"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.cxxopt:1
msgid "List of flags used to add --cxxopt=flag1 ... --cxxopt=flagN"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.linkopt:1
msgid "List of flags used to add --linkopt=flag1 ... --linkopt=flagN"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.compilation_mode:1
msgid ""
"String used to add --compilation_mode=[\"opt\"|\"dbg\"]. Depends on self."
"settings.build_type"
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.compiler:1
msgid "String used to add --compiler=xxxx."
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.cpu:1
msgid ""
"String used to add --cpu=xxxxx. At the moment, it's only added if cross-"
"building."
msgstr ""

#: ../../../docstring of conan.tools.google.BazelToolchain.crosstool_top:1
msgid "String used to add --crosstool_top."
msgstr ""

#: ../../../conan_sources/conan/tools/google/toolchain.py:docstring of
#: conan.tools.google.toolchain.BazelToolchain.generate:1
msgid ""
"Creates a ``conan_bzl.rc`` file with some bazel-build configuration. This "
"last mentioned is put as ``conan-config``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:70
msgid "conf"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:72
msgid ""
"``BazelToolchain`` is affected by these :ref:"
"`[conf]<reference_config_files_global_conf>` variables:"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:74
msgid ""
"``tools.build:cxxflags`` list of extra C++ flags that will be used by "
"``cxxopt``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:75
msgid ""
"``tools.build:cflags`` list of extra of pure C flags that will be used by "
"``conlyopt``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:76
msgid ""
"``tools.build:sharedlinkflags`` list of extra linker flags that will be used "
"by ``linkopt``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:77
msgid ""
"``tools.build:exelinkflags`` list of extra linker flags that will be used by "
"``linkopt``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:78
msgid ""
"``tools.build:linker_scripts`` list of linker scripts, each of which will be "
"prefixed with ``-T`` and added to ``linkopt``."
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:83
msgid ":ref:`examples_tools_bazel_toolchain_build_simple_bazel_project`"
msgstr ""

#: ../../../reference/tools/google/bazeltoolchain.rst:84
msgid ":ref:`examples_tools_bazel_7x_toolchain_build_simple_bazel_project`"
msgstr ""
