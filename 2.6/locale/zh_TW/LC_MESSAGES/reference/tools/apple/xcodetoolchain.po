# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/apple/xcodetoolchain.rst:4
msgid "XcodeToolchain"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:6
msgid ""
"The ``XcodeToolchain`` is the toolchain generator for Xcode. It will "
"generate *.xcconfig* configuration files that can be added to Xcode "
"projects. This generator translates the current package configuration, "
"settings, and options, into Xcode *.xcconfig* files syntax."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:10
msgid "The ``XcodeToolchain`` generator can be used by name in conanfiles:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:12
msgid "conanfile.py"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:12
msgid ""
"class Pkg(ConanFile):\n"
"    generators = \"XcodeToolchain\""
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:18
msgid "conanfile.txt"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:18
msgid ""
"[generators]\n"
"XcodeToolchain"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:24
msgid ""
"And it can also be fully instantiated in the conanfile ``generate()`` method:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:26
msgid ""
"from conan import ConanFile\n"
"from conan.tools.apple import XcodeToolchain\n"
"\n"
"class App(ConanFile):\n"
"    settings = \"os\", \"arch\", \"compiler\", \"build_type\"\n"
"\n"
"    def generate(self):\n"
"        tc = XcodeToolchain(self)\n"
"        tc.generate()"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:39
msgid ""
"The ``XcodeToolchain`` will generate three files after a ``conan install`` "
"command. As explained above for the XcodeDeps generator, each different "
"configuration will create a set of files with different names. For example, "
"running ``conan install`` for *Release* first and then *Debug* configuration:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:44
msgid ""
"$ conan install conanfile.py # default is Release\n"
"$ conan install conanfile.py -s build_type=Debug"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:49
msgid "Will create these files:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:51
msgid ""
".\n"
"├── conan_config.xcconfig\n"
"├── conantoolchain_release_x86_64.xcconfig\n"
"├── conantoolchain_debug_x86_64.xcconfig\n"
"├── conantoolchain.xcconfig\n"
"└── conan_global_flags.xcconfig"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:60
msgid "Those files are:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:62
msgid ""
"The main *conan_config.xcconfig* file, to be added to the project. Includes "
"both the files from this generator and the generated by the :ref:"
"`XcodeDeps<conan_tools_apple_xcodedeps>` in case it was also set."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:65
msgid ""
"*conantoolchain_<debug/release>_x86_64.xcconfig*: declares "
"``CLANG_CXX_LIBRARY``, ``CLANG_CXX_LANGUAGE_STANDARD`` and "
"``MACOSX_DEPLOYMENT_TARGET`` variables with conditional logic depending on "
"the build configuration, architecture and sdk set."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:68
msgid ""
"*conantoolchain.xcconfig*: aggregates all the "
"*conantoolchain_<config>_<arch>.xcconfig* files for the different installed "
"configurations."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:70
msgid ""
"*conan_global_flags.xcconfig*: this file will only be generated in case of "
"any configuration variables related to compiler or linker flags are set. "
"Check :ref:`the configuration section<xcodetoolchain_conf>` below for more "
"details."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:75
msgid ""
"Every invocation to ``conan install`` with different configuration will "
"create a new *conantoolchain_<config>_<arch>.xcconfig* file that is "
"aggregated in the *conantoolchain.xcconfig*, so you can have different "
"configurations included in your Xcode project."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:80
msgid ""
"The XcodeToolchain files can declare the following Xcode build settings "
"based on Conan settings values:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:82
msgid ""
"``MACOSX_DEPLOYMENT_TARGET`` is based on the value of the ``os.version`` "
"setting and will make the build system to pass the flag ``-mmacosx-version-"
"min`` with that value (if set). It defines the operating system version the "
"binary should run into."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:85
msgid ""
"``CLANG_CXX_LANGUAGE_STANDARD`` is based on the value of the ``compiler."
"cppstd`` setting that sets the C++ language standard."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:87
msgid ""
"``CLANG_CXX_LIBRARY`` is based on the value of the compiler.libcxx setting "
"and sets the version of the C++ standard library to use."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:90
msgid ""
"One of the advantages of using toolchains is that they can help to achieve "
"the exact same build with local development flows, than when the package is "
"created in the cache."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:96
msgid "conf"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:98
msgid "This toolchain is also affected by these **[conf]** variables:"
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:100
msgid "``tools.build:cxxflags`` list of C++ flags."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:101
msgid "``tools.build:cflags`` list of pure C flags."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:102
msgid ""
"``tools.build:sharedlinkflags`` list of flags that will be used by the "
"linker when creating a shared library."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:103
msgid ""
"``tools.build:exelinkflags`` list of flags that will be used by the linker "
"when creating an executable."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:104
msgid "``tools.build:defines`` list of preprocessor definitions."
msgstr ""

#: ../../../reference/tools/apple/xcodetoolchain.rst:106
msgid ""
"If you set any of these variables, the toolchain will use them to generate "
"the ``conan_global_flags.xcconfig`` file that will be included from the "
"``conan_config.xcconfig`` file."
msgstr ""
