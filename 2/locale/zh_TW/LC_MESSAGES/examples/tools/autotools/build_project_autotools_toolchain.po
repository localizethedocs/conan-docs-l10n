# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:4
msgid "Build a simple Autotools project with Conan dependencies"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:8
msgid ""
"This example will only work for Linux and OSX environments and does not "
"support Windows directly, including msys2/cygwin subsystems. However, "
"Windows Subsystem for Linux (WSL) should work since it provides a Linux "
"environment. While Conan offers `win_bash = True` for some level of support "
"in Windows environments with Autotools, it's not applicable in this tutorial."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:13
msgid ""
"In this example, we are going to create a string formatter application that "
"uses one of the most popular C++ libraries: `fmt <https://fmt.dev/latest/"
"index.html/>`_."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:16
msgid ""
"We'll use `Autotools <https://www.gnu.org/software/automake/manual/html_node/"
"Autotools-Introduction.html>`_ as build system and `pkg-config <https://www."
"freedesktop.org/wiki/Software/pkg-config/>`_ as a helper tool in this case, "
"so you should get them installed on Linux and Mac before going forward with "
"this example."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:19
msgid ""
"Please, first clone the sources to recreate this project. You can find them "
"in the `examples2 repository <https://github.com/conan-io/examples2>`_ on "
"GitHub:"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:22
msgid ""
"git clone https://github.com/conan-io/examples2.git\n"
"cd examples2/examples/tools/autotools/autotoolstoolchain/string_formatter"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:27
msgid ""
"We start with a very simple C++ language project with the following "
"structure:"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:29
msgid ""
".\n"
"├── configure.ac\n"
"├── Makefile.am\n"
"├── conanfile.txt\n"
"└── src\n"
"    └── main.cpp"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:38
msgid ""
"This project contains a basic `configure.ac <https://www.gnu.org/software/"
"autoconf/manual/autoconf-2.60/html_node/Writing-configure_002eac.html>_` "
"including the **fmt** pkg-config dependency and the source code for the "
"string formatter program in *main.cpp*."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:41
msgid ""
"Let's have a look at the *main.cpp* file, it only prints a simple message "
"but uses ``fmt::print`` method for it."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:43
msgid "**main.cpp**"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:43
msgid ""
"#include <cstdlib>\n"
"#include <fmt/core.h>\n"
"\n"
"int main() {\n"
"    fmt::print(\"{} - The C++ Package Manager!\\n\", \"Conan\");\n"
"    return EXIT_SUCCESS;\n"
"}"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:54
msgid ""
"The ``configure.ac`` file checks for a C++ compiler using the "
"``AC_PROG_CXX`` macro and also checks for the ``fmt.pc`` pkg-config module "
"using the ``PKG_CHECK_MODULES`` macro."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:56
msgid "**configure.ac**"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:56
msgid ""
"AC_INIT([stringformatter], [0.1.0])\n"
"AM_INIT_AUTOMAKE([1.10 -Wall no-define foreign])\n"
"AC_CONFIG_SRCDIR([src/main.cpp])\n"
"AC_CONFIG_FILES([Makefile])\n"
"PKG_CHECK_MODULES([fmt], [fmt])\n"
"AC_PROG_CXX\n"
"AC_OUTPUT"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:67
msgid ""
"The *Makefile.am* specifies that ``string_formatter`` is the expected "
"executable and that it should be linked to the ``fmt`` library."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:69
msgid "**Makefile.am**"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:69
msgid ""
"AUTOMAKE_OPTIONS = subdir-objects\n"
"ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS}\n"
"\n"
"bin_PROGRAMS = string_formatter\n"
"string_formatter_SOURCES = src/main.cpp\n"
"string_formatter_CPPFLAGS = $(fmt_CFLAGS)\n"
"string_formatter_LDADD = $(fmt_LIBS)"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:80
msgid ""
"The *conanfile.txt* looks simple as it just installs the **fmt** package and "
"uses two generators to build our project."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:82
msgid "**conanfile.txt**"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:82
msgid ""
"[requires]\n"
"fmt/9.1.0\n"
"\n"
"[generators]\n"
"AutotoolsToolchain\n"
"PkgConfigDeps"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:92
msgid ""
"In this case, we will use :ref:"
"`PkgConfigDeps<conan_tools_gnu_pkgconfigdeps>` to generate information about "
"where the **fmt** library files are installed thanks to the `*.pc` files "
"and :ref:`AutotoolsToolchain<conan_tools_gnu_autotoolstoolchain>` to pass "
"build information to *autotools* using a `conanbuild[.sh|.bat]` file that "
"describes the compilation environment."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:96
msgid ""
"We will use Conan to install **fmt** library, generate a toolchain for "
"Autotools, and, .pc files for find **fmt** by pkg-config."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:100
msgid "Building on Linux and macOS"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:102
msgid ""
"First, we should install some requirements. On Linux you need to have "
"``automake`` , ``pkgconf`` and ``make`` packages installed, their packages "
"names should vary according to the Linux distribution, but essentially, it "
"should include all tools (aclocal, automake, autoconf and make) that you "
"will need to build the following example."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:106
msgid ""
"For this example, we will not consider a specific Conan profile, but ``fmt`` "
"is highly compatible with many different configurations. So it should work "
"mostly with versions of GCC and Clang compiler."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:109
msgid ""
"As the first step, we should install all dependencies listed in the "
"``conanfile.txt``. The command :ref: `conan "
"install<reference_commands_install>` will not only install the ``fmt`` "
"package, but also build it from sources in case your profile does not match "
"with a pre-built binary in your remotes. Plus, it will provide these "
"generators listed in the ``conanfile.txt``"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:114
msgid "conan install . --build=missing"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:118
msgid ""
"After running ``conan install`` command, we should have new files present in "
"the *string_formatter* folder:"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:120
msgid ""
"└── string_formatter\n"
"    ├── Makefile.am\n"
"    ├── conanautotoolstoolchain.sh\n"
"    ├── conanbuild.conf\n"
"    ├── conanbuild.sh\n"
"    ├── conanbuildenv-release-armv8.sh\n"
"    ├── conanfile.txt\n"
"    ├── conanrun.sh\n"
"    ├── conanrunenv-release-armv8.sh\n"
"    ├── configure.ac\n"
"    ├── deactivate_conanbuild.sh\n"
"    ├── deactivate_conanrun.sh\n"
"    ├── fmt-_fmt.pc\n"
"    ├── fmt.pc\n"
"    ├── run_example.sh\n"
"    └── src\n"
"        └── main.cpp"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:142
msgid ""
"These files are the result of those generators listed in the ``conanfile."
"txt``. Once all files needed to build the example are generated and ``fmt`` "
"is installed, now we can load the script ``conanbuild.sh``."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:145
msgid "source conanbuild.sh"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:149
msgid ""
"The ``conanbuild.sh`` is a default file generated by the :ref:"
"`VirtualBuildEnv<conan_tools_env_virtualbuildenv>` and helps us to load "
"other script files, so we don't need to execute more manual steps to load "
"each generator file. It will load ``conanautotoolstoolchain.sh``, generated "
"by `AutotoolsToolchain`, which defines environment variables according to "
"our Conan profile, used when running ``conan install`` command. Those "
"environment variables configured are related to the compiler and "
"``autotools``, like ``CFLAGS``, ``CPPFLAGS``, ``LDFLAGS``, and "
"``PKG_CONFIG_PATH``."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:155
msgid ""
"As the next step, we can configure the project by running the following "
"commands in sequence:"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:157
msgid ""
"aclocal\n"
"automake --add-missing\n"
"autoconf\n"
"./configure"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:164
msgid ""
"The `aclocal <https://www.gnu.org/software/automake/manual/html_node/aclocal-"
"Invocation.html>`_ command will read the file ``configure.ac`` and generate "
"a new file named ``aclocal.m4``, which contains macros needed by the "
"``automake``. As the second step, the `automake <https://www.gnu.org/"
"software/automake/manual/automake.html>`_ command will read the ``Makefile."
"am``, and will generate the file ``Makefile.in``. So the command `autoconf "
"<https://www.gnu.org/software/autoconf/>`_ will use those files and generate "
"the ``configure`` file. Once we run ``configure``, all environment variables "
"will be consumed. The ``fmt.pc`` will be loaded at this step too, as "
"``autotools`` uses the custom ``PKG_CONFIG_PATH`` to find it."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:171
msgid ""
"Then, finally, we can build the project to generate the string formatter "
"application. Now we run the ``make`` command, which will consume the "
"``Makefile`` generated by ``autotools``."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:174
msgid "make"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:178
msgid ""
"The ``make`` command will read the ``Makefile`` and invoke the compiler, "
"then, build the ``main.cpp``, generating the executable ``string_formatter`` "
"in the same folder."
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:180
msgid ""
"./string_formatter\n"
"Conan - The C++ Package Manager!"
msgstr ""

#: ../../../examples/tools/autotools/build_project_autotools_toolchain.rst:185
msgid ""
"The final output is the result of a new application, printing a message with "
"the help of ``fmt`` library, and built by ``Autotools``."
msgstr ""
