# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-30 08:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../knowledge/videos.rst:4
msgid "Videos"
msgstr "影片"

#: ../../../knowledge/videos.rst:8
msgid ""
"This section presents some conference talks and presentations regarding "
"Conan. While they can be very informative and educational, please note that "
"some of them might be outdated. Always use the documentation and reference "
"as the source of truth, not the videos."
msgstr ""

#: ../../../knowledge/videos.rst:16
msgid "Using std::cpp 2024"
msgstr ""

#: ../../../knowledge/videos.rst:17
msgid ""
"`Unlock the power of Conan 2 - 15 new features you didn’t know about! Luis "
"Caro / Diego Rodriguez`"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"Conan 2.0 was released over a year ago with a large number of new features "
"and improvements. Since its release, the team has continued to add "
"improvements based on user feedback, releasing many more new features than "
"in the previous years combined."
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"Join Diego and Luis from the Conan team for an overview of practical "
"examples of what Conan 2 can do for your C and C++ package management "
"development workflows. Some highlights include: transparent fall back to "
"system-provided dependencies, managing metadata files, and the flexible and "
"fully transparent CMake integrations, and more!"
msgstr ""

#: ../../../knowledge/videos.rst:27
msgid "ACCU 2022"
msgstr ""

#: ../../../knowledge/videos.rst:28
msgid ""
"`Advanced Dependencies Model in Conan 2.0 C, C++ Package Manager by Diego "
"Rodriguez-Losada`"
msgstr ""

#: ../../../knowledge/videos.rst:30
msgid ""
"Conan 2.0 introduces a new dependencies model with requirements \"traits\" "
"like visibility, definition and propagation of headers and libraries "
"independently, and more that allow modeling all these advanced use cases. "
"This talk will present this new model, and apply it to solve different "
"advanced use cases, with real life examples"
msgstr ""

#: ../../../knowledge/videos.rst:39
msgid "CppCon 2022"
msgstr ""

#: ../../../knowledge/videos.rst:40
msgid ""
"`What's New in Conan 2.0 C/C++ Package Manager - Diego Rodriguez-Losada`"
msgstr ""

#: ../../../knowledge/videos.rst:42
msgid ""
"During the years since Conan 1.0 was released, we have continued to learn "
"from the C++ ecosystem as we watched it grow; learning many lessons, "
"challenges and trends in the industry from the feedback from tens of "
"thousands of conversations with users and customers, including many of the "
"largest C++ related companies in the world. This talk summarizes some of "
"these lessons and how they have been used to create the new major version of "
"Conan."
msgstr ""

#: ../../../knowledge/videos.rst:52
msgid "Meeting C++ 2023"
msgstr ""

#: ../../../knowledge/videos.rst:53
msgid "`CMake and Conan: past, present and future - Diego Rodriguez-Losada`"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"This talk will quickly review the past approaches, their pitfalls, and how "
"modern CMake and Conan integrations have improved over them:"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"From variables, to targets, to transparent targets integration with modern "
"Conan generators"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"Better separation of concerns to align binary configurations using CMake "
"toolchains"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid "Improving the developer experience with CMake presets"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"The new CMake-Conan integration using CMake’s new dependency providers "
"feature for transparent installation of dependencies"
msgstr ""

#: ../../../knowledge/videos.rst:66
msgid "Using std::cpp"
msgstr ""

#: ../../../knowledge/videos.rst:67
msgid ""
"`Why you shouldn’t write your own C++ package manager Luis Caro Campos JFrog`"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"This talk will provide a quick overview of how Conan deals with intrinsic C+"
"+ complexities:"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid "Headers vs binary symbols"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid "Shared and static library"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid "Symbol visibility"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"Binary compatibility: is there a one-size fits all approach to modeling it?"
msgstr ""

#: ../../../knowledge/videos.rst:0
msgid ""
"Build-time dependency resolution is only half the battle, what about runtime "
"dependencies?"
msgstr ""

#: ../../../knowledge/videos.rst:81
msgid "Meeting C++ online book & tool fair"
msgstr ""

#: ../../../knowledge/videos.rst:82
msgid "`Conan 2.0 demo - Chris McArthur`"
msgstr ""
