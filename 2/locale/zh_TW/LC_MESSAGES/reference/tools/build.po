# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/build.rst:4
msgid "conan.tools.build"
msgstr ""

#: ../../../reference/tools/build.rst:7
msgid "Building"
msgstr ""

#: ../../../reference/tools/build.rst:10
msgid "conan.tools.build.build_jobs()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cpu.py:docstring of
#: conan.tools.build.cpu.build_jobs:1
msgid ""
"Returns the number of CPUs available for parallel builds. It returns the "
"configuration value for ``tools.build:jobs`` if exists, otherwise, it "
"defaults to the helper function ``_cpu_count()``. ``_cpu_count()`` reads "
"cgroup to detect the configured number of CPUs. Currently, there are two "
"versions of cgroup available."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cpu.py:docstring of
#: conan.tools.build.cpu.build_jobs:7
msgid ""
"In the case of cgroup v1, if the data in cgroup is invalid, processor "
"detection comes into play. Whenever processor detection is not enabled, "
"``build_jobs()`` will safely return 1."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cpu.py:docstring of
#: conan.tools.build.cpu.build_jobs:10
msgid ""
"In the case of cgroup v2, if no limit is set, processor detection is used. "
"When the limit is set, the behavior is as described in cgroup v1."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:0
#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring
#: conan.tools.build.cppstd.check_max_cppstd:0
#: conan.tools.build.cppstd.check_min_cppstd:0
#: conan.tools.build.cppstd.default_cppstd:0
#: conan.tools.build.cppstd.supported_cppstd:0
#: conan.tools.build.cppstd.valid_max_cppstd:0
#: conan.tools.build.cppstd.valid_min_cppstd:0
#: ../../../conan_sources/conan/tools/build/cpu.py:docstring
#: conan.tools.build.cpu.build_jobs:0
#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring
#: conan.tools.build.cross_building.can_run:0
#: conan.tools.build.cross_building.cross_building:0
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.check_max_cstd:0
#: conan.tools.build.cstd.check_min_cstd:0
#: conan.tools.build.cstd.default_cstd:0
#: conan.tools.build.cstd.supported_cstd:0
#: conan.tools.build.cstd.valid_max_cstd:0
#: conan.tools.build.cstd.valid_min_cstd:0
#: ../../../conan_sources/conan/tools/build/flags.py:docstring
#: conan.tools.build.flags.cppstd_flag:0
msgid "Parameters"
msgstr "參數"

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:3
#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring
#: conan.tools.build.cppstd.check_max_cppstd:8
#: conan.tools.build.cppstd.check_min_cppstd:8
#: conan.tools.build.cppstd.default_cppstd:4
#: conan.tools.build.cppstd.supported_cppstd:5
#: conan.tools.build.cppstd.valid_max_cppstd:3
#: conan.tools.build.cppstd.valid_min_cppstd:3
#: ../../../conan_sources/conan/tools/build/cpu.py:docstring
#: conan.tools.build.cpu.build_jobs:13
#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring
#: conan.tools.build.cross_building.can_run:5
#: conan.tools.build.cross_building.cross_building:4
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.check_max_cstd:13
#: conan.tools.build.cstd.check_min_cstd:13
#: conan.tools.build.cstd.default_cstd:4
#: conan.tools.build.cstd.supported_cstd:5
#: conan.tools.build.cstd.valid_max_cstd:3
#: conan.tools.build.cstd.valid_min_cstd:3
#: ../../../conan_sources/conan/tools/build/flags.py:docstring
#: conan.tools.build.flags.cppstd_flag:10
msgid "The current recipe object. Always use ``self``."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.default_cppstd:0
#: conan.tools.build.cppstd.supported_cppstd:0
#: conan.tools.build.cppstd.valid_max_cppstd:0
#: conan.tools.build.cppstd.valid_min_cppstd:0
#: ../../../conan_sources/conan/tools/build/cpu.py:docstring
#: conan.tools.build.cpu.build_jobs:0
#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring
#: conan.tools.build.cross_building.can_run:0
#: conan.tools.build.cross_building.cross_building:0
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.default_cstd:0
#: conan.tools.build.cstd.supported_cstd:0
#: conan.tools.build.cstd.valid_max_cstd:0
#: conan.tools.build.cstd.valid_min_cstd:0
#: ../../../conan_sources/conan/tools/build/flags.py:docstring
#: conan.tools.build.flags.cppstd_flag:0
msgid "Returns"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cpu.py:docstring of
#: conan.tools.build.cpu.build_jobs:14
msgid "``int`` with the number of jobs"
msgstr ""

#: ../../../reference/tools/build.rst:19
msgid "conan.tools.build.cross_building()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring of
#: conan.tools.build.cross_building.cross_building:1
msgid ""
"Check if we are cross building comparing the *build* and *host* settings. "
"Returns ``True`` in the case that we are cross-building."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring of
#: conan.tools.build.cross_building.cross_building:5
msgid ""
"Do not consider cross building when building to 32 bits from 64 bits: x86_64 "
"to x86, sparcv9 to sparc or ppc64 to ppc32"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring of
#: conan.tools.build.cross_building.cross_building:7
msgid ""
"``bool`` value from ``tools.build.cross_building:cross_build`` if exists, "
"otherwise, it returns ``True`` if we are cross-building, else, ``False``."
msgstr ""

#: ../../../reference/tools/build.rst:29
msgid "conan.tools.build.can_run()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring of
#: conan.tools.build.cross_building.can_run:1
msgid ""
"Validates whether is possible to run a non-native app on the same "
"architecture. It’s a useful feature for the case your architecture can run "
"more than one target. For instance, Mac M1 machines can run both `armv8` and "
"`x86_64`."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cross_building.py:docstring of
#: conan.tools.build.cross_building.can_run:6
msgid ""
"``bool`` value from ``tools.build.cross_building:can_run`` if exists, "
"otherwise, it returns ``False`` if we are cross-building, else, ``True``."
msgstr ""

#: ../../../reference/tools/build.rst:39
msgid "Cppstd"
msgstr ""

#: ../../../reference/tools/build.rst:44
msgid "conan.tools.build.check_min_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_min_cppstd:1
msgid "Check if current cppstd fits the minimal version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_min_cppstd:3
msgid ""
"In case the current cppstd doesn't fit the minimal version required by "
"cppstd, a ConanInvalidConfiguration exception will be raised."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_max_cppstd:6
#: conan.tools.build.cppstd.check_min_cppstd:6
msgid ""
"settings.compiler.cppstd must be defined, otherwise "
"ConanInvalidConfiguration is raised"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_min_cppstd:9
#: conan.tools.build.cppstd.valid_min_cppstd:4
msgid "Minimal cppstd version required"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_max_cppstd:10
#: conan.tools.build.cppstd.check_min_cppstd:10
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.check_max_cstd:15
#: conan.tools.build.cstd.check_min_cstd:15
msgid "GNU extension is required (e.g gnu17)"
msgstr ""

#: ../../../reference/tools/build.rst:54
msgid "conan.tools.build.check_max_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_max_cppstd:1
msgid "Check if current cppstd fits the maximum version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_max_cppstd:3
msgid ""
"In case the current cppstd doesn't fit the maximum version required by "
"cppstd, a ConanInvalidConfiguration exception will be raised."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.check_max_cppstd:9
#: conan.tools.build.cppstd.valid_max_cppstd:4
msgid "Maximum cppstd version required"
msgstr ""

#: ../../../reference/tools/build.rst:62
msgid "conan.tools.build.valid_min_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.valid_min_cppstd:1
msgid "Validate if current cppstd fits the minimal version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.valid_max_cppstd:5
#: conan.tools.build.cppstd.valid_min_cppstd:5
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.valid_max_cstd:5
#: conan.tools.build.cstd.valid_min_cstd:5
msgid "GNU extension is required (e.g gnu17). This option ONLY works on Linux."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.valid_max_cppstd:6
#: conan.tools.build.cppstd.valid_min_cppstd:6
msgid ""
"True, if current cppstd matches the required cppstd version. Otherwise, "
"False."
msgstr ""

#: ../../../reference/tools/build.rst:70
msgid "conan.tools.build.valid_max_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.valid_max_cppstd:1
msgid "Validate if current cppstd fits the maximum version required."
msgstr ""

#: ../../../reference/tools/build.rst:78
msgid "conan.tools.build.default_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.default_cppstd:1
msgid ""
"Get the default ``compiler.cppstd`` for the \"conanfile.settings.compiler\" "
"and \"conanfile settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.default_cppstd:5
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.default_cstd:5
msgid "Name of the compiler e.g. gcc"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.default_cppstd:6
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.default_cstd:6
msgid "Version of the compiler e.g. 12"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.default_cppstd:7
msgid "The default ``compiler.cppstd`` for the specified compiler"
msgstr ""

#: ../../../reference/tools/build.rst:86
msgid "conan.tools.build.supported_cppstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.supported_cppstd:1
msgid ""
"Get a list of supported ``compiler.cppstd`` for the \"conanfile.settings."
"compiler\" and \"conanfile.settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.supported_cppstd:6
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.supported_cstd:6
msgid "Name of the compiler e.g: gcc"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.supported_cppstd:7
#: ../../../conan_sources/conan/tools/build/cstd.py:docstring
#: conan.tools.build.cstd.supported_cstd:7
msgid "Version of the compiler e.g: 12"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cppstd.py:docstring of
#: conan.tools.build.cppstd.supported_cppstd:8
msgid "a list of supported ``cppstd`` values."
msgstr ""

#: ../../../reference/tools/build.rst:94
msgid "conan.tools.build.cppstd_flag()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/flags.py:docstring of
#: conan.tools.build.flags.cppstd_flag:1
msgid ""
"Returns flags specific to the C++ standard based on the ``conanfile.settings."
"compiler``, ``conanfile.settings.compiler.version`` and ``conanfile.settings."
"compiler.cppstd``."
msgstr ""

#: ../../../conan_sources/conan/tools/build/flags.py:docstring of
#: conan.tools.build.flags.cppstd_flag:4
msgid ""
"It also considers when using GNU extension in ``settings.compiler.cppstd``, "
"reflecting it in the compiler flag. Currently, it supports GCC, Clang, "
"AppleClang, MSVC, Intel, MCST-LCC."
msgstr ""

#: ../../../conan_sources/conan/tools/build/flags.py:docstring of
#: conan.tools.build.flags.cppstd_flag:7
msgid ""
"In case there is no ``settings.compiler`` or ``settings.cppstd`` in the "
"profile, the result will be an **empty string**."
msgstr ""

#: ../../../conan_sources/conan/tools/build/flags.py:docstring of
#: conan.tools.build.flags.cppstd_flag:11
msgid ""
"``str`` with the standard C++ flag used by the compiler. e.g. \"-std=c+"
"+11\", \"/std:c++latest\""
msgstr ""

#: ../../../reference/tools/build.rst:102
msgid "cstd"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../reference/tools/build.rst:109
msgid "conan.tools.build.check_min_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_min_cstd:1
msgid "Check if current cstd fits the minimal version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_min_cstd:3
msgid ""
"In case the current cstd doesn't fit the minimal version required by cstd, a "
"ConanInvalidConfiguration exception will be raised."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:6
#: conan.tools.build.cstd.check_min_cstd:6
msgid ""
"If settings.compiler.cstd, the tool will use settings.compiler.cstd to "
"compare"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:7
#: conan.tools.build.cstd.check_min_cstd:7
msgid ""
"It not settings.compiler.cstd, the tool will use compiler to compare "
"(reading the default from cstd_default)"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:9
#: conan.tools.build.cstd.check_min_cstd:9
msgid ""
"If not settings.compiler is present (not declared in settings) will raise "
"because it cannot compare."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:11
#: conan.tools.build.cstd.check_min_cstd:11
msgid ""
"If can not detect the default cstd for settings.compiler, a exception will "
"be raised."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_min_cstd:14
#: conan.tools.build.cstd.valid_min_cstd:4
msgid "Minimal cstd version required"
msgstr ""

#: ../../../reference/tools/build.rst:119
msgid "conan.tools.build.check_max_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:1
msgid "Check if current cstd fits the maximum version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:3
msgid ""
"In case the current cstd doesn't fit the maximum version required by cstd, a "
"ConanInvalidConfiguration exception will be raised."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.check_max_cstd:14
#: conan.tools.build.cstd.valid_max_cstd:4
msgid "Maximum cstd version required"
msgstr ""

#: ../../../reference/tools/build.rst:127
msgid "conan.tools.build.valid_min_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.valid_min_cstd:1
msgid "Validate if current cstd fits the minimal version required."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.valid_max_cstd:6
#: conan.tools.build.cstd.valid_min_cstd:6
msgid ""
"True, if current cstd matches the required cstd version. Otherwise, False."
msgstr ""

#: ../../../reference/tools/build.rst:135
msgid "conan.tools.build.valid_max_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.valid_max_cstd:1
msgid "Validate if current cstd fits the maximum version required."
msgstr ""

#: ../../../reference/tools/build.rst:142
msgid "conan.tools.build.default_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.default_cstd:1
msgid ""
"Get the default ``compiler.cstd`` for the \"conanfile.settings.compiler\" "
"and \"conanfile settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.default_cstd:7
msgid "The default ``compiler.cstd`` for the specified compiler"
msgstr ""

#: ../../../reference/tools/build.rst:149
msgid "conan.tools.build.supported_cstd()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.supported_cstd:1
msgid ""
"Get a list of supported ``compiler.cstd`` for the \"conanfile.settings."
"compiler\" and \"conanfile.settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified."
msgstr ""

#: ../../../conan_sources/conan/tools/build/cstd.py:docstring of
#: conan.tools.build.cstd.supported_cstd:8
msgid "a list of supported ``cstd`` values."
msgstr ""

#: ../../../reference/tools/build.rst:157
msgid "Compiler"
msgstr ""

#: ../../../reference/tools/build.rst:160
msgid "conan.tools.build.check_min_compiler_version()"
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:1
msgid ""
"(Experimental) Checks if the current compiler and its version meet the "
"minimum requirements."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:4
msgid ""
"A list of tuples, where each tuple contains:  - **compiler** (*str*): The "
"name of the compiler (e.g., \"gcc\", \"msvc\"). - **min_version** (*str*): "
"The minimum required version as a string (e.g., \"14\", \"19.0\"). - "
"**reason** (*str*): A string explaining the reason for the version "
"requirement."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:5
msgid "A list of tuples, where each tuple contains:"
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:7
msgid ""
"**compiler** (*str*): The name of the compiler (e.g., \"gcc\", \"msvc\")."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:8
msgid ""
"**min_version** (*str*): The minimum required version as a string (e.g., "
"\"14\", \"19.0\")."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:9
msgid ""
"**reason** (*str*): A string explaining the reason for the version "
"requirement."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:0
msgid "Raises"
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:10
msgid "If the 'compiler' or 'compiler.version' settings are not defined."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:12
msgid ""
"If the found compiler version is less than the specified minimum version for "
"that compiler."
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:0
msgid "Example"
msgstr ""

#: ../../../conan_sources/conan/tools/build/compiler.py:docstring of
#: conan.tools.build.compiler.check_min_compiler_version:16
msgid ""
"def validate(self):\n"
"    compiler_restrictions = [\n"
"        (\"clang\", \"14\", \"requires C++20 coroutines support\"),\n"
"        (\"gcc\", \"12\", \"requires C++20 modules support\")\n"
"    ]\n"
"    check_min_compiler_version(self, compiler_restrictions)"
msgstr ""
