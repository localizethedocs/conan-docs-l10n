# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 08:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../examples/cross_build/tricore.rst:5
msgid "Building packages for TriCore"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../examples/cross_build/tricore.rst:10
msgid ""
"TriCore is an embedded microcontroller architecture used in multiple domains "
"such as automotive. There are multiple compilers for TriCore, some of which "
"can be found `here <https://www.infineon.com/cms/en/tools/aurix-tools/"
"Compilers/>`__. There are also ``gcc`` implementations for TriCore; this is "
"what we will be using in the examples on this page."
msgstr ""

#: ../../../examples/cross_build/tricore.rst:15
msgid "Since Conan 2.7 there is some built-in support for this architecture:"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:17
msgid ""
"The default ``settings.yml`` contains architectures: ``'tc131', 'tc16', "
"'tc161', 'tc162', 'tc18'``"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:18
msgid ""
"``CMakeToolchain`` defines ``CMAKE_SYSTEM_NAME=Generic-ELF`` and "
"``CMAKE_SYSTEM_PROCESSOR=tricore`` for these architectures"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:19
msgid ""
"The compiler flags ``-m<architecture>\"`` are injected as compiler and "
"linker flags in ``CMakeToolchain`` and ``AutotoolsToolchain``"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:21
msgid "That means that it is possible to define a profile like:"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:23
msgid "tricore.profile"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:23
msgid ""
"[settings]\n"
"os=baremetal\n"
"arch=tc162\n"
"compiler=gcc\n"
"compiler.version=11\n"
"compiler.cppstd=20\n"
"compiler.libcxx=libstdc++11\n"
"\n"
"[options]\n"
"*:fPIC=False\n"
"*:shared=False\n"
"\n"
"[conf]\n"
"tools.build:compiler_executables={\"c\":\"tricore-elf-gcc\",\"cpp\":"
"\"tricore-elf-g++\"}"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:42
msgid ""
"This assumes the compiler is installed in the system path, and its "
"executables are called ``tricore-elf-gcc`` and ``tricore-elf-g++``. And "
"then, cross-build and create a package for TriCore using this profile, for "
"example the default ``cmake_lib``:"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:45
msgid ""
"$ conan new cmake_lib -d name=mypkg -d version=0.1\n"
"$ conan create . -pr=tricore.profile"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:53
msgid ""
"This support is new and experimental. Please create a ticket in https://"
"github.com/conan-io/conan/issues for any feedback or issues"
msgstr ""

#: ../../../examples/cross_build/tricore.rst:54
msgid ""
"Linking applications (like if using ``conan new cmake_exe``) requires a "
"specific linker script, definition of entry-points, etc. Trying to build it "
"as above will produce linking errors. We will try to add further examples "
"for this case."
msgstr ""
