# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../howtos/check_conan_version_in_conanfile.rst:3
msgid "How to check the version of the Conan client inside a conanfile"
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:5
msgid ""
"Sometimes it might be useful to check the Conan version that is running in "
"that moment your recipe. Although we consider conan-center recipes only "
"forward compatible, this kind of check makes sense to update them so they "
"can maintain compatibility with old versions of Conan."
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:9
msgid "Let's have a look at a basic example of this:"
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:11
#: ../../../howtos/check_conan_version_in_conanfile.rst:37
msgid "conanfile.py"
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:11
msgid ""
" from conans import ConanFile, CMake, __version__ as conan_version\n"
" from conans.model.version import Version\n"
"\n"
"\n"
" class MyLibraryConan(ConanFile):\n"
"     name = \"mylibrary\"\n"
"     version = \"1.0\"\n"
"\n"
"     def build(self):\n"
"         if conan_version < Version(\"0.29\"):\n"
"             cmake = CMake(self.settings)\n"
"         else:\n"
"             cmake = CMake(self)\n"
"     ..."
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:29
msgid ""
"Here it checks the Conan version to maintain compatibility of the CMake "
"build helper for versions lower than Conan 0.29. It also uses the internal "
"``Version()`` class to perform the semver comparison in the if clause."
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:33
msgid ""
"You can find a real example of this in the `mingw_installer <https://github."
"com/conan-community/conan-mingw-installer>`_. Here you have the interesting "
"part of the recipe:"
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:37
msgid ""
" from conans import ConanFile, tools, __version__ as conan_version\n"
" from conans.model.version import Version\n"
"\n"
"\n"
" class MingwInstallerConan(ConanFile):\n"
"     name = \"mingw_installer\"\n"
"     version = \"1.0\"\n"
"     license = \"http://www.mingw.org/license\"\n"
"     url = \"http://github.com/conan-community/conan-mingw-installer\"\n"
"\n"
"     if conan_version < Version(\"0.99\"):\n"
"         os_name = \"os\"\n"
"         arch_name = \"arch\"\n"
"     else:\n"
"         os_name = \"os_build\"\n"
"         arch_name = \"arch_build\"\n"
"\n"
"     settings = {os_name: [\"Windows\"],\n"
"                 arch_name: [\"x86\", \"x86_64\"],\n"
"                 \"compiler\": {\"gcc\": {\"version\": None,\n"
"                                     \"libcxx\": [\"libstdc++\", \"libstdc+"
"+11\"],\n"
"                                     \"threads\": [\"posix\", \"win32\"],\n"
"                                     \"exception\": [\"dwarf2\", \"sjlj\", "
"\"seh\"]}}}\n"
"     ..."
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:65
msgid ""
"You can see here the ``mingw_installer`` recipe uses new settings "
"``os_build`` and ``arch_build`` since Conan 1.0 as those are the right ones "
"for :ref:`installer packages <create_installer_packages>`. However, it also "
"keeps the old settings so as not to break the recipe for old version, using "
"normal ``os`` and ``arch``."
msgstr ""

#: ../../../howtos/check_conan_version_in_conanfile.rst:70
msgid ""
"As said before, this is useful to maintain compatibility of recipes with "
"older Conan versions but remember that since Conan 1.0 there should not be :"
"ref:`any breaking changes<stability>`."
msgstr ""
