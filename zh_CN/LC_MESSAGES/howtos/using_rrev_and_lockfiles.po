# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.57\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../howtos/using_rrev_and_lockfiles.rst:2
msgid "Using recipe revisions and lockfiles"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:4
msgid ""
"If you don't want to deploy and maintain your own Artifactory instance, you "
"can isolate your project from changes in upstream remotes, for example "
"ConanCenter, using :ref:`recipe revisions<package_revisions>` and :ref:"
"`lockfiles<versioning_lockfiles>` (please, read linked Conan documentation "
"for more detailed explanation)."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:9
msgid ""
"Recipe revisions and lockfiles can be used to define exactly the binary you "
"want to use in your project. Even if the recipe is modified and new binaries "
"are generated for the same configurations, existing binaries will exist, you "
"just need to instruct Conan to use them even if new ones are available."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:14
msgid "Recipe Revisions"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:16
msgid ""
"Recipe Revisions are the way to tell Conan to use a specific snapshot of the "
"recipe. It is a hash added to the reference and can be used in Conan at the "
"same place as regular revisions:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:20
msgid "In the command line:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:23
msgid "conan install openssl/3.0.1@#1955937e88f13a02aa4fdae98c3f9fb8"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:27
msgid "In a `conanfile.txt` file:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:29
msgid ""
"[requires]\n"
"openssl/3.0.1@#1955937e88f13a02aa4fdae98c3f9fb8"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:34
msgid "In a `conanfile.py` file:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:36
msgid ""
"def requirements(self):\n"
"    self.requires(\"openssl/3.0.1@#1955937e88f13a02aa4fdae98c3f9fb8\")"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:41
msgid ""
"If you use explicit recipe revisions in your project you can be sure that "
"Conan will always use the same recipe revision of those references. You "
"might get new binaries if the same configuration (same packageID) is built "
"again for the same recipe revision, but that is not going to be a "
"compatibility problem."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:46
msgid ""
"This might not be enough for some projects, where you want to be sure "
"nothing is modified, not just the revisions you are listing explicitly but "
"also any other transitive dependency, this is what lockfiles are for."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:51
msgid "Lockfiles"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:53
msgid ""
"Lockfiles are files where all the information about requirements is written: "
"recipe revisions, package IDs and package revisions. You can create a "
"lockfile with all the dependencies for your project once you are happy with "
"them, and use that same lockfile with every Conan command. Conan will always "
"build the same graph (the locked one) and will always retrieve the same "
"recipes and binaries."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:62
msgid ""
"Lockfiles have a few known limitation that can not be fixed in Conan 1.x, "
"there are exciting improvements coming with Conan 2.0. Please read the "
"documentation linked below for more details."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:65
msgid ""
"Then, it would be up to you to generate a new lockfile if you want to "
"introduce new revisions for existing references."
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:68
msgid ""
"The two basic commands you need to know (:ref:`full docs "
"here<versioning_lockfiles>`):"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:70
msgid "Create lockfile from `conanfile.txt` file:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:72
msgid "conan lock create conanfile.txt --lockfile-out=locks/project.lock"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:76
msgid "Consume a lockfile:"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:78
msgid "conan install conanfile.txt --lockfile=locks/project.lock"
msgstr ""

#: ../../../howtos/using_rrev_and_lockfiles.rst:82
msgid ""
"If your project is managing several configurations, you would probably like "
"to have a look to :ref:`base "
"lockfiles<versioning_lockfiles_configurations_base_lockfiles>` and :ref:"
"`lockfile bundles<versioning_lockfiles_bundle>` in the documentation."
msgstr ""
