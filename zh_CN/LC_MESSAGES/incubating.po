# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../incubating.rst:5
msgid "Incubating features"
msgstr ""

#: ../../../incubating.rst:7
msgid ""
"This section is dedicated to new features that are under development, "
"looking for user testing and feedback. They are generally behind a flag to "
"enable them to be explicitly opted-in at this testing stage. They require "
"the very latest Conan version (sometimes recommended running from the "
"``develop2`` source branch), and explicitly setting those flags."
msgstr ""

#: ../../../incubating.rst:13
msgid "New CMakeConfigDeps generator"
msgstr ""

#: ../../../incubating.rst:15
msgid ""
"This generator is designed as a replacement of the current ``CMakeDeps`` "
"generator, with multiple pending fixes and improvements that couldn't easily "
"be done in the current one without breaking:"
msgstr ""

#: ../../../incubating.rst:17
msgid ""
"Creates real SHARED/STATIC/INTERFACE IMPORTED targets, no more artificial "
"interface targets. The ``CONAN_LIB::`` and other similar targets do not "
"exist anymore."
msgstr ""

#: ../../../incubating.rst:18
msgid "Defines IMPORTED_CONFIGURATIONS for targets."
msgstr ""

#: ../../../incubating.rst:19
msgid ""
"CONFIG definition of dependencies matching the dependency ``Release/Debug/"
"etc`` ``build_type``, no longer using the consumer one."
msgstr ""

#: ../../../incubating.rst:20
msgid ""
"Definition of IMPORTED_LOCATION and IMPORTED_IMPLIB for library targets."
msgstr ""

#: ../../../incubating.rst:21
msgid ""
"Definition of LINK_LANGUAGES based on the recipe ``languages`` and "
"``cpp_info/component`` ``languages`` properties."
msgstr ""

#: ../../../incubating.rst:22
msgid ""
"All these allows better propagation of linkage requirement and visibility, "
"avoiding some linkage error of transitive shared libraries in Linux."
msgstr ""

#: ../../../incubating.rst:23
msgid ""
"Better definition of ``requires`` relationships accross components inside "
"the same package and with respect to other packages."
msgstr ""

#: ../../../incubating.rst:24
msgid ""
"It doesn't need any ``build_context_activated`` or ``build_context_suffix`` "
"to use ``tool_requires`` dependencies."
msgstr ""

#: ../../../incubating.rst:25
msgid ""
"Definition of ``cpp_info/component.exe`` information (should include the ``."
"location`` definition too), to define EXECUTABLE targets that can be run."
msgstr ""

#: ../../../incubating.rst:26
msgid ""
"Executables from ``requires`` can also be used in non cross-build scenarios. "
"When a ``tool_requires`` to the same depependency exists, then those "
"executables will have priority."
msgstr ""

#: ../../../incubating.rst:27
msgid ""
"Creation of a new ``conan_cmakedeps_paths.cmake`` that contains definitions "
"of ``<pkg>_DIR`` paths for direct finding of the dependencies. This file is "
"also planned to be used in ``cmake-conan`` to extend its usage and avoid "
"some current limitations due to the fact that a CMake driven installation "
"cannot inject a toolchain later."
msgstr ""

#: ../../../incubating.rst:28
msgid ""
"(new since Conan 2.14) Better management of the system OSX Frameworks "
"through ``cpp_info.frameworks``."
msgstr ""

#: ../../../incubating.rst:29
msgid ""
"(new since Conan 2.14) Definition of ``cpp_info/component."
"package_framework`` information (should include the ``.location`` definition "
"too, e.g., ``os.path.join(self.package_folder, \"MyFramework.framework\", "
"\"MyFramework\")``) to define the custom OSX Framework library to be linked "
"against."
msgstr ""

#: ../../../incubating.rst:34
msgid ""
"This generator is only intended to generate ``config.cmake`` config files, "
"it will not generate ``Find*.cmake`` find modules, and support for it is not "
"planned. Use the ``CMakeDeps`` generator for that."
msgstr ""

#: ../../../incubating.rst:38
msgid ""
"The new fields that can be defined in the ``cpp_info`` or ``cpp_info."
"components``, besides the already defined in :ref:"
"`CppInfo<conan_conanfile_model_cppinfo>` are:"
msgstr ""

#: ../../../incubating.rst:40
msgid ""
"# EXPERIMENTAL FIELDS, used exclusively by new CMakeConfigDeps (-c tools."
"cmake.cmakedeps:new)\n"
"self.cpp_info.type  # The type of this artifact \"shared-library\", \"static-"
"library\", etc (same as package_type)\n"
"self.cpp_info.location # full location (path and filename with extension) of "
"the artifact or the Apple Framework library one\n"
"self.cpp_info.link_location  # Location of the import library for Windows ."
"lib associated to a dll\n"
"self.cpp_info.languages # same as \"languages\" attribute, it can be \"C\", "
"\"C++\"\n"
"self.cpp_info.exe  # Definition of an executable artifact\n"
"self.cpp_info.package_framework  # Definition of an Apple Framework (new "
"since Conan 2.14)"
msgstr ""

#: ../../../incubating.rst:51
msgid ""
"These fields will be auto-deduced from the other ``cpp_info`` and "
"``components`` definitions, like the ``libs`` or ``libdirs`` fields, but the "
"automatic deduction might have limitations. Defining them explicitly will "
"inhibit the auto deduction and use the value as provided by the recipe."
msgstr ""

#: ../../../incubating.rst:54
msgid ""
"This feature is enabled with the ``-c tools.cmake.cmakedeps:"
"new=will_break_next`` configuration. The value ``will_break_next`` will "
"change in next releases to emphasize the fact that this feature is not "
"suitable for usage beyond testing. Just by enabling this conf and forcing "
"the build of packages that use ``CMakeDeps`` will trigger the usage of the "
"new generator."
msgstr ""

#: ../../../incubating.rst:56
msgid "This new generator will also be usable in ``conanfile`` files with:"
msgstr ""

#: ../../../incubating.rst:58
msgid "conanfile.txt"
msgstr ""

#: ../../../incubating.rst:58
msgid ""
"[generators]\n"
"CMakeConfigDeps"
msgstr ""

#: ../../../incubating.rst:64 ../../../incubating.rst:72
msgid "conanfile.py"
msgstr ""

#: ../../../incubating.rst:64
msgid ""
"class Pkg(ConanFile):\n"
"   generators = \"CMakeConfigDeps\""
msgstr ""

#: ../../../incubating.rst:70
msgid "Or:"
msgstr ""

#: ../../../incubating.rst:72
msgid ""
"from conan import ConanFile\n"
"from conan.tools.cmake import CMakeConfigDeps\n"
"\n"
"class TestConan(ConanFile):\n"
"\n"
"   def generate(self):\n"
"      deps = CMakeConfigDeps(self)\n"
"      deps.generate()"
msgstr ""

#: ../../../incubating.rst:85
msgid ""
"The ``-c tools.cmake.cmakedeps:new=will_break_next`` is still necessary for "
"this recipe ``CMakeConfigDeps`` usage, if the config is not enabled, those "
"recipes will fail. It is also possible to define ``-c tools.cmake.cmakedeps:"
"new=recipe_will_break`` to enable exclusively the ``CMakeConfigDeps`` "
"generators usages, but not the automatic replacement of existing "
"``CMakeDeps`` by the ``CMakeConfigDeps``."
msgstr ""

#: ../../../incubating.rst:89
msgid ""
"Note that the feature is still \"incubating\", even for the explicit "
"``CMakeConfigDeps`` generator syntax, this recipe is subject to break or be "
"removed at any time."
msgstr ""

#: ../../../incubating.rst:91
msgid ""
"For any feedback, please open new tickets in https://github.com/conan-io/"
"conan/issues. This feedback is very important to stabilize the feature and "
"get it out of incubating, so even if it worked fine and you found no issue, "
"having the positive feedback reported is very useful."
msgstr ""

#: ../../../incubating.rst:97
msgid "Workspaces"
msgstr ""

#: ../../../incubating.rst:99
msgid "Moved to :ref:`tutorial_workspaces`"
msgstr ""

#: ../../../incubating.rst:102
msgid "Workspace files syntax"
msgstr ""

#: ../../../incubating.rst:104
msgid "Moved to :ref:`reference_workspace_files`"
msgstr ""

#: ../../../incubating.rst:108
msgid "Workspace commands"
msgstr ""

#: ../../../incubating.rst:109
msgid "Moved to :ref:`reference_commands_workspace`"
msgstr ""

#: ../../../incubating.rst:113
msgid "Workspace monolithic builds"
msgstr ""

#: ../../../incubating.rst:115
msgid "Moved to :ref:`tutorial_workspaces_monolithic`"
msgstr ""

#: ../../../incubating.rst:118
msgid ""
"For any feedback, please open new tickets in https://github.com/conan-io/"
"conan/issues."
msgstr ""
