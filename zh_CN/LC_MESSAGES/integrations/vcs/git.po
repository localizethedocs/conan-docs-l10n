# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.49\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/vcs/git.rst:3
msgid "|git_logo| Git"
msgstr ""

#: ../../../integrations/vcs/git.rst:5
msgid ""
"**Conan** uses plain text files, ``conanfile.txt`` or ``conanfile.py``, so "
"it's perfectly suitable for the use of any version control system. We use "
"and highly recommend :command:`git`."
msgstr ""

#: ../../../integrations/vcs/git.rst:8
msgid ""
"Check :ref:`workflows section <workflows>` to learn more about project "
"layouts that naturally fit version control systems."
msgstr ""

#: ../../../integrations/vcs/git.rst:12
msgid "Temporary files"
msgstr ""

#: ../../../integrations/vcs/git.rst:14
msgid ""
"**Conan** generates some files that should not be committed, as "
"*conanbuildinfo.\\** and *conaninfo.txt*. These files can change in "
"different computers and are re-generated with the :command:`conan install` "
"command."
msgstr ""

#: ../../../integrations/vcs/git.rst:17
msgid ""
"However, these files are typically generated in the **build tree** not in "
"the source tree, so they will be naturally disregarded. Just take care in "
"case you have created the **build** folder inside your project (we do this "
"in several examples in the documentation). In this case, you should add it "
"to your *.gitignore* file:"
msgstr ""

#: ../../../integrations/vcs/git.rst:21
msgid "*.gitignore*"
msgstr ""

#: ../../../integrations/vcs/git.rst:21
msgid ""
"...\n"
"build/"
msgstr ""

#: ../../../integrations/vcs/git.rst:28
msgid "Package creators"
msgstr ""

#: ../../../integrations/vcs/git.rst:30
msgid ""
"Check :ref:`scm feature<scm_feature>` to learn more about managing the "
"libraries source code with Git."
msgstr ""

#: ../../../integrations/vcs/git.rst:32
msgid "If you are creating a **Conan** package:"
msgstr ""

#: ../../../integrations/vcs/git.rst:34
msgid ""
"You can use the :ref:`url field <package_url>` to indicate the origin of "
"your package recipe. If you are using an external package recipe, this url "
"should point to the package recipe repository **not** to the external source "
"origin. If a **github** repository is detected, the Conan website will link "
"your github issues page from your Conan's package page."
msgstr ""

#: ../../../integrations/vcs/git.rst:37
msgid ""
"You can use :command:`git` to :ref:`obtain your source<method_source>` "
"(requires the git client in the path) when creating external package recipes."
msgstr ""
