# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.28\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conan_v2_mode.rst:5
msgid "CONAN_V2_MODE"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:7
msgid ""
"This environment variable activates some behaviors and defaults that are "
"intended to be in the next major release, :ref:`Conan 2.0 <conan_v2>`. It "
"also turns into errors things that are already deprecated in Conan 1.x."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:11
msgid ""
"The objective is to try to minimize the impact on existing recipes when "
"Conan 2.0 will be available and to start gathering feedback about the new "
"configuration and behavior. This does not resemble the full behavior that "
"Conan 2.0 will bring. The **v2 mode is a work-in-progress, it is highly "
"experimental and there is no commitment for stability here**, but we expect "
"that users with this mode activated will help us to shape the future version "
"of Conan while we keep evolving the Conan 1.x series."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:18
msgid ""
"So, if you are ready to experiment add the variable ``CONAN_V2_MODE`` to "
"your environment and, please, report your feedback about it."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:23
msgid ""
"**Do not activate this mode in a production environment!** Even if "
"everything seems to work fine, package ID might change, revisions will be "
"different and the ABI could be incompatible."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:29
msgid "Changes related to the default configuration"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:31
msgid ""
"These changes will be applied when installing Conan for the first time, as "
"these are stored in the autogenerated configuration files in the cache:"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:34
msgid "First level setting `cppstd` is removed."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:35
msgid ""
"Revisions are enabled by default (adds ``revisions_enabled=1`` to *conan."
"conf*)."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:36
msgid "No hooks activated by default."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:37
msgid "SCM data will be stored into *conandata.yml*."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:38
msgid "GCC >= 5 autodetected profile will use ``libstdc++11``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:39
msgid "Directory ``<cache>/python`` is not added to Python ``sys.path``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:41
msgid ""
"Some of these behaviors will be also activated for existing installations if "
"the *conan.conf* doesn't contain a value for them."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:46
msgid "Changes in recipes"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:48
msgid "These changes could break existing recipes:"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:50
msgid ""
"Forbid access to ``self.cpp_info`` in ``conanfile::package_id()`` method."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:51
msgid "Deprecate ``conanfile::config()`` method."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:52
msgid "Deprecate old ``python_requires`` syntax."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:53
msgid "Forbid access to ``self.info`` in ``conanfile.package()``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:54
msgid "``default_options`` are required to be a dictionary."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:55
msgid "Raise if setting ``cppstd`` appears in the recipe."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:56
msgid ""
"Forbid ``self.settings`` and ``self.options`` in ``conanfile::source()`` "
"method."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:57
msgid "Deprecate ``tools.msvc_build_command``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:58
msgid "Deprecate ``tools.build_sln_command``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:59
msgid "Deprecate ``cpp_info.cppflags`` (use ``cxxflags`` instead)."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:60
msgid ""
"Deprecate environment variables ``CONAN_USERNAME`` and ``CONAN_CHANNEL``."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:61
msgid ""
"``PYTHONPATH`` is not added automatically to the environment before running "
"consumer functions."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:62
msgid ""
"Attribute ``self.version`` is ensured to be a string in all the functions "
"and scenarios."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:63
msgid ""
"Access to member ``name`` in ``deps_cpp_info`` objects is forbidden, use "
"``get_name(<generator>)`` with the name of the generator."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:68
msgid "Changes in profiles"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:70
msgid "Could break existing profiles:"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:72
msgid "Deprecate ``scopes`` section in profiles."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:76
msgid "Other changes"
msgstr ""

#: ../../../reference/conan_v2_mode.rst:78
msgid ""
"Package name used by the ``pkg_config`` generator uses the same rules as any "
"other generator. Previously, if it was not explicit, it was using lowercase "
"``cpp_info.name`` when it was different from the package name."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:81
msgid ""
"If ``build_type`` or ``compiler`` are not defined when using build helpers "
"Conan will raise an error."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:83
msgid ""
"New compiler detection algorithm is used (e.g. when running ``conan profile "
"new <name> --detect``). Previously, ``<compiler> --version`` was parsed to "
"detect the compiler and its version. Now, using ``CONAN_V2_MODE``, Conan "
"will try to detect the compiler and its version via compiler's built-in "
"macro definitions."
msgstr ""

#: ../../../reference/conan_v2_mode.rst:89
msgid ""
"More changes will be added, some of them could be reverted and the behavior "
"may change without further noticing. If you are using ``CONAN_V2_MODE``, "
"**thanks!** We really appreciate your feedback about the future of Conan."
msgstr ""
