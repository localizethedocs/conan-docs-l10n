# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/methods.rst:4
msgid "Methods"
msgstr ""

#: ../../../reference/conanfile/methods.rst:6
msgid ""
"What follows is a list of methods that you can define in your recipes to "
"customize the package creation & consumption processes:"
msgstr ""

#: ../../../reference/conanfile/methods.rst:38
msgid ""
":doc:`build() <methods/build>`: Contains the build instructions to build a "
"package from source"
msgstr ""

#: ../../../reference/conanfile/methods.rst:39
msgid ""
":doc:`build_id() <methods/build_id>`: Allows reusing the same build to "
"create different package binaries"
msgstr ""

#: ../../../reference/conanfile/methods.rst:40
msgid ""
":doc:`build_requirements() <methods/build_requirements>`: Defines "
"``tool_requires`` and ``test_requires``"
msgstr ""

#: ../../../reference/conanfile/methods.rst:41
msgid ""
":doc:`compatibility() <methods/compatibility>`: Defines binary compatibility "
"at the recipe level"
msgstr ""

#: ../../../reference/conanfile/methods.rst:42
msgid ""
":doc:`configure() <methods/configure>`: Allows configuring settings and "
"options while computing dependencies"
msgstr ""

#: ../../../reference/conanfile/methods.rst:43
msgid ""
":doc:`config_options() <methods/config_options>`: Configure options while "
"computing dependency graph"
msgstr ""

#: ../../../reference/conanfile/methods.rst:44
msgid ""
":doc:`deploy() <methods/deploy>`: Deploys (copy from package to user folder) "
"the desired artifacts"
msgstr ""

#: ../../../reference/conanfile/methods.rst:45
msgid ""
":doc:`export() <methods/export>`: Copies files that are part of the recipe"
msgstr ""

#: ../../../reference/conanfile/methods.rst:46
msgid ""
":doc:`export_sources() <methods/export_sources>`: Copies files that are part "
"of the recipe sources"
msgstr ""

#: ../../../reference/conanfile/methods.rst:47
msgid ""
":doc:`finalize() <methods/finalize>`: Customizes the package for using it in "
"the running machine without affecting the original package"
msgstr ""

#: ../../../reference/conanfile/methods.rst:48
msgid ""
":doc:`generate() <methods/generate>`: Generates the files that are necessary "
"for building the package"
msgstr ""

#: ../../../reference/conanfile/methods.rst:49
msgid ""
":doc:`init() <methods/init>`: Special initialization of recipe when "
"extending from ``python_requires``"
msgstr ""

#: ../../../reference/conanfile/methods.rst:50
msgid ""
":doc:`layout() <methods/layout>`: Defines the relative project layout, "
"source folders, build folders, etc."
msgstr ""

#: ../../../reference/conanfile/methods.rst:51
msgid ""
":doc:`package() <methods/package>`: Copies files from build folder to the "
"package folder."
msgstr ""

#: ../../../reference/conanfile/methods.rst:52
msgid ""
":doc:`package_id() <methods/package_id>`: Defines special logic for "
"computing the binary ``package_id`` identifier"
msgstr ""

#: ../../../reference/conanfile/methods.rst:53
msgid ""
":doc:`package_info() <methods/package_info>`: Provide information for "
"consumers of this package about libraries, folders, etc."
msgstr ""

#: ../../../reference/conanfile/methods.rst:54
msgid ""
":doc:`requirements() <methods/requirements>`: Define the dependencies of the "
"package"
msgstr ""

#: ../../../reference/conanfile/methods.rst:55
msgid ""
":doc:`set_name() <methods/set_name>`: Dynamically define the name of a "
"package"
msgstr ""

#: ../../../reference/conanfile/methods.rst:56
msgid ""
":doc:`set_version() <methods/set_version>`: Dynamically define the version "
"of a package."
msgstr ""

#: ../../../reference/conanfile/methods.rst:57
msgid ""
":doc:`source() <methods/source>`: Contains the commands to obtain the source "
"code used to build"
msgstr ""

#: ../../../reference/conanfile/methods.rst:58
msgid ""
":doc:`system_requirements() <methods/system_requirements>`: Call system "
"package managers like Apt to install system packages"
msgstr ""

#: ../../../reference/conanfile/methods.rst:59
msgid ""
":doc:`test() <methods/test>`: Run some simple package test (exclusive of "
"``test_package``)"
msgstr ""

#: ../../../reference/conanfile/methods.rst:60
msgid ""
":doc:`validate() <methods/validate>`: Define if the current package is "
"invalid (cannot work) with the current configuration."
msgstr ""

#: ../../../reference/conanfile/methods.rst:61
msgid ""
":doc:`validate_build() <methods/validate_build>`: Define if the current "
"package cannot be created with the current configuration."
msgstr ""
