# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/methods/test.rst:5
msgid "test()"
msgstr ""

#: ../../../reference/conanfile/methods/test.rst:7
msgid ""
"The ``test()`` method is only used for **test_package/conanfile.py**. It "
"will execute immediately after ``build()`` has been called, and its goal is "
"to run some executable or tests on binaries to prove the package is "
"correctly created. Note that it is intended to be used as a test of the "
"package: the headers are found, the libraries are found, it is possible to "
"link, etc. But it is **not intended** to run unit, integration or functional "
"tests."
msgstr ""

#: ../../../reference/conanfile/methods/test.rst:12
msgid "It usually takes the form of:"
msgstr ""

#: ../../../reference/conanfile/methods/test.rst:14
msgid ""
"def test(self):\n"
"    if can_run(self):\n"
"        cmd = os.path.join(self.cpp.build.bindir, \"example\")\n"
"        self.run(cmd, env=\"conanrun\")"
msgstr ""

#: ../../../reference/conanfile/methods/test.rst:24
msgid ""
"See :ref:`the \"testing packages\" tutorial<tutorial_creating_test>` for "
"more information."
msgstr ""

#: ../../../reference/conanfile/methods/test.rst:25
msgid ""
"The :ref:`test_package_folder "
"attribute<conan_conanfile_attributes_test_package_folder>` allows defining a "
"different default location of the test-package instead of the default "
"``test_package`` folder."
msgstr ""
