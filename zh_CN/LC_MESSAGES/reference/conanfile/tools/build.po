# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.51\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/tools/build.rst:4
msgid "conan.tools.build"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:7
msgid "conan.tools.build.cross_building()"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:9
msgid "def cross_building(conanfile=None, skip_x64_x86=False):"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:14
msgid ""
"Check it we are cross building comparing the *build* and *host* settings. "
"Returns ``True`` in the case that we are cross-building."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:17
#: ../../../reference/conanfile/tools/build.rst:38
#: ../../../reference/conanfile/tools/build.rst:55
#: ../../../reference/conanfile/tools/build.rst:75
#: ../../../reference/conanfile/tools/build.rst:96
#: ../../../reference/conanfile/tools/build.rst:125
msgid "Parameters:"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:19
#: ../../../reference/conanfile/tools/build.rst:40
msgid "**conanfile**: Conanfile object, use always ``self``."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:20
msgid ""
"**skip_x64_x86**: Will not consider the as cross-building the case of "
"building in 64 bit architecture for 32 bit architecture, like "
"``build_arch=x86_64`` and ``host_arch=x86`` for example."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:26
msgid "conan.tools.build.can_run()"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:28
msgid "def can_run(conanfile):"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:33
msgid ""
"Validates whether is possible to run a non-native app on the same "
"architecture. It returns the configuration value for ``tools.build."
"cross_building:can_run`` if exists, otherwise, it returns ``False`` if we "
"are cross-building, else, ``True``."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:36
msgid ""
"It's an useful feature for the case your architecture can run more than one "
"target. For instance, Mac M1 machines can run both ``armv8`` and ``x86_64``."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:44
msgid "conan.tools.build.check_min_cppstd"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:47
msgid "def check_min_cppstd(conanfile, cppstd, gnu_extensions=False)"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:52
msgid ""
"Check if provided ``conanfile.settings.compiler.cppstd`` fits the minimal "
"version required (specified in the argument ``cppstd``). In case it doesn't, "
"a ``ConanInvalidConfiguration`` exception will be raised."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:57
#: ../../../reference/conanfile/tools/build.rst:77
#: ../../../reference/conanfile/tools/build.rst:98
#: ../../../reference/conanfile/tools/build.rst:127
msgid "**conanfile**: The current recipe object. Always use ``self``."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:58
msgid "**cppstd**: Minimal cppstd version required."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:59
msgid "**gnu_extensions**: GNU extension is required (e.g gnu17)."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:63
msgid "conan.tools.build.default_cppstd"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:65
msgid "def default_cppstd(conanfile, compiler=None, compiler_version=None):"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:71
msgid ""
"Get the default ``compiler.cppstd`` for the \"conanfile.settings.compiler\" "
"and \"conanfile settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified. Returns the default "
"``compiler.cppstd`` for the specified compiler."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:78
msgid "**compiler**: Name of the compiler e.g. gcc"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:79
msgid "**compiler_version**: Version of the compiler e.g. 12"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:83
msgid "conan.tools.build.supported_cppstd"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:85
msgid "def supported_cppstd(conanfile, compiler=None, compiler_version=None):"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:91
msgid ""
"Get the a list of supported ``compiler.cppstd`` for the \"conanfile.settings."
"compiler\" and \"conanfile.settings.compiler_version\" or for the parameters "
"\"compiler\" and \"compiler_version\" if specified. Returns a list of "
"supported ``cppstd`` values."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:99
msgid "**compiler**: Name of the compiler e.g: gcc"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:100
msgid "**compiler_version**: Version of the compiler e.g: 12"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:104
msgid "conan.tools.build.build_jobs()"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:106
msgid "def build_jobs(conanfile):"
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:112
msgid ""
"Returns the number of CPUs available for parallel builds. It returns the "
"configuration value for ``tools.build:jobs`` if exists, otherwise, it "
"defaults to the helper function ``_cpu_count()``. ``_cpu_count()`` reads "
"cgroup to detect the configured number of CPUs. Currently, there are two "
"versions of cgroup available."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:118
msgid ""
"In the case of cgroup v1, if the data in cgroup is invalid, processor "
"detection comes into play. Whenever processor detection is not enabled, "
"``build_jobs()`` will safely return 1."
msgstr ""

#: ../../../reference/conanfile/tools/build.rst:121
msgid ""
"In the case of cgroup v2, if no limit is set, processor detection is used. "
"When the limit is set, the behavior is as described in cgroup v1."
msgstr ""
