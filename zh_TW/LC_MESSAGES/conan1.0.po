# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../conan1.0.rst:5
msgid "Upgrading to conan 1.0"
msgstr ""

#: ../../../conan1.0.rst:7
msgid ""
"If you were using a 0.X conan version, there are some things to consider "
"while upgrading. They are reflected in the :ref:`changelog<changelog>`., but "
"this section summarizes the most important changes here:"
msgstr ""

#: ../../../conan1.0.rst:11
msgid "Command line changes"
msgstr ""

#: ../../../conan1.0.rst:13
msgid ""
"There has been a few things that will break existing usage (compared to "
"0.30). Most of them are in command line arguments, so they are relatively "
"easy to fix. The most important one is that now most commands require the "
"path to the conanfile folder or file, instead of using ``--path`` and ``--"
"file`` arguments. Specifically, :command:`conan install`, :command:`conan "
"export` and :command:`conan create` will be the ones most affected:"
msgstr ""

#: ../../../conan1.0.rst:15
msgid ""
"# instead of --path=myfolder --file=myconanfile.py, now you can do:\n"
"$ conan install . # Note the \".\" is now mandatory\n"
"$ conan install folder/myconanfile.txt\n"
"$ conan install ../myconanfile.py\n"
"$ conan info .\n"
"$ conan create . user/channel\n"
"$ conan create . Pkg/0.1@user/channel\n"
"$ conan create mypkgconanfile.py Pkg/0.1@user/channel\n"
"$ conan export . user/channel\n"
"$ conan export . Pkg/0.1@user/channel\n"
"$ conan export myfolder/myconanfile.py Pkg/0.1@user/channel"
msgstr ""

#: ../../../conan1.0.rst:29
msgid ""
"This behavior aligns with the :command:`conan source`, :command:`conan "
"build`, :command:`conan package` commands, that all use the same arguments "
"to locate the *conanfile.py* containing the logic to be run."
msgstr ""

#: ../../../conan1.0.rst:31
msgid "Now all commands read: :command:`command <origin-conanfile> ...`"
msgstr ""

#: ../../../conan1.0.rst:33
msgid "Also, all arguments to command line now use dash instead of underscore:"
msgstr ""

#: ../../../conan1.0.rst:35
msgid "$ conan build .. --source-folder=../src  # not --source_folder"
msgstr ""

#: ../../../conan1.0.rst:40
msgid "Deprecations/removals"
msgstr ""

#: ../../../conan1.0.rst:42
msgid "scopes were completely removed in conan 0.30.X"
msgstr ""

#: ../../../conan1.0.rst:43
msgid ""
"``self.conanfile_directory`` has been removed. Use ``self.source_folder``, "
"``self.build_folder``, etc. instead"
msgstr ""

#: ../../../conan1.0.rst:44
msgid ""
"``self.cpp_info``, ``self.env_info`` and ``self.user_info`` scope has been "
"reduced to only the ``package_info()`` method"
msgstr ""

#: ../../../conan1.0.rst:45
msgid ""
"``gcc`` and ``ConfigureEnvironment`` were already removed in conan 0.30.1"
msgstr ""

#: ../../../conan1.0.rst:46
msgid "``werror`` doesn't exist anymore. Now it is the builtin behavior."
msgstr ""

#: ../../../conan1.0.rst:47
msgid ""
"Command ``test_package`` has been removed. Use :command:`conan create` and :"
"command:`conan test` instead."
msgstr ""

#: ../../../conan1.0.rst:48
msgid ""
"``CMake`` helper only allows now (from conan 0.29). the ``CMake(self)`` "
"syntax"
msgstr ""

#: ../../../conan1.0.rst:49
msgid ""
":command:`conan package_files` command was replaced in conan 0.28 by :"
"command:`conan export-pkg` command."
msgstr ""

#: ../../../conan1.0.rst:53
msgid "Settings and profiles. Gcc/CLang versioning"
msgstr ""

#: ../../../conan1.0.rst:55
msgid ""
"gcc and clang compilers have modified their versioning approach, from gcc > "
"5 and clang > 4, the minors are really bugfixes, and then they have binary "
"compatibility. To adapt to this, conan now includes major version in the "
"*settings.yml* default settings file:"
msgstr ""

#: ../../../conan1.0.rst:59
msgid ""
"gcc:\n"
"    version: [\"4.1\", \"4.4\", \"4.5\", \"4.6\", \"4.7\", \"4.8\", "
"\"4.9\",\n"
"              \"5\", \"5.1\", \"5.2\", \"5.3\", \"5.4\",\n"
"              \"6\", \"6.1\", \"6.2\", \"6.3\", \"6.4\",\n"
"              \"7\", \"7.1\", \"7.2\"]"
msgstr ""

#: ../../../conan1.0.rst:67
msgid ""
"Most package creators want to use the major-only settings, like ``-s "
"compiler=gcc -s compiler.version=5``, instead of specifying the minors too."
msgstr ""

#: ../../../conan1.0.rst:70
msgid ""
"The default profile detection and creation has been modified accordingly, "
"but if you have a default profile you may want to update it to reflect this:"
msgstr ""

#: ../../../conan1.0.rst:81
msgid ""
"Conan associated tools (conan-package-tools, conan.cmake) have been upgraded "
"to accomodate this new defaults."
msgstr ""

#: ../../../conan1.0.rst:88
msgid "New features"
msgstr ""

#: ../../../conan1.0.rst:90
msgid ""
"Cross-compilation support with new default settings in settings.yml: "
"``os_build``, ``arch_build``, ``os_target``, ``arch_target``. They are "
"automatically removed from the ``package_id`` computation, or kept if they "
"are the only ones defined (as it happens usually with dev-tools packages). "
"It is possible to keep them too with the ``self.info."
"include_build_settings()`` method (call it in your ``package_id()`` method)."
msgstr ""

#: ../../../conan1.0.rst:96
msgid ""
"Please **don't** use cross-build settings ``os_build``, ``arch_build`` for "
"standard packages and libraries. They are only useful for packages that are "
"used via ``build_requires``, like ``cmake_installer`` or ``mingw_installer``."
msgstr ""

#: ../../../conan1.0.rst:100
msgid "Model and utilities for Windows subsystems"
msgstr ""

#: ../../../conan1.0.rst:102
msgid ""
"os:\n"
"    Windows:\n"
"        subsystem: [None, cygwin, msys, msys2, wsl]"
msgstr ""

#: ../../../conan1.0.rst:108
msgid ""
"This subsetting can be used by build helpers as ``CMake``, to act "
"accordingly."
msgstr ""
