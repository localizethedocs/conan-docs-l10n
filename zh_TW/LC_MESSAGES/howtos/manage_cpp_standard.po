# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../howtos/manage_cpp_standard.rst:4
msgid "How to manage C++ standard"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:8
msgid "This feature is experimental"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:10
msgid ""
"The setting representing the C++ standard is ``cppstd``. The detected "
"default profile doesn't set any value for the ``cppstd`` setting."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:13
msgid ""
"The consumer can specify it in a :ref:`profile<profiles>` or with the ``-s`` "
"parameter:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:15
msgid "conan install . -s cppstd=gnu14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:19
msgid ""
"This setting will only be applied to the recipes specifying ``cppstd`` in "
"the ``settings`` field:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:22
msgid ""
" class LibConan(ConanFile):\n"
"     name = \"lib\"\n"
"     version = \"1.0\"\n"
"     settings = \"cppstd\", \"os\", \"compiler\", \"build_type\", \"arch\""
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:31
msgid "Valid values for ``compiler=Visual Studio``:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:34
#: ../../../howtos/manage_cpp_standard.rst:46
msgid "VALUE"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:34
#: ../../../howtos/manage_cpp_standard.rst:46
msgid "DESCRIPTION"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:36
#: ../../../howtos/manage_cpp_standard.rst:56
msgid "14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:36
#: ../../../howtos/manage_cpp_standard.rst:56
msgid "C++ 14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:38
#: ../../../howtos/manage_cpp_standard.rst:60
msgid "17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:38
#: ../../../howtos/manage_cpp_standard.rst:60
msgid "C++ 17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:43
msgid "Valid values for other compilers:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:48
msgid "98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:48
msgid "C++ 98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:50
msgid "gnu98"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:50
msgid "C++ 98 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:52
msgid "11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:52
msgid "C++ 11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:54
msgid "gnu11"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:54
msgid "C++ 11 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:58
msgid "gnu14"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:58
msgid "C++ 14 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:62
msgid "gnu17"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:62
msgid "C++ 17 with GNU extensions"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:69
msgid "Build helpers"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:71
msgid ""
"When the ``cppstd`` setting is declared in the recipe and the consumer "
"specify a value for it:"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:73
msgid ""
"The :ref:`CMake<cmake_reference>` build helper will set the "
"``CONAN_CMAKE_CXX_STANDARD`` and ``CONAN_CMAKE_CXX_EXTENSIONS`` definitions, "
"that will be converted to the corresponding CMake variables to activate the "
"standard automatically with the ``conan_basic_setup()`` macro."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:76
msgid ""
"The :ref:`AutotoolsBuildEnvironment <autotools_reference>` build helper will "
"adjust the needed flag to ``CXXFLAGS`` automatically."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:78
msgid ""
"The :ref:`MSBuild/VisualStudioBuildEnvironment <msbuild>` build helper will "
"adjust the needed flag to ``CL`` env var automatically."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:82
msgid "Package compatibility"
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:84
msgid ""
"By default Conan will detect the default standard of your compiler to not "
"generate different binary packages. For example, you already built some "
"``gcc > 6.1`` packages, where the default std is ``gnu14``. If you introduce "
"the ``cppstd`` setting in your recipes and specify the ``gnu14`` value, "
"Conan won't generate new packages, because it was already the default of "
"your compiler."
msgstr ""

#: ../../../howtos/manage_cpp_standard.rst:91
msgid ""
"Check the :ref:`package_id() <method_package_id>` reference to know more."
msgstr ""
