# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.56\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/build_system/cmake.rst:4
msgid "|cmake_logo| CMake"
msgstr ""

#: ../../../integrations/build_system/cmake.rst:8
msgid ""
"The new, experimental integration with CMake can be found in :ref:"
"`conan_tools_cmake`. This is the integration that will become the standard "
"one in Conan 2.0, and the below generators and integrations will be "
"deprecated and removed."
msgstr ""

#: ../../../integrations/build_system/cmake.rst:12
msgid ""
"Conan can be integrated with CMake using different generators, build helpers "
"and custom *findXXX.cmake* files:"
msgstr ""

#: ../../../integrations/build_system/cmake.rst:27
msgid "Other resources:"
msgstr ""

#: ../../../integrations/build_system/cmake.rst:29
msgid ""
"If you want to use the Visual Studio 2017 + CMake integration, :ref:`check "
"this how-to<visual2017_cmake_howto>`"
msgstr ""
