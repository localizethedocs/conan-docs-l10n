# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2022, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.54\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../integrations/deployment/system_package_manager.rst:2
msgid "System package manager"
msgstr ""

#: ../../../integrations/deployment/system_package_manager.rst:4
msgid ""
"The Conan packages can be deployed using a system package manager. Usually "
"this process is done by creating a folder structure with the needed files "
"and bundling all of them into the file format specific to the system package "
"manager of choice, like *.rpm* or *.deb*. This method is very convenient for "
"deployment and distribution as it is natively integrated in the system. "
"However, there are some limitations:"
msgstr ""

#: ../../../integrations/deployment/system_package_manager.rst:8
msgid ""
"It might require to create a specific package for each of supported distro, "
"or at least use the lowest version (see concerns about ``glibc`` below), see "
"the section :ref:`custom_settings`, which explains how to customize Conan "
"settings to model different Linux distributions in order to create different "
"packages for them."
msgstr ""

#: ../../../integrations/deployment/system_package_manager.rst:12
msgid ""
"If you want to target different distros, then you need to create one package "
"per supported distro (likely one for `Ubuntu <https://ubuntu.com>`_, one for "
"`Arch Linux <https://www.archlinux.org>`_, etc.), and formats or guidelines "
"for each distro might differ significantly"
msgstr ""

#: ../../../integrations/deployment/system_package_manager.rst:15
msgid ""
"Check out the sections :ref:`makeself <deployment_makeself>`, :ref:`AppImage "
"<deployment_appimage>`, :ref:`Flatpak <deployment_flatpak>` and :ref:`Snap "
"<deployment_snap>` for information on how to create distribution-agnostic "
"packages."
msgstr ""
