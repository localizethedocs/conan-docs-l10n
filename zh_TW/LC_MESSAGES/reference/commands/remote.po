# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.14\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/commands/remote.rst:4
msgid "conan remote"
msgstr ""

#: ../../../reference/commands/remote.rst:6
msgid ""
"Use this command to add, edit and remove Conan repositories from the Conan "
"remote registry and also manage authentication to those remotes. For more "
"information on how to work with Conan repositories, please check the :ref:"
"`dedicated section <conan_repositories>`."
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote -h\n"
"usage: conan remote [-h] [-v [V]] [-cc CORE_CONF] [--out-file OUT_FILE]\n"
"                    {add,auth,disable,enable,list,list-users,login,logout,"
"remove,rename,set-user,update}\n"
"                    ...\n"
"\n"
"Manage the remote list and the users authenticated on them.\n"
"\n"
"positional arguments:\n"
"  {add,auth,disable,enable,list,list-users,login,logout,remove,rename,set-"
"user,update}\n"
"                        sub-command help\n"
"    add                 Add a remote.\n"
"    auth                Authenticate in the defined remotes. Use\n"
"                        CONAN_LOGIN_USERNAME* and CONAN_PASSWORD* variables "
"if\n"
"                        available. Ask for username and password "
"interactively\n"
"                        in case (re-)authentication is required and there "
"are\n"
"                        no CONAN_LOGIN* and CONAN_PASSWORD* variables\n"
"                        available which could be used. Usually you'd use "
"this\n"
"                        method over conan remote login for scripting which\n"
"                        needs to run in CI and locally.\n"
"    disable             Disable all the remotes matching a pattern.\n"
"    enable              Enable all the remotes matching a pattern.\n"
"    list                List current remotes.\n"
"    list-users          List the users logged into all the remotes.\n"
"    login               Login into the specified remotes matching a "
"pattern.\n"
"    logout              Clear the existing credentials for the specified\n"
"                        remotes matching a pattern.\n"
"    remove              Remove remotes.\n"
"    rename              Rename a remote.\n"
"    set-user            Associate a username with a remote matching a "
"pattern\n"
"                        without performing the authentication.\n"
"    update              Update a remote.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"\n"
msgstr ""
"$ conan remote -h\n"
"usage: conan remote [-h] [-v [V]] [-cc CORE_CONF] [--out-file OUT_FILE]\n"
"                    {add,auth,disable,enable,list,list-users,login,logout,"
"remove,rename,set-user,update}\n"
"                    ...\n"
"\n"
"Manage the remote list and the users authenticated on them.\n"
"\n"
"positional arguments:\n"
"  {add,auth,disable,enable,list,list-users,login,logout,remove,rename,set-"
"user,update}\n"
"                        sub-command help\n"
"    add                 Add a remote.\n"
"    auth                Authenticate in the defined remotes. Use\n"
"                        CONAN_LOGIN_USERNAME* and CONAN_PASSWORD* variables "
"if\n"
"                        available. Ask for username and password "
"interactively\n"
"                        in case (re-)authentication is required and there "
"are\n"
"                        no CONAN_LOGIN* and CONAN_PASSWORD* variables\n"
"                        available which could be used. Usually you'd use "
"this\n"
"                        method over conan remote login for scripting which\n"
"                        needs to run in CI and locally.\n"
"    disable             Disable all the remotes matching a pattern.\n"
"    enable              Enable all the remotes matching a pattern.\n"
"    list                List current remotes.\n"
"    list-users          List the users logged into all the remotes.\n"
"    login               Login into the specified remotes matching a "
"pattern.\n"
"    logout              Clear the existing credentials for the specified\n"
"                        remotes matching a pattern.\n"
"    remove              Remove remotes.\n"
"    rename              Rename a remote.\n"
"    set-user            Associate a username with a remote matching a "
"pattern\n"
"                        without performing the authentication.\n"
"    update              Update a remote.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"\n"

#: ../../../reference/commands/remote.rst:15
msgid "conan remote add"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote add -h\n"
"usage: conan remote add [-h] [--out-file OUT_FILE] [-v [V]] [-cc CORE_CONF]\n"
"                        [--insecure] [--index INDEX] [-f]\n"
"                        [-ap ALLOWED_PACKAGES] [-t {local-recipes-index}]\n"
"                        name url\n"
"\n"
"Add a remote.\n"
"\n"
"positional arguments:\n"
"  name                  Name of the remote to add\n"
"  url                   Url of the remote\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --insecure            Allow insecure server connections when using SSL\n"
"  --index INDEX         Insert the remote at a specific position in the "
"remote\n"
"                        list\n"
"  -f, --force           Force the definition of the remote even if "
"duplicated\n"
"  -ap ALLOWED_PACKAGES, --allowed-packages ALLOWED_PACKAGES\n"
"                        Add recipe reference pattern to list of allowed\n"
"                        packages for this remote\n"
"  -t {local-recipes-index}, --type {local-recipes-index}\n"
"                        Define the remote type\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:22
msgid "conan remote auth"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote auth -h\n"
"usage: conan remote auth [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                         [-cc CORE_CONF] [--with-user] [--force]\n"
"                         remote\n"
"\n"
"Authenticate in the defined remotes. Use CONAN_LOGIN_USERNAME* and\n"
"CONAN_PASSWORD* variables if available. Ask for username and password\n"
"interactively in case (re-)authentication is required and there are no\n"
"CONAN_LOGIN* and CONAN_PASSWORD* variables available which could be used.\n"
"Usually you'd use this method over conan remote login for scripting which\n"
"needs to run in CI and locally.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern or name of the remote/s to authenticate\n"
"                        against. The pattern uses 'fnmatch' style "
"wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --with-user           Only try to auth in those remotes that already have "
"a\n"
"                        username or a CONAN_LOGIN_USERNAME* env-var defined\n"
"  --force               Force authentication for anonymous-enabled\n"
"                        repositories. Can be used for force authentication "
"in\n"
"                        case your Artifactory instance has anonymous access\n"
"                        enabled and Conan would not ask for username and\n"
"                        password even for non-anonymous repositories if not\n"
"                        yet authenticated.\n"
"\n"
msgstr ""
"$ conan remote auth -h\n"
"usage: conan remote auth [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                         [-cc CORE_CONF] [--with-user] [--force]\n"
"                         remote\n"
"\n"
"Authenticate in the defined remotes. Use CONAN_LOGIN_USERNAME* and\n"
"CONAN_PASSWORD* variables if available. Ask for username and password\n"
"interactively in case (re-)authentication is required and there are no\n"
"CONAN_LOGIN* and CONAN_PASSWORD* variables available which could be used.\n"
"Usually you'd use this method over conan remote login for scripting which\n"
"needs to run in CI and locally.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern or name of the remote/s to authenticate\n"
"                        against. The pattern uses 'fnmatch' style "
"wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --with-user           Only try to auth in those remotes that already have "
"a\n"
"                        username or a CONAN_LOGIN_USERNAME* env-var defined\n"
"  --force               Force authentication for anonymous-enabled\n"
"                        repositories. Can be used for force authentication "
"in\n"
"                        case your Artifactory instance has anonymous access\n"
"                        enabled and Conan would not ask for username and\n"
"                        password even for non-anonymous repositories if not\n"
"                        yet authenticated.\n"
"\n"

#: ../../../reference/commands/remote.rst:30
msgid ""
"If a remote which allows anonymous access matches the pattern given to the "
"command, Conan won't try to authenticate with it by default. If you want to "
"authenticate with a remote that allows anonymous access, you can use the ``--"
"force`` option."
msgstr ""

#: ../../../reference/commands/remote.rst:34
msgid "conan remote disable"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote disable -h\n"
"usage: conan remote disable [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                            [-cc CORE_CONF]\n"
"                            remote\n"
"\n"
"Disable all the remotes matching a pattern.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern of the remote/s to disable. The pattern "
"uses\n"
"                        'fnmatch' style wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:41
msgid "conan remote enable"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote enable -h\n"
"usage: conan remote enable [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                           [-cc CORE_CONF]\n"
"                           remote\n"
"\n"
"Enable all the remotes matching a pattern.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern of the remote/s to enable. The pattern uses\n"
"                        'fnmatch' style wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:48
msgid "conan remote list"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote list -h\n"
"usage: conan remote list [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                         [-cc CORE_CONF]\n"
"\n"
"List current remotes.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:55
msgid "conan remote list-users"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote list-users -h\n"
"usage: conan remote list-users [-h] [-f FORMAT] [--out-file OUT_FILE] [-v "
"[V]]\n"
"                               [-cc CORE_CONF]\n"
"\n"
"List the users logged into all the remotes.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:62
msgid "conan remote login"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote login -h\n"
"usage: conan remote login [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                          [-cc CORE_CONF] [-p [PASSWORD]]\n"
"                          remote [username]\n"
"\n"
"Login into the specified remotes matching a pattern.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern or name of the remote to login into. The\n"
"                        pattern uses 'fnmatch' style wildcards.\n"
"  username              Username\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  -p [PASSWORD], --password [PASSWORD]\n"
"                        User password. Use double quotes if password with\n"
"                        spacing, and escape quotes if existing. If empty, "
"the\n"
"                        password is requested interactively (not exposed)\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:69
msgid "conan remote logout"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote logout -h\n"
"usage: conan remote logout [-h] [-f FORMAT] [--out-file OUT_FILE] [-v [V]]\n"
"                           [-cc CORE_CONF]\n"
"                           remote\n"
"\n"
"Clear the existing credentials for the specified remotes matching a "
"pattern.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern or name of the remote to logout. The "
"pattern\n"
"                        uses 'fnmatch' style wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:76
msgid "conan remote remove"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote remove -h\n"
"usage: conan remote remove [-h] [--out-file OUT_FILE] [-v [V]] [-cc "
"CORE_CONF]\n"
"                           remote\n"
"\n"
"Remove remotes.\n"
"\n"
"positional arguments:\n"
"  remote                Name of the remote to remove. Accepts 'fnmatch' "
"style\n"
"                        wildcards.\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:83
msgid "conan remote rename"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote rename -h\n"
"usage: conan remote rename [-h] [--out-file OUT_FILE] [-v [V]] [-cc "
"CORE_CONF]\n"
"                           remote new_name\n"
"\n"
"Rename a remote.\n"
"\n"
"positional arguments:\n"
"  remote                Current name of the remote\n"
"  new_name              New name for the remote\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:90
msgid "conan remote set-user"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote set-user -h\n"
"usage: conan remote set-user [-h] [-f FORMAT] [--out-file OUT_FILE] [-v "
"[V]]\n"
"                             [-cc CORE_CONF]\n"
"                             remote username\n"
"\n"
"Associate a username with a remote matching a pattern without performing "
"the\n"
"authentication.\n"
"\n"
"positional arguments:\n"
"  remote                Pattern or name of the remote. The pattern uses\n"
"                        'fnmatch' style wildcards.\n"
"  username              Username\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  -f FORMAT, --format FORMAT\n"
"                        Select the output format: json\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:97
msgid "conan remote update"
msgstr ""

#: ../../../reference/commands/remote.rst:-1
msgid ""
"$ conan remote update -h\n"
"usage: conan remote update [-h] [--out-file OUT_FILE] [-v [V]] [-cc "
"CORE_CONF]\n"
"                           [--url URL] [--secure] [--insecure] [--index "
"INDEX]\n"
"                           [-ap ALLOWED_PACKAGES]\n"
"                           remote\n"
"\n"
"Update a remote.\n"
"\n"
"positional arguments:\n"
"  remote                Name of the remote to update\n"
"\n"
"options:\n"
"  -h, --help            show this help message and exit\n"
"  --out-file OUT_FILE   Write the output of the command to the specified "
"file\n"
"                        instead of stdout.\n"
"  -v [V]                Level of detail of the output. Valid options from "
"less\n"
"                        verbose to more verbose: -vquiet, -verror, -"
"vwarning,\n"
"                        -vnotice, -vstatus, -v or -vverbose, -vv or -"
"vdebug,\n"
"                        -vvv or -vtrace\n"
"  -cc CORE_CONF, --core-conf CORE_CONF\n"
"                        Define core configuration, overwriting global.conf\n"
"                        values. E.g.: -cc core:non_interactive=True\n"
"  --url URL             New url for the remote\n"
"  --secure              Don't allow insecure server connections when using "
"SSL\n"
"  --insecure            Allow insecure server connections when using SSL\n"
"  --index INDEX         Insert the remote at a specific position in the "
"remote\n"
"                        list\n"
"  -ap ALLOWED_PACKAGES, --allowed-packages ALLOWED_PACKAGES\n"
"                        Add recipe reference pattern to the list of allowed\n"
"                        packages for this remote\n"
"\n"
msgstr ""

#: ../../../reference/commands/remote.rst:105
msgid ":ref:`Uploading packages tutorial <uploading_packages>`"
msgstr ""

#: ../../../reference/commands/remote.rst:106
msgid ":ref:`Working with Conan repositories <conan_repositories>`"
msgstr ""

#: ../../../reference/commands/remote.rst:107
msgid ""
":ref:`Upload Conan packages to remotes using conan upload command "
"<reference_commands_upload>`"
msgstr ""
