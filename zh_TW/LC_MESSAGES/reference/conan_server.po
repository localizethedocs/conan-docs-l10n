# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 08:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conan_server.rst:4
msgid "Conan Server"
msgstr ""

#: ../../../reference/conan_server.rst:8
msgid ""
"This server is mainly used for testing (though it might work fine for small "
"teams). We recommend using the free :ref:`Artifactory Community Edition for "
"C/C++ <artifactory_ce_cpp>` for private development or **Artifactory Pro** "
"as Enterprise solution."
msgstr ""

#: ../../../reference/conan_server.rst:13
msgid "Configuration"
msgstr ""

#: ../../../reference/conan_server.rst:15
msgid ""
"By default your server configuration is saved under ``~/.conan_server/server."
"conf``, however you can modify this behaviour by either setting the "
"``CONAN_SERVER_HOME`` environment variable or launching the server with ``-"
"d`` or ``--server_dir`` command line argument followed by desired path. In "
"case you use one of the options your configuration file will be stored under "
"``server_directory/server.conf`` Please note that command line argument will "
"override the environment variable. You can change configuration values in "
"``server.conf``, prior to launching the server. Note that the server does "
"not support hot-reload, and thus in order to see configuration changes you "
"will have to manually relaunch the server."
msgstr ""

#: ../../../reference/conan_server.rst:25
msgid "The server configuration file is by default:"
msgstr ""

#: ../../../reference/conan_server.rst:27
msgid ""
"[server]\n"
"jwt_secret: IJKhyoioUINMXCRTytrR\n"
"jwt_expire_minutes: 120\n"
"\n"
"ssl_enabled: False\n"
"port: 9300\n"
"\n"
"public_port:\n"
"host_name: localhost\n"
"\n"
"authorize_timeout: 1800\n"
"\n"
"disk_storage_path: ./data\n"
"disk_authorize_timeout: 1800\n"
"updown_secret: HJhjujkjkjkJKLUYyuuyHJ\n"
"\n"
"[write_permissions]\n"
"# \"opencv/2.3.4@lasote/testing\": default_user,default_user2\n"
"\n"
"[read_permissions]\n"
"*/*@*/*: *\n"
"\n"
"[users]\n"
"demo: demo"
msgstr ""
"[server]\n"
"jwt_secret: IJKhyoioUINMXCRTytrR\n"
"jwt_expire_minutes: 120\n"
"\n"
"ssl_enabled: False\n"
"port: 9300\n"
"\n"
"public_port:\n"
"host_name: localhost\n"
"\n"
"authorize_timeout: 1800\n"
"\n"
"disk_storage_path: ./data\n"
"disk_authorize_timeout: 1800\n"
"updown_secret: HJhjujkjkjkJKLUYyuuyHJ\n"
"\n"
"[write_permissions]\n"
"# \"opencv/2.3.4@lasote/testing\": default_user,default_user2\n"
"\n"
"[read_permissions]\n"
"*/*@*/*: *\n"
"\n"
"[users]\n"
"demo: demo"

#: ../../../reference/conan_server.rst:56
msgid "Server Parameters"
msgstr "伺服端參數"

#: ../../../reference/conan_server.rst:60
msgid ""
"The Conan server supports relative URLs, allowing you to avoid setting "
"``host_name``, ``public_port`` and ``ssl_enabled``. The URLs used to upload/"
"download packages will be automatically generated in the client following "
"the URL of the remote. This allows accessing the Conan server from different "
"networks."
msgstr ""

#: ../../../reference/conan_server.rst:65
msgid "``port``: Port where **conan_server** will run."
msgstr ""

#: ../../../reference/conan_server.rst:67
msgid ""
"The client server authorization is done with JWT. ``jwt_secret`` is a random "
"string used to generate authentication tokens. You can change it safely "
"anytime (in fact it is a good practice). The change will just force users to "
"log in again. ``jwt_expire_minutes`` is the amount of time that users remain "
"logged-in within the client without having to introduce their credentials "
"again."
msgstr ""

#: ../../../reference/conan_server.rst:73
msgid ""
"``host_name``: If you set ``host_name``, you must use the machine's IP where "
"you are running your server (or domain name), something like **host_name: "
"192.168.1.100**. This IP (or domain name) has to be visible (and resolved) "
"by the Conan client, so take it into account if your server has multiple "
"network interfaces."
msgstr ""

#: ../../../reference/conan_server.rst:78
msgid ""
"``public_port``:  Might be needed when running virtualized, Docker or any "
"other kind of port redirection. File uploads/downloads are served with their "
"own URLs, generated by the system, so the file storage backend is "
"independent. Those URLs need the public port they have to communicate from "
"the outside. If you leave it blank, the ``port`` value is used."
msgstr ""

#: ../../../reference/conan_server.rst:84
msgid ""
"**Example:** Use conan_server in a Docker container that internally runs in "
"the 9300 port but exposes the 9999 port (where the clients will connect to):"
msgstr ""

#: ../../../reference/conan_server.rst:87
msgid "docker run ... -p9999:9300 ... # Check Docker docs for that"
msgstr ""

#: ../../../reference/conan_server.rst:92
#: ../../../reference/conan_server.rst:274
#: ../../../reference/conan_server.rst:303
msgid "**server.conf**"
msgstr ""

#: ../../../reference/conan_server.rst:94
msgid ""
"[server]\n"
"\n"
"ssl_enabled: False\n"
"port: 9300\n"
"public_port: 9999\n"
"host_name: localhost"
msgstr ""

#: ../../../reference/conan_server.rst:104
msgid ""
"``ssl_enabled`` Conan doesn't handle the SSL traffic by itself, but you can "
"use a proxy like :ref:`Nginx to redirect the SSL traffic to your Conan "
"server <reference_conan_server_nginx>`. If your Conan clients are connecting "
"with \"https\", set `ssl_enabled` to True. This way the conan_server will "
"generate the upload/download urls with \"https\" instead of \"http\"."
msgstr ""

#: ../../../reference/conan_server.rst:111
msgid ""
"**Important**: The Conan client, by default, will validate the server SSL "
"certificates and won't connect if it's invalid. If you have self signed "
"certificates you have two options:"
msgstr ""

#: ../../../reference/conan_server.rst:115
msgid ""
"Use the :command:`conan remote` command to disable the SSL certificate "
"checks. E.g., *conan remote add/update myremote https://somedir False*"
msgstr ""

#: ../../../reference/conan_server.rst:117
msgid ""
"If using the *core.net.http:cacert_path* configuration in the Conan client, "
"append the server *.crt* file contents to the *cacert.pem* location."
msgstr ""

#: ../../../reference/conan_server.rst:120
msgid ""
"The folder in which the uploaded packages are stored (i.e., the folder you "
"would want to backup) is defined in the ``disk_storage_path``. The storage "
"backend might use a different channel, and uploads/downloads are authorized "
"up to a maximum of ``authorize_timeout`` seconds. The value should "
"sufficient so that large downloads/uploads are not rejected, but not too big "
"to prevent hanging up the file transfers. The value "
"``disk_authorize_timeout`` is not currently used. File transfers are "
"authorized with their own tokens, generated with the secret "
"``updown_secret``. This value should be different from the above "
"``jwt_secret``."
msgstr ""

#: ../../../reference/conan_server.rst:130
msgid "Permissions Parameters"
msgstr ""

#: ../../../reference/conan_server.rst:132
msgid ""
"By default, the server configuration when set to Read can be done anonymous, "
"but uploading requires you to be  registered users. Users can easily be "
"registered in the ``[users]`` section, by defining a pair of ``login: "
"password`` for each one. Plain text passwords are used at the moment, but as "
"the server is on-premises (behind firewall), you just need to trust your "
"sysadmin :)"
msgstr ""

#: ../../../reference/conan_server.rst:138
msgid ""
"If you want to restrict read/write access to specific packages, configure "
"the ``[read_permissions]`` and ``[write_permissions]`` sections. These "
"sections specify the sequence of patterns and authorized users, in the form:"
msgstr ""

#: ../../../reference/conan_server.rst:142
msgid ""
"# use a comma-separated, no-spaces list of users\n"
"package/version@user/channel: allowed_user1,allowed_user2"
msgstr ""

#: ../../../reference/conan_server.rst:147
msgid "E.g.:"
msgstr ""

#: ../../../reference/conan_server.rst:149
msgid ""
"*/*@*/*: * # allow all users to all packages\n"
"PackageA/*@*/*: john,peter # allow john and peter access to any PackageA\n"
"*/*@project/*: john # Allow john to access any package from the \"project\" "
"user"
msgstr ""

#: ../../../reference/conan_server.rst:155
msgid ""
"The rules are evaluated in order. If the left side of the pattern matches, "
"the rule is applied and it will not continue searching for matches."
msgstr ""

#: ../../../reference/conan_server.rst:159
msgid "Authentication"
msgstr "認證"

#: ../../../reference/conan_server.rst:161
msgid ""
"By default, Conan provides a simple ``user: password`` users list in the "
"``server.conf`` file."
msgstr ""

#: ../../../reference/conan_server.rst:164
msgid ""
"There is also a plugin mechanism for setting other authentication methods. "
"The process to install any of them is a simple two-step process:"
msgstr ""

#: ../../../reference/conan_server.rst:167
msgid ""
"Copy the authenticator source file into the ``.conan_server/plugins/"
"authenticator`` folder."
msgstr ""

#: ../../../reference/conan_server.rst:169
msgid ""
"Add ``custom_authenticator: authenticator_name`` to the ``server.conf`` "
"[server] section."
msgstr ""

#: ../../../reference/conan_server.rst:172
msgid ""
"This is a list of available authenticators, visit their URLs to retrieve "
"them, but also to report issues and collaborate:"
msgstr ""

#: ../../../reference/conan_server.rst:175
msgid ""
"**htpasswd**: Use your server Apache htpasswd file to authenticate users. "
"Get it: https://github.com/d-schiffner/conan-htpasswd"
msgstr ""

#: ../../../reference/conan_server.rst:177
msgid ""
"**LDAP**: Use your LDAP server to authenticate users. Get it: https://github."
"com/uilianries/conan-ldap-authentication"
msgstr ""

#: ../../../reference/conan_server.rst:181
msgid "Create Your Own Custom Authenticator"
msgstr "建立您自己的自訂認證器"

#: ../../../reference/conan_server.rst:183
msgid ""
"If you want to create your own Authenticator, create a Python module in ``~/."
"conan_server/plugins/authenticator/my_authenticator.py``"
msgstr ""

#: ../../../reference/conan_server.rst:186
#: ../../../reference/conan_server.rst:223
msgid "**Example:**"
msgstr "**範例：**"

#: ../../../reference/conan_server.rst:188
msgid ""
"def get_class():\n"
"    return MyAuthenticator()\n"
"\n"
"\n"
"class MyAuthenticator(object):\n"
"    def valid_user(self, username, plain_password):\n"
"        return username == \"foo\" and plain_password == \"bar\""
msgstr ""
"def get_class():\n"
"    return MyAuthenticator()\n"
"\n"
"\n"
"class MyAuthenticator(object):\n"
"    def valid_user(self, username, plain_password):\n"
"        return username == \"foo\" and plain_password == \"bar\""

#: ../../../reference/conan_server.rst:198
#: ../../../reference/conan_server.rst:249
msgid "The module has to implement:"
msgstr ""

#: ../../../reference/conan_server.rst:200
msgid ""
"A factory function ``get_class()`` that returns a class with a "
"``valid_user()`` method instance."
msgstr ""

#: ../../../reference/conan_server.rst:202
msgid ""
"The class containing the ``valid_user()`` that has to return True if the "
"user and password are valid or False otherwise."
msgstr ""

#: ../../../reference/conan_server.rst:206
msgid "Authorizations"
msgstr "授權"

#: ../../../reference/conan_server.rst:208
msgid ""
"By default, Conan uses the contents of the ``[read_permissions]`` and "
"``[write_permissions]`` sections to authorize or reject a request."
msgstr ""

#: ../../../reference/conan_server.rst:211
msgid ""
"A plugin system is also available to customize the authorization mechanism. "
"The installation of such a plugin is a simple two-step process:"
msgstr ""

#: ../../../reference/conan_server.rst:214
msgid ""
"Copy the authorizer's source file into the ``.conan_server/plugins/"
"authorizer`` folder."
msgstr ""

#: ../../../reference/conan_server.rst:215
msgid ""
"Add ``custom_authorizer: authorizer_name`` to the ``server.conf`` [server] "
"section."
msgstr ""

#: ../../../reference/conan_server.rst:218
msgid "Create Your Own Custom Authorizer"
msgstr "建立您自己的自訂授權器"

#: ../../../reference/conan_server.rst:220
msgid ""
"If you want to create your own Authorizer, create a Python module in ``~/."
"conan_server/plugins/authorizer/my_authorizer.py``"
msgstr ""

#: ../../../reference/conan_server.rst:225
msgid ""
"from conan.internal.errors import AuthenticationException, "
"ForbiddenException\n"
"\n"
"def get_class():\n"
"    return MyAuthorizer()\n"
"\n"
"class MyAuthorizer(object):\n"
"    def _check_conan(self, username, ref):\n"
"        if ref.user == username:\n"
"            return\n"
"\n"
"        if username:\n"
"            raise ForbiddenException(\"Permission denied\")\n"
"        else:\n"
"            raise AuthenticationException()\n"
"\n"
"    def _check_package(self, username, pref):\n"
"       self._check(username, pref.ref)\n"
"\n"
"    check_read_conan = _check_conan check_write_conan = _check_conan\n"
"    check_delete_conan = _check_conan check_read_package = _check_package\n"
"    check_write_package = _check_package check_delete_package = "
"_check_package"
msgstr ""

#: ../../../reference/conan_server.rst:251
msgid ""
"A factory function ``get_class()`` that returns an instance of a class "
"conforming to the Authorizer's interface."
msgstr ""

#: ../../../reference/conan_server.rst:261
msgid ""
"A class that implements all the methods defined in the Authorizer interface:"
msgstr ""

#: ../../../reference/conan_server.rst:254
msgid ""
"``check_read_conan()`` is used to decide whether to allow read access to a "
"recipe."
msgstr ""

#: ../../../reference/conan_server.rst:255
msgid ""
"``check_write_conan()`` is used to decide whether to allow write access to a "
"recipe."
msgstr ""

#: ../../../reference/conan_server.rst:256
msgid ""
"``check_delete_conan()`` is used to decide whether to allow a recipe's "
"deletion."
msgstr ""

#: ../../../reference/conan_server.rst:257
msgid ""
"``check_read_package()`` is used to decide whether to allow read access to a "
"package."
msgstr ""

#: ../../../reference/conan_server.rst:259
msgid ""
"``check_write_package()`` is used to decide whether to allow write access to "
"a package."
msgstr ""

#: ../../../reference/conan_server.rst:261
msgid ""
"``check_delete_package()`` is used to decide whether to allow a package's "
"deletion."
msgstr ""

#: ../../../reference/conan_server.rst:263
msgid ""
"The ``check_*_conan()`` methods are called with a username and ``conans."
"model.ref.ConanFileReference`` instance as their arguments. Meanwhile the "
"``check_*_package()`` methods are passed a username and ``conans.model.ref."
"PackageReference`` instance as their arguments. These methods should raise "
"an exception, unless the user is allowed to perform the requested action."
msgstr ""

#: ../../../reference/conan_server.rst:272
msgid "Running the Conan Server with SSL using Nginx"
msgstr ""

#: ../../../reference/conan_server.rst:276
#: ../../../reference/conan_server.rst:305
msgid "[server] port: 9300"
msgstr ""

#: ../../../reference/conan_server.rst:281
#: ../../../reference/conan_server.rst:309
msgid "**nginx conf file**"
msgstr ""

#: ../../../reference/conan_server.rst:283
msgid ""
"server {\n"
"    listen 443; server_name myservername.mydomain.com;\n"
"\n"
"    location / {\n"
"      proxy_pass http://0.0.0.0:9300;\n"
"    } ssl on; ssl_certificate /etc/nginx/ssl/server.crt; "
"ssl_certificate_key\n"
"    /etc/nginx/ssl/server.key;\n"
"}"
msgstr ""

#: ../../../reference/conan_server.rst:294
#: ../../../reference/conan_server.rst:324
msgid "**remote configuration in Conan client**"
msgstr ""

#: ../../../reference/conan_server.rst:296
msgid "$ conan remote add myremote https://myservername.mydomain.com"
msgstr "$ conan remote add myremote https://myservername.mydomain.com"

#: ../../../reference/conan_server.rst:301
msgid "Running the Conan Server with SSL using Nginx in a Subdirectory"
msgstr ""

#: ../../../reference/conan_server.rst:311
msgid ""
"server {\n"
"\n"
"       listen 443; ssl on; ssl_certificate /usr/local/etc/nginx/ssl/server."
"crt;\n"
"       ssl_certificate_key /usr/local/etc/nginx/ssl/server.key; server_name\n"
"       myservername.mydomain.com;\n"
"\n"
"       location /subdir/ {\n"
"          proxy_pass http://0.0.0.0:9300/;\n"
"       }\n"
"  }"
msgstr ""

#: ../../../reference/conan_server.rst:326
msgid "$ conan remote add myremote https://myservername.mydomain.com/subdir/"
msgstr "$ conan remote add myremote https://myservername.mydomain.com/subdir/"

#: ../../../reference/conan_server.rst:331
msgid "Running Conan Server using Apache"
msgstr "使用 Apache 執行 Conan 伺服端"

#: ../../../reference/conan_server.rst:333
msgid ""
"You need to install ``mod_wsgi``. If you want to use Conan installed from "
"``pip``, the conf file should be similar to the following example:"
msgstr ""

#: ../../../reference/conan_server.rst:336
#: ../../../reference/conan_server.rst:354
msgid "**Apache conf file** (e.g., /etc/apache2/sites-available/0_conan.conf)"
msgstr ""
"**Apache 組態檔**\\ （例如：/etc/apache2/sites-available/0_conan.conf）"

#: ../../../reference/conan_server.rst:338
msgid ""
"<VirtualHost *:80>\n"
"    WSGIScriptAlias /\n"
"    /usr/local/lib/python3.6/dist-packages/conans/server/server_launcher.py\n"
"    WSGICallableObject app WSGIPassAuthorization On\n"
"\n"
"    <Directory /usr/local/lib/python3.6/dist-packages/conans>\n"
"        Require all granted\n"
"    </Directory>\n"
"</VirtualHost>"
msgstr ""

#: ../../../reference/conan_server.rst:351
msgid ""
"If you want to use Conan checked out from source in, for example in `/srv/"
"conan`, the conf file should be as follows:"
msgstr ""

#: ../../../reference/conan_server.rst:356
msgid ""
"<VirtualHost *:80>\n"
"    WSGIScriptAlias / /srv/conan/conans/server/server_launcher.py\n"
"    WSGICallableObject app WSGIPassAuthorization On\n"
"\n"
"    <Directory /srv/conan/conans>\n"
"        Require all granted\n"
"    </Directory>\n"
"</VirtualHost>"
msgstr ""

#: ../../../reference/conan_server.rst:367
msgid ""
"The directive ``WSGIPassAuthorization On`` is needed to pass the HTTP basic "
"authentication to Conan."
msgstr ""

#: ../../../reference/conan_server.rst:370
msgid ""
"Also take into account that the server config files are located in the home "
"of the configured Apache user, e.g., var/www/.conan_server, so remember to "
"use that directory to configure your Conan server."
msgstr ""

#: ../../../reference/conan_server.rst:376
msgid ":ref:`Setting-up a Conan Server <conan_server>`"
msgstr ""
