# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/conanfile/methods/finalize.rst:4
msgid "finalize()"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:8
msgid ""
"Package immutability is an important concept in Conan. It ensures that the "
"package is not modified after it has been built and packaged, so that the "
"package id is consistent and the package can be reused in different machines."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:11
msgid ""
"This method is intended for customization of the package in the running "
"machine, allowing modifications to the package that will be used by the "
"consumers of the package, but not modifying the original package inside the "
"Conan cache. This method is called after the package has been installed in "
"the local cache and the modifications are not uploaded to any remote server, "
"they are only local."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:17
msgid "The main use-cases of this method include:"
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:19
msgid ""
"Having different packages that get modified when they are run (Like python "
"tools that generate pycache files as part of their execution)"
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:21
msgid ""
"Modifying the package to be used in the local machine (Like creating a "
"``conf`` file with the necessary environment variables for the package to be "
"used in the local machine)"
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:24
msgid ""
"These changes are transparent to the consumers of the package, they will use "
"the customized package as if they were dealing with the original package, so "
"changes made in this method should work."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:29
msgid "finalize() example usage"
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:31
msgid ""
"The most common use-case of this method is to avoid corrupting the "
"immutability of the package."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:33
msgid ""
"For example, if a package generates some files during its execution, like a "
"python package that generates pycache files, you can use this method to "
"generate those files in the local machine, without affecting the original "
"package. This is the case for tools like Meson."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:38
msgid ""
"from conan import ConanFile, conan_version\n"
"from conan.tools.files import copy\n"
"\n"
"\n"
"class MesonPackage(ConanFile):\n"
"    ...\n"
"\n"
"    def package(self):\n"
"        copy(self, \"*\", src=self.source_folder, dst=os.path.join(self."
"package_folder, \"bin\"))\n"
"        ...\n"
"\n"
"    def finalize(self):\n"
"        copy(self, \"*\", src=self.immutable_package_folder, dst=self."
"package_folder)"
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:55
msgid ""
"Here we are copying the files from the immutable package folder to the "
"finalized package folder, which inside the finalize method (and everywhere "
"after that point) will be the new package folder, so that any modifications "
"done by the package are done in the local finalized folder, without "
"affecting the original package."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:59
msgid ""
"For cases where it's necessary to access the original package, the "
"``immutable_package_folder`` attribute is available both in the same "
"recipe's ``self.immutable_package_folder`` and thru the ``self."
"dependencies[<package_name>].immutable_package_folder`` attribute in the "
"dependants' recipe. This info is also serialized as part of the graph "
"information in :command:`conan graph info` etc."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:64
msgid ""
"As this method must have a 1 to 1 correspondence to the generated package "
"id, access to ``self.settings``, ``self.options`` and ``self.cpp_info`` is "
"forbidden inside the ``finalize()`` method, and **must** be done thru the "
"``self.info`` attribute."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:70
msgid ""
"Without using this approach, the package would generate the pycache files in "
"the package folder, and thus there would be a need to set "
"``PYTHONDONTWRITEBYTECODE`` to avoid mutating the package, but this would "
"affect performance, and performing cache integrity checks either thru :"
"command:`conan cache check-integrity` or as part of the upload processes in :"
"command:`conan upload ... --check` would raise errors if the modified "
"package was ever checked."
msgstr ""

#: ../../../reference/conanfile/methods/finalize.rst:78
msgid ""
"This is not a replacement for the :ref:`post_package "
"<reference_extensions_hooks>` hook. The hook runs after the creation of the "
"package for a chance to modify it before the package_id is computed, but it "
"is not intended for modifications of the package for a particular running "
"machine."
msgstr ""
