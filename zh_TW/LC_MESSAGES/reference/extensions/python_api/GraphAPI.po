# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.15\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/extensions/python_api/GraphAPI.rst:2
msgid "Graph API"
msgstr ""

#: ../../../common/experimental_warning.inc:3
msgid ""
"This feature is experimental and subject to breaking changes. See :ref:`the "
"Conan stability<stability>` section for more information."
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:1
msgid ""
"Create and initialize a root node from a test_package/conanfile.py consumer"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:0
#: conan.api.subapi.graph.GraphAPI.load_graph:0
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:0
msgid "Parameters"
msgstr "參數"

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:3
msgid "the reference of the ``python_require`` to be tested"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:4
msgid "Might be good to lock python-requires, build-requires"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:5
msgid "The full path to the test_package/conanfile.py being used"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:6
msgid "The full RecipeReference of the tested package"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:0
msgid "Returns"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_root_test_conanfile:11
msgid "a graph Node, recipe=RECIPE_CONSUMER"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:1
msgid ""
"Compute the dependency graph, starting from a root package, evaluation the "
"graph with the provided configuration in profile_build, and profile_host. "
"The resulting graph is a graph of recipes, but packages are not computed yet "
"(package_ids) will be empty in the result. The result might have errors, "
"like version or configuration conflicts, but it is still possible to inspect "
"it. Only trying to install such graph will fail"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:7
msgid ""
"the starting point, an already initialized Node structure, as returned by "
"the \"load_root_node\" api"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:9
msgid "The host profile"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:10
msgid "The build profile"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:11
msgid "A valid lockfile (None by default, means no locked)"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:12
msgid "list of remotes we want to check"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:9
#: conan.api.subapi.graph.GraphAPI.load_graph:13
msgid ""
"(False by default), if Conan should look for newer versions or revisions for "
"already existing recipes in the Conan cache"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.load_graph:15
msgid "For \"graph info\" command, check if there are recipe updates"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:1
msgid ""
"Given a dependency graph, will compute the package_ids of all recipes in the "
"graph, and evaluate if they should be built from sources, downloaded from a "
"remote server, of if the packages are already in the local Conan cache"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:6
msgid "a Conan dependency graph, as returned by \"load_graph()\""
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:7
msgid "TODO: Discuss if this should be a BuildMode object or list of arguments"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:8
msgid "list of remotes"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:11
msgid "the --build-test argument"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.analyze_binaries:12
msgid "In case of a \"test_package\", the graph being tested"
msgstr ""

#: ../../../conan_sources/conan/api/subapi/graph.py:docstring of
#: conan.api.subapi.graph.GraphAPI.find_first_missing_binary:1
msgid ""
"(Experimental) Given a dependency graph, will return the first node with a "
"missing binary package"
msgstr ""
