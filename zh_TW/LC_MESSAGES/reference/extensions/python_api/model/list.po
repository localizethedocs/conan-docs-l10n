# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.20\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-23 08:25+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/extensions/python_api/model/list.rst:2
msgid "List classes"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.PackagesList:1
msgid "A collection of recipes, revisions and packages."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.PackagesList.split:1
msgid ""
"Returns a list of PackageList, splitted one per reference. This can be "
"useful to parallelize things like upload, parallelizing per-reference"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.PackagesList.only_recipes:1
msgid ""
"Filter out all the packages and package revisions, keep only the recipes and "
"recipe revisions in self.recipes."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.PackagesList.serialize:1
msgid "Serialize the instance to a dictionary."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.PackagesList.deserialize:1
msgid "Loads the data from a serialized dictionary."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList:1
msgid "A collection of PackagesList by remote name."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.serialize:1
msgid "Serialize object to a dictionary."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load:1
msgid ""
"Create an instance of the class from a serialized JSON file path pointed by "
"``file``."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load_graph:1
msgid ""
"Create an instance of the class from a graph file path, which is the json "
"format returned by a few commands like ``conan graph info`` or ``conan "
"create/install.``"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:0
#: conan.api.model.list.MultiPackagesList.load_graph:0
msgid "Parameters"
msgstr "參數"

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load_graph:5
msgid "Path to the graph file"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load_graph:6
msgid ""
"List for kinds of recipes to return. For example ``\"cache\"`` will return "
"only recipes in the local cache, ``\"download\"`` will return only recipes "
"that have been downloaded, and passing ``\"*\"`` will return all recipes."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load_graph:10
msgid ""
"List for kinds of binaries to return. For example ``\"cache\"`` will return "
"only binaries in the local cache, ``\"download\"`` will return only binaries "
"that have been downloaded, ``\"build\"`` will return only binaries that are "
"built, ``\"missing\"`` will return only binaries that are missing, "
"``\"invalid\"`` will return only binaries that are invalid, and passing "
"``\"*\"`` will return all binaries."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.MultiPackagesList.load_graph:17
msgid ""
"Context to filter the graph, can be ``\"host\"``, ``\"build\"``, ``\"host-"
"only\"`` or ``\"build-only\"``"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:1
msgid "Object holding a pattern that matches recipes, revisions and packages."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:3
msgid "The pattern to match, e.g. ``\"name/*:*\"``"
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:4
msgid ""
"The recipe revision to match, defaults to ``\"latest\"``, can also be ``\"!"
"latest\"`` or ``\"~latest\"`` to match all but the latest revision, a "
"pattern like ``\"1234*\"`` to match a specific revision, or a specific "
"revision like ``\"1234\"``."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:8
msgid ""
"The package ID to match, defaults to ``None``, which matches all package IDs."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:9
msgid ""
"The package revision to match, defaults to ``\"latest\"``, can also be ``\"!"
"latest\"`` or ``\"~latest\"`` to match all but the latest revision, a "
"pattern like ``\"1234*\"`` to match a specific revision, or a specific "
"revision like ``\"1234\"``."
msgstr ""

#: ../../../conan_sources/conan/api/model/list.py:docstring of
#: conan.api.model.list.ListPattern:13
msgid ""
"If ``True``, only the recipe part of the expression is parsed, ignoring "
"``package_id`` and ``prev``. This is useful for commands that only operate "
"on recipes, like ``conan search``."
msgstr ""
