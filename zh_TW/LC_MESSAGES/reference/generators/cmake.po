# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2018, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 1.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 10:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/generators/cmake.rst:5
msgid "`cmake`"
msgstr ""

#: ../../../reference/generators/cmake.rst:9
msgid ""
"This is the reference page for ``cmake`` generator. Go to :ref:`Integrations/"
"CMake<cmake>` if you want to learn how to integrate your project or recipes "
"with CMake."
msgstr ""

#: ../../../reference/generators/cmake.rst:13
msgid ""
"It generates a file named ``conanbuildinfo.cmake`` and declares some "
"variables and methods"
msgstr ""

#: ../../../reference/generators/cmake.rst:18
msgid "Variables in conanbuildinfo.cmake"
msgstr ""

#: ../../../reference/generators/cmake.rst:20
msgid "**Package declared vars**"
msgstr ""

#: ../../../reference/generators/cmake.rst:22
msgid ""
"For each requirement ``conanbuildinfo.cmake`` file declares the following "
"variables. ``XXX`` is the name of the require in uppercase. e.k \"ZLIB\" for "
"``zlib/1.2.8@lasote/stable`` requirement:"
msgstr ""

#: ../../../reference/generators/cmake.rst:26
#: ../../../reference/generators/cmake.rst:58
#: ../../../reference/generators/cmake.rst:88
#: ../../../reference/generators/cmake.rst:148
msgid "NAME"
msgstr ""

#: ../../../reference/generators/cmake.rst:26
#: ../../../reference/generators/cmake.rst:58
#: ../../../reference/generators/cmake.rst:88
msgid "VALUE"
msgstr ""

#: ../../../reference/generators/cmake.rst:28
msgid "CONAN_XXX_ROOT"
msgstr ""

#: ../../../reference/generators/cmake.rst:28
msgid "Abs path to root package folder."
msgstr ""

#: ../../../reference/generators/cmake.rst:30
msgid "CONAN_INCLUDE_DIRS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:30
msgid "Header's folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:32
msgid "CONAN_LIB_DIRS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:32
msgid "Library folders  (default {CONAN_XXX_ROOT}/lib)"
msgstr ""

#: ../../../reference/generators/cmake.rst:34
msgid "CONAN_BIN_DIRS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:34
msgid "Binary folders  (default {CONAN_XXX_ROOT}/bin)"
msgstr ""

#: ../../../reference/generators/cmake.rst:36
msgid "CONAN_SRC_DIRS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:36
msgid "Sources folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:38
msgid "CONAN_LIBS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:38
msgid "Library names to link"
msgstr ""

#: ../../../reference/generators/cmake.rst:40
msgid "CONAN_DEFINES_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:40
msgid "Library defines"
msgstr ""

#: ../../../reference/generators/cmake.rst:42
msgid "CONAN_COMPILE_DEFINITIONS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:42
msgid "Compile definitions"
msgstr ""

#: ../../../reference/generators/cmake.rst:44
msgid "CONAN_CXX_FLAGS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:44
msgid "CXX flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:46
msgid "CONAN_SHARED_LINK_FLAGS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:46
msgid "Shared link flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:48
msgid "CONAN_C_FLAGS_XXX"
msgstr ""

#: ../../../reference/generators/cmake.rst:48
msgid "C flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:52
msgid "**Global declared vars**"
msgstr ""

#: ../../../reference/generators/cmake.rst:54
msgid ""
"Conan also declares some global variables with the aggregated values of all "
"our requirements. The values are ordered in the right order according to the "
"dependency tree."
msgstr ""

#: ../../../reference/generators/cmake.rst:60
msgid "CONAN_INCLUDE_DIRS"
msgstr ""

#: ../../../reference/generators/cmake.rst:60
msgid "Aggregated header's folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:62
msgid "CONAN_LIB_DIRS"
msgstr ""

#: ../../../reference/generators/cmake.rst:62
msgid "Aggregated library folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:64
msgid "CONAN_BIN_DIRS"
msgstr ""

#: ../../../reference/generators/cmake.rst:64
msgid "Aggregated binary folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:66
msgid "CONAN_SRC_DIRS"
msgstr ""

#: ../../../reference/generators/cmake.rst:66
msgid "Aggregated sources folders"
msgstr ""

#: ../../../reference/generators/cmake.rst:68
msgid "CONAN_LIBS"
msgstr ""

#: ../../../reference/generators/cmake.rst:68
msgid "Aggregated library names to link"
msgstr ""

#: ../../../reference/generators/cmake.rst:70
msgid "CONAN_DEFINES"
msgstr ""

#: ../../../reference/generators/cmake.rst:70
msgid "Aggregated library defines"
msgstr ""

#: ../../../reference/generators/cmake.rst:72
msgid "CONAN_COMPILE_DEFINITIONS"
msgstr ""

#: ../../../reference/generators/cmake.rst:72
msgid "Aggregated compile definitions"
msgstr ""

#: ../../../reference/generators/cmake.rst:74
msgid "CONAN_CXX_FLAGS"
msgstr ""

#: ../../../reference/generators/cmake.rst:74
msgid "Aggregated CXX flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:76
msgid "CONAN_SHARED_LINK_FLAGS"
msgstr ""

#: ../../../reference/generators/cmake.rst:76
msgid "Aggregated Shared link flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:78
msgid "CONAN_C_FLAGS"
msgstr ""

#: ../../../reference/generators/cmake.rst:78
msgid "Aggregated C flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:82
msgid "**Variables from user_info**"
msgstr ""

#: ../../../reference/generators/cmake.rst:84
msgid ""
"If any of the requirements is filling the :ref:"
"`user_info<method_package_info_user_info>` object in the :ref:"
"`package_info<method_package_info>` method a set of variables will be "
"declared following this naming:"
msgstr ""

#: ../../../reference/generators/cmake.rst:90
msgid "CONAN_USER_XXXX_YYYY"
msgstr ""

#: ../../../reference/generators/cmake.rst:90
msgid "User declared value"
msgstr ""

#: ../../../reference/generators/cmake.rst:93
msgid ""
"``XXXX`` is the name of the requirement in uppercase and ``YYYY`` the "
"variable name, e.g.:"
msgstr ""

#: ../../../reference/generators/cmake.rst:96
msgid ""
"class MyLibConan(ConanFile):\n"
"    name = \"MyLib\"\n"
"    version = \"1.6.0\"\n"
"\n"
"    # ...\n"
"\n"
"    def package_info(self):\n"
"        self.user_info.var1 = 2"
msgstr ""

#: ../../../reference/generators/cmake.rst:109
msgid "When other library requires ``MyLib`` and uses the cmake generator:"
msgstr ""

#: ../../../reference/generators/cmake.rst:111
msgid "**conanbuildinfo.cmake**:"
msgstr ""

#: ../../../reference/generators/cmake.rst:113
msgid ""
"# ...\n"
"set(CONAN_USER_MYLIB_var1 \"2\")"
msgstr ""

#: ../../../reference/generators/cmake.rst:123
msgid "Methods available in conanbuildinfo.cmake"
msgstr ""

#: ../../../reference/generators/cmake.rst:126
msgid "conan_basic_setup"
msgstr ""

#: ../../../reference/generators/cmake.rst:128
msgid ""
"Setup all the CMake vars according to our settings, by default with the "
"global approach (no targets)."
msgstr ""

#: ../../../reference/generators/cmake.rst:130
msgid ""
"**parameters**: You can combine several parameters to the "
"``conan_basic_setup`` macro, e.g., ``conan_basic_setup(TARGETS KEEP_RPATHS)``"
msgstr ""

#: ../../../reference/generators/cmake.rst:132
msgid "``TARGETS``:  Setup all the CMake vars by target (only CMake > 3.1.2)"
msgstr ""

#: ../../../reference/generators/cmake.rst:133
msgid "``NO_OUTPUT_DIRS``: Do not adjust the output directories"
msgstr ""

#: ../../../reference/generators/cmake.rst:134
msgid "``KEEP_RPATHS``: Do not adjust the CMAKE_SKIP_RPATH variable in OSX"
msgstr ""

#: ../../../reference/generators/cmake.rst:138
msgid "conan_target_link_libraries"
msgstr ""

#: ../../../reference/generators/cmake.rst:140
msgid "Helper to link all libraries to a specified target."
msgstr ""

#: ../../../reference/generators/cmake.rst:143
msgid "Other optional methods and variables"
msgstr ""

#: ../../../reference/generators/cmake.rst:145
msgid ""
"There are other methods automatically called by ``conan_basic_setup()`` but "
"you can use them directly:"
msgstr ""

#: ../../../reference/generators/cmake.rst:148
msgid "DESCRIPTION"
msgstr ""

#: ../../../reference/generators/cmake.rst:150
msgid "conan_check_compiler()"
msgstr ""

#: ../../../reference/generators/cmake.rst:150
msgid "Checks that your compiler matches the one declared in settings"
msgstr ""

#: ../../../reference/generators/cmake.rst:152
msgid "Can be disabled setting ``CONAN_DISABLE_CHECK_COMPILER`` CMake var"
msgstr ""

#: ../../../reference/generators/cmake.rst:154
msgid "conan_output_dirs_setup()"
msgstr ""

#: ../../../reference/generators/cmake.rst:154
msgid "Adjust the bin/ and lib/ output directories"
msgstr ""

#: ../../../reference/generators/cmake.rst:156
msgid "conan_set_find_library_paths()"
msgstr ""

#: ../../../reference/generators/cmake.rst:156
msgid "Set CMAKE_INCLUDE_PATH and CMAKE_INCLUDE_PATH"
msgstr ""

#: ../../../reference/generators/cmake.rst:158
msgid "conan_global_flags()"
msgstr ""

#: ../../../reference/generators/cmake.rst:158
msgid "Set include_directories, link_directories, link_directories, flags"
msgstr ""

#: ../../../reference/generators/cmake.rst:160
msgid "conan_define_targets()"
msgstr ""

#: ../../../reference/generators/cmake.rst:160
msgid "Define the targets (target flags instead of global flags)"
msgstr ""

#: ../../../reference/generators/cmake.rst:162
msgid "conan_set_rpath()"
msgstr ""

#: ../../../reference/generators/cmake.rst:162
msgid "Set CMAKE_SKIP_RPATH=1  if APPLE"
msgstr ""

#: ../../../reference/generators/cmake.rst:164
msgid "conan_set_vs_runtime()"
msgstr ""

#: ../../../reference/generators/cmake.rst:164
msgid "Adjust the runtime flags (/MD /MDd /MT /MTd)"
msgstr ""

#: ../../../reference/generators/cmake.rst:166
msgid "conan_set_libcxx(TARGETS)"
msgstr ""

#: ../../../reference/generators/cmake.rst:166
msgid "Adjust the standard library flags (libstdc++, libc++, libstdc++11)"
msgstr ""

#: ../../../reference/generators/cmake.rst:168
msgid "conan_set_find_paths()"
msgstr ""

#: ../../../reference/generators/cmake.rst:168
msgid "Adjust CMAKE_MODULE_PATH and CMAKE_PREFIX_PATH"
msgstr ""

#: ../../../reference/generators/cmake.rst:170
msgid "CONAN_CMAKE_SILENT_OUTPUT"
msgstr ""

#: ../../../reference/generators/cmake.rst:170
msgid "Silences the Conan message output"
msgstr ""

#: ../../../reference/generators/cmake.rst:174
msgid "Targets generated by conanbuildinfo.cmake"
msgstr ""

#: ../../../reference/generators/cmake.rst:176
msgid ""
"If you use ``conan_basic_setup(TARGETS)``, then some cmake targets will be "
"generated (this only works for CMake > 3.1.2)"
msgstr ""

#: ../../../reference/generators/cmake.rst:178
msgid "These targets are:"
msgstr ""

#: ../../../reference/generators/cmake.rst:180
msgid ""
"A ``CONAN_PKG::PkgName`` target per package in the dependency graph. This is "
"an ``IMPORTED INTERFACE`` target. IMPORTED because it is external, a pre-"
"compiled library. INTERFACE, because it doesn't necessarily match a library, "
"it could be a header-only library, or the package could even contain several "
"libraries. It contains all the properties (include paths, compile flags, "
"etc) that are defined in the ``package_info()`` method of the package."
msgstr ""

#: ../../../reference/generators/cmake.rst:184
msgid ""
"Inside each package a ``CONAN_LIB::PkgName_LibName`` target will be "
"generated for each library. Its type is ``IMPORTED UNKNOWN``, its main "
"purpose is to provide a correct link order. Their only properties are the "
"location and the dependencies"
msgstr ""

#: ../../../reference/generators/cmake.rst:187
msgid ""
"A ``CONAN_PKG`` depends on every ``CONAN_LIB`` that belongs to it, and to "
"its direct public dependencies (i.e. other ``CONAN_PKG`` targets from its "
"``requires``)"
msgstr ""

#: ../../../reference/generators/cmake.rst:189
msgid ""
"Each ``CONAN_LIB`` depends on the direct public dependencies ``CONAN_PKG`` "
"targets of its container package. This guarantees correct link order."
msgstr ""
