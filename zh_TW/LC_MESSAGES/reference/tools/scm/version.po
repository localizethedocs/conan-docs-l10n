# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:33+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../reference/tools/scm/version.rst:4
msgid "Version"
msgstr "版本"

#: ../../../reference/tools/scm/version.rst:6
msgid ""
"This is a helper class to work with versions, it splits the version string "
"based on dots and hyphens. It exposes all the version components as "
"properties and offers total ordering through compare operators."
msgstr ""

#: ../../../reference/tools/scm/version.rst:9
msgid "Comparing versions"
msgstr ""

#: ../../../reference/tools/scm/version.rst:9
msgid ""
" compiler_lower_than_12 = Version(self.settings.compiler.version) < "
"\"12.0\"\n"
"\n"
" is_legacy = Version(self.version) < 2"
msgstr ""

#: ../../../conan_sources/conans/model/version.py:docstring of
#: conans.model.version.Version:1
msgid ""
"This is NOT an implementation of semver, as users may use any pattern in "
"their versions. It is just a helper to parse \".\" or \"-\" and compare "
"taking into account integers when possible"
msgstr ""

#: ../../../reference/tools/scm/version.rst:21
msgid "Attributes"
msgstr ""

#: ../../../reference/tools/scm/version.rst:23
msgid ""
"The ``Version`` class offers ways to access the different parts of the "
"version number:"
msgstr ""

#: ../../../reference/tools/scm/version.rst:26
msgid "main"
msgstr ""

#: ../../../reference/tools/scm/version.rst:28
msgid "Get all the main digits."
msgstr ""

#: ../../../reference/tools/scm/version.rst:30
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert [str(i) for i in v.main] == ['1', '2', '3', '4', '5']"
msgstr ""

#: ../../../reference/tools/scm/version.rst:36
msgid "major"
msgstr ""

#: ../../../reference/tools/scm/version.rst:38
msgid "Get the major digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:40
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.major) == \"1\""
msgstr ""

#: ../../../reference/tools/scm/version.rst:46
msgid "minor"
msgstr ""

#: ../../../reference/tools/scm/version.rst:48
msgid "Get the minor digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:50
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.minor) == \"2\""
msgstr ""

#: ../../../reference/tools/scm/version.rst:57
msgid "patch"
msgstr ""

#: ../../../reference/tools/scm/version.rst:59
msgid "Get the patch digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:61
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.patch) == \"3\""
msgstr ""

#: ../../../reference/tools/scm/version.rst:68
msgid "micro"
msgstr ""

#: ../../../reference/tools/scm/version.rst:70
msgid "Get the micro digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:72
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.micro) == \"4\""
msgstr ""

#: ../../../reference/tools/scm/version.rst:79
msgid "pre"
msgstr ""

#: ../../../reference/tools/scm/version.rst:81
msgid "Get the pre-release digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:83
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.pre) == \"alpha.3\""
msgstr ""

#: ../../../reference/tools/scm/version.rst:89
msgid "build"
msgstr ""

#: ../../../reference/tools/scm/version.rst:91
msgid "Get the build digit."
msgstr ""

#: ../../../reference/tools/scm/version.rst:93
msgid ""
"v = Version(\"1.2.3.4-alpha.3+b1\")\n"
"assert str(v.build) == \"b1\""
msgstr ""
