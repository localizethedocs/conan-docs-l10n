# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2024, JFrog
# This file is distributed under the same license as the conan package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: conan 2.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-09-15 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../tutorial/other_features.rst:4
msgid "Other important Conan features"
msgstr ""

#: ../../../tutorial/other_features.rst:7
msgid "python_requires"
msgstr ""

#: ../../../tutorial/other_features.rst:9
msgid ""
"It is possible to reuse code from other recipes using the :ref:"
"`python_requires feature<reference_extensions_python_requires>`."
msgstr ""

#: ../../../tutorial/other_features.rst:11
msgid ""
"If you maintain many recipes for different packages that share some common "
"logic and you don't want to repeat the code in every recipe, you can put "
"that common code in a Conan ``conanfile.py``, upload it to your server, and "
"have other recipe conanfiles do a ``python_requires = \"mypythoncode/"
"version\"`` to depend on it and reuse it."
msgstr ""

#: ../../../tutorial/other_features.rst:16
msgid "Packages lists"
msgstr ""

#: ../../../tutorial/other_features.rst:18
msgid ""
"It is possible to manage a list of packages, recipes and binaries together "
"with the \"packages-list\" feature. Several commands like ``upload``, "
"``download``, and ``remove`` allow receiving a list of packages file as an "
"input, and they can do their operations over that list. A typical use case "
"is to \"upload to the server the packages that have been built in the last "
"``conan create``\", which can be done with:"
msgstr ""

#: ../../../tutorial/other_features.rst:22
msgid ""
"$ conan create . --format=json > build.json\n"
"$ conan list --graph=build.json --graph-binaries=build --format=json > "
"pkglist.json\n"
"$ conan upload --list=pkglist.json -r=myremote -c"
msgstr ""

#: ../../../tutorial/other_features.rst:28
msgid "See the :ref:`examples in this section<examples_commands_pkglists>`."
msgstr ""

#: ../../../tutorial/other_features.rst:32
msgid "Removing unused packages from the cache"
msgstr ""

#: ../../../tutorial/other_features.rst:36
msgid ""
"The least recently used feature is in **preview**. See :ref:`the Conan "
"stability<stability>` section for more information."
msgstr ""

#: ../../../tutorial/other_features.rst:40
msgid ""
"The Conan cache does not implement any automatic expiration policy, so its "
"size will be always increasing unless packages are removed or the cache is "
"removed from time to time. It is possible to remove recipes and packages "
"that haven't been used recently, while keeping those that have been used in "
"a given time period (Least Recently Used LRU policy). This can be done with "
"the ``--lru`` argument to ``conan remove`` and ``conan list`` commands:"
msgstr ""

#: ../../../tutorial/other_features.rst:45
msgid ""
"# remove all binaries (but not recipes) not used in the last 4 weeks\n"
"$ conan remove \"*:*\" --lru=4w -c\n"
"# remove all recipes that have not been used in the last 4 weeks (with their "
"binaries)\n"
"$ conan remove \"*\" --lru=4w -c"
msgstr ""

#: ../../../tutorial/other_features.rst:53
msgid ""
"Note that the LRU time follows the rules of the ``remove`` command. If we "
"are removing recipes with a ``\"*\"`` pattern, only the LRU times for "
"recipes will be checked. If a recipe has been recently used, it will keep "
"all the binaries, and if the recipe has not been recently used, it will "
"remove itself and all its binaries. If we use a ``\"*:*\"`` pattern, it will "
"check for binaries only, and remove those unused, but always leaving the "
"recipe."
msgstr ""

#: ../../../tutorial/other_features.rst:58
msgid ""
"Using ``conan list`` first (take into account that ``conan list`` do not "
"default to list all revisions, as opposed to ``remove``, so it is necessary "
"to explicit the ``#*`` to select all revisions if that is the intention) it "
"is possible to create a list of least recently used packages:"
msgstr ""

#: ../../../tutorial/other_features.rst:62
msgid ""
"# List all unused (last 4 weeks) recipe revisions\n"
"$ conan list \"*#*\" --lru=4w --format=json > old.json\n"
"# Remove those recipe revisions (and their binaries)\n"
"$ conan remove --list=old.json -c"
msgstr ""

#: ../../../tutorial/other_features.rst:69
msgid ""
"See commands help :ref:`reference_commands_remove` and :ref:"
"`reference_commands_list`."
msgstr ""
